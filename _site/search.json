[
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03_3.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03_3.html",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "FishEye has learned that SouthSeafood Express Corp has been caught fishing illegally. The scandal caused a major disruption in the close-knit fishing community. FishEye has been collecting data on ship movements and shipping records in hopes that they could assemble a cohesive store of knowledge that will allow them to better understand local commercial fishing behavior.\n\n\n\nFishEye analysts need your help to perform geographic and temporal analysis of the CatchNet data so they can prevent illegal fishing from happening again. This includes:\n\nVisualization system to associate vessels with their probable cargos, including seasonality analysis to detect any anomalies in port exit records.\nVisualization to illustrate inappropriate behavior of SouthSeafood Express Corp Vessels, in terms of vessel movements, catch contents, regions where illegal fishing is performed, telling-signs of suspicious behaviors.\nIdentifying vessels engaging in similar behavious to SouthSeafood Express Corp.\nVisualizing changes in fishing activities after SouthSeafood Express was caught.\n\n\n\n\n\n\n\n\n\nCode\n# load package\npacman::p_load(jsonlite, tidyverse, tidyr, \n               knitr, lubridate, dplyr, \n               igraph, ggraph, ggdist, ggplot2, \n               SmartEDA, sf, tidygraph, reshape2, readr,\n               DT, patchwork,plotly)\n\n# load data\nmc2_data &lt;- fromJSON(\"data/mc2.json\")\n#oceanus_geog = st_read(\"data/Oceanus Geography.geojson\") %&gt;% st_transform(crs = 4326)\n\n\n\n\n\nReference: Kickstarter 2 by Prof Kam\n\n\n\nExtracting JSON file edges to tibble data frame and removing duplicates\nConverting to the correct data types for datetime\nRenaming columns starting with “_ xx_” to minimize downstream syntax errors.\nCreating subsets of data tables based on column of “type”\nRenaming of columns to provide context and unique identifiers for downstream data mapping.\nSpecifically for tx_c, adjustment of transaction date, T0 to T-1 as fish import generally leave harbor one day after delivery\nResultant data sets include:\n\n\n\n\n\n\n\n\nResultant Edges Data Set\nUnique columns\n\n\n\n\nTransactions (i.e., tx_c)\nCargo_id, Destination, Transaction date, Fish species\n\n\nTransponder Ping (i.e., E_Tping_c)\nStart_time, Dwell, Ping source, Vessel_id\n\n\nHabor Arrival Report (E_Hbrpt_c)\nVessel_id, Port, Key, Arrival date, Port master, Aphorism, Holiday Greeting, Saying of the Sea, Wisdom\n\n\n\n\n\nCode\n#assigning to mc2_edges2\nmc2_edges &lt;- as_tibble(mc2_data$links) %&gt;% \n  distinct() \n\n#correcting data type - converting to date format\nmc2_edges$time &lt;- as_datetime(mc2_edges$time)\nmc2_edges$\"_last_edited_date\" &lt;- as_datetime(mc2_edges$\"_last_edited_date\")\nmc2_edges$\"_date_added\" &lt;- as_datetime(mc2_edges$\"_date_added\")\nmc2_edges$date &lt;- as_datetime(mc2_edges$date)\n\n\n#renaming headers with \"_\" to prevent errors. \nmc2_edges &lt;- mc2_edges %&gt;%\n  rename(\"last_edited_by\" = \"_last_edited_by\",\n         \"date_added\" = \"_date_added\",\n         \"last_edited_date\" = \"_last_edited_date\",\n         \"raw_source\" = \"_raw_source\",\n         \"algorithm\" = \"_algorithm\") \n\n#checking data format\n#glimpse(mc2_edges)\n\n# Breaking into subsets based on event category\nE_TransponderPing &lt;- subset(mc2_edges,  mc2_edges$type == \"Event.TransportEvent.TransponderPing\")\nE_HarborRpt &lt;- subset(mc2_edges,  mc2_edges$type == \"Event.HarborReport\")\nE_Tx &lt;- subset(mc2_edges, mc2_edges$type == \"Event.Transaction\")\n\n# Dropping columns that are NULL and renaming variables to separate them\n\n# Transactions\nE_Tx_c &lt;- E_Tx %&gt;%\n  rename(\n  cargo_id = source, \n  dest = target,\n  tx_date = date) %&gt;%\n  mutate(tx_date = tx_date -1) %&gt;% # adjustment for records\n  select(-c(key, algorithm, `raw_source`, `type`, `data_author`, `aphorism`, `holiday_greeting`, `wisdom`, `saying of the sea`, `time`, `dwell`)) \n\n# Separating the fish species for the respective cargo \ntx_sub1 &lt;- E_Tx_c[grep(\"^City of\", E_Tx_c$dest), ]\ntx_sub2 &lt;- E_Tx_c[!grepl(\"^City of\", E_Tx_c$dest), ]\ntx_sub2 &lt;- tx_sub2 %&gt;% rename(fish_species = dest)\n\ntx_c &lt;- left_join(tx_sub1, tx_sub2 %&gt;% select(cargo_id, fish_species), by = \"cargo_id\")\n\n# Dropping raw source: All Oceanus Centralized Export/Import Archive and Notatification Service (OCEANS)\n# Dropping algorithm: CatchMate ('arrrr' edition)\n# Null columns - Data author, aphorism, holiday_greeting, wisdom, saying of the sea, time, dwell\n\n# Transponder Ping\nE_Tping_c &lt;- E_TransponderPing %&gt;%\n  rename(vessel_id = target, \n         ping_source = source,\n         start_time = time) %&gt;%\n  select(-c(key, `algorithm`, `raw_source`, `type`, `date`, `data_author`, `aphorism`, `holiday_greeting`, `wisdom`, `saying of the sea`)) \n\n#Dropping raw_source: All Oceanus Vessel Locator System\n#Dropping algorithm: All OVLS-Catch&Hook\n# Null columns - Date, Data author, aphorism, holiday_greeting, wisdom, saying of the sea\n\n# Habour Report\nE_Hbrpt_c &lt;- E_HarborRpt %&gt;% rename(\n  vessel_id = source, \n  port = target, \n  arr_date = date, \n  port_master = data_author, \n  saying = `saying of the sea`\n) %&gt;%\n  select(-c(`algorithm`, `type`, `time`, `dwell`)) \n\n#Dropping algorithm: All HarborReportMaster 3.11\n#Retain raw_source: Differing values depending on which Port / City\n# check meaning of key (0,1,2)\n\nrm(tx_sub1, tx_sub2, E_TransponderPing,  E_HarborRpt, E_Tx)\n\n\n\n\n\nRepeating similar steps for nodes records, we obtained the following resultant data set. To minimize the number of data sets, we appended nodes information on vessels and region into a combined data set, with an assigned label to identify it’s category. (e.g., vessel_type)\n\n\n\n\n\n\n\nResultant Nodes Data Sets\nUnique Columns\n\n\n\n\nN_fish (Fishes and their description)\nFish_id, fish species\n\n\nN_Delivery_Doc (Cargo and details)\nCargo_id, quantity in tons, delivery date\n\n\nN_vessel (Vessels and their description)\nVessel_id, vessel name, vessel company, flag country, tonnage, overall length, vessel type\n\n\nLocation_legend (Point, City, Region)\nArea, activities, kind, fish_species\n\n\n\n\n\nCode\n#segmenting nodes data and checking for distinct records\nmc2_nodes &lt;- as_tibble(mc2_data$nodes) %&gt;%\n  distinct()\n\n#renaming to remove the \"_\" \nmc2_nodes &lt;- mc2_nodes %&gt;%\n  rename(\"last_edited_by\" = \"_last_edited_by\",\n         \"date_added\" = \"_date_added\",\n         \"last_edited_date\" = \"_last_edited_date\",\n         \"raw_source\" = \"_raw_source\",\n         \"algorithm\" = \"_algorithm\") \n\n#tidying the text data to remove nested list.\n\nmc2_nodes_tidied &lt;- mc2_nodes %&gt;%\n  mutate(Activities = gsub(\"c[(]\", \"\", Activities)) %&gt;% \n  mutate(Activities = gsub(\"\\\"\", \"\", Activities)) %&gt;%\n  mutate(Activities = gsub(\"[)]\", \"\", Activities)) \n\nmc2_nodes_tidied &lt;- mc2_nodes_tidied %&gt;%\n  mutate(fish_species_present = gsub(\"c[(]\", \"\", fish_species_present)) %&gt;% \n  mutate(fish_species_present = gsub(\"\\\"\", \"\", fish_species_present)) %&gt;%\n  mutate(fish_species_present = gsub(\"[)]\", \"\", fish_species_present)) \n\n# Creating subset on nodes information\nN_fish &lt;- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Commodity.Fish\") %&gt;%\n  select_if(~ !any(is.na(.))) %&gt;% \n  select(-c(`type`, `raw_source`, `algorithm`, `Activities`, `fish_species_present`)) %&gt;%\n  rename(fish_species = name, \n         fish_id = id)\n\nNL_City &lt;- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Location.City\") %&gt;%\n  select_if(~ !any(is.na(.))) %&gt;%\n  select(-c(`raw_source`, `algorithm`, `type`, `fish_species_present`)) %&gt;%\n  rename(city_name = Name, \n         city_id = id)\n\n\nNL_Point &lt;- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Location.Point\") %&gt;%\n  select_if(~ !any(is.na(.))) %&gt;%\n  select(-c(`raw_source`, `algorithm`, `kind`, `fish_species_present`)) %&gt;%\n  rename(point_name = Name, \n         point_id = id)\n\n## Need to tidy NL Region\nNL_Region &lt;- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Location.Region\") %&gt;%\n  select_if(~ !any(is.na(.))) %&gt;%\n  select(-c(`raw_source`, `algorithm`, `type`, `Description`)) %&gt;%\n  rename(region_name = Name, \n         region_id = id, \n         region_kind = kind)\n\nN_Delivery_doc &lt;- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Document.DeliveryReport\") %&gt;%\n  select_if(~ !any(is.na(.))) %&gt;%\n  rename(deliver_date = date,\n         cargo_id = id) %&gt;%\n  select(-c(`algorithm`, `type`, `raw_source`, `Activities`, `fish_species_present`)) \n\n## consider adding back more columns, it dropped some columns where values were partial NA\n\nN_vessel &lt;- mc2_nodes_tidied %&gt;%\n  filter(grepl(\"Entity.Vessel\", type)) %&gt;%\n  mutate(vessel_type = case_when(\n    grepl(\"FishingVessel\", type, ignore.case = TRUE) ~ \"Fishing\",\n    grepl(\"Ferry.Passenger\", type, ignore.case = TRUE) ~ \"Ferry_Passenger\",\n    grepl(\"Ferry.Cargo\", type, ignore.case = TRUE) ~ \"Ferry_Cargo\",\n    grepl(\"Research\", type, ignore.case = TRUE) ~ \"Research\", \n    grepl(\"Other\", type, ignore.case = TRUE) ~ \"Other\", \n    grepl(\"Tour\", type, ignore.case = TRUE) ~ \"Tour\", \n    grepl(\"CargoVessel\", type, ignore.case = TRUE) ~ \"Cargo_Vessel\"\n    )) %&gt;% \n  mutate(company = ifelse(is.na(company), \"Unknown\", company)) %&gt;% # Handle NA values by replacing NA with unknown\n  select(-c(`algorithm`, `type`, `raw_source`, `Activities`, `fish_species_present`, `Description`, `kind`, `style`, `name`, `qty_tons`,`date`)) %&gt;%\n  rename(vessel_id = id, \n         vessel_name = Name, \n         vessel_company = company)\n\n\n# Further exploring records where there is null values\npartial_na_records &lt;- N_vessel[!complete.cases(N_vessel), ]\nkable(partial_na_records)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlast_edited_by\ndate_added\nlast_edited_date\nvessel_id\nvessel_name\nflag_country\nvessel_company\ntonnage\nlength_overall\nvessel_type\n\n\n\n\njuniorshurdlu794\n2034-07-30\n2034-08-16\nwebigailba7\nWebigail\nOceanus\nUnknown\nNA\n50\nOther\n\n\njuniorshurdlu794\n2034-04-17\n2034-05-19\nvenerable89c\nVenerable\nOceanus\nUnknown\nNA\nNA\nFerry_Passenger\n\n\njuniorshurdlu794\n2033-11-22\n2034-04-20\nsturdyd7f\nSturdy\nOceanus\nUnknown\nNA\nNA\nFerry_Cargo\n\n\njuniorshurdlu794\n2033-12-03\n2034-01-04\nstout369\nStout\nOceanus\nUnknown\nNA\nNA\nFerry_Cargo\n\n\nJunior Shurdlu\n2033-12-15\n2034-04-11\ninquisitive8c0\nInquisitive\nOceanus\nUnknown\nNA\nNA\nResearch\n\n\njuniorshurdlu794\n2034-07-30\n2034-11-06\ndewie961\nDewie\nOceanus\nUnknown\nNA\n75\nOther\n\n\nJunior Shurdlu\n2034-07-01\n2034-11-09\nhimarkroyal032\nHimark Royal\nOceanus\nUnknown\nNA\nNA\nTour\n\n\nJunior Shurdlu\n2034-11-28\n2035-04-06\nmrray9c4\nMr. Ray\nOceanus\nUnknown\nNA\nNA\nTour\n\n\nClepper Jessen\n2034-10-01\n2035-02-19\nmanatee17ea\nManatee 1\nOceanus\nUnknown\nNA\nNA\nTour\n\n\njuniorshurdlu794\n2035-01-03\n2035-05-18\nhewey2ef\nHewey\nOceanus\nUnknown\nNA\n75\nOther\n\n\njuniorshurdlu794\n2033-08-12\n2033-10-09\nhonorablea6e\nHonorable\nOceanus\nUnknown\nNA\nNA\nFerry_Passenger\n\n\nClepper Jessen\n2033-09-20\n2033-11-11\nclownfishe3d\nClown Fish\nOceanus\nUnknown\nNA\nNA\nTour\n\n\njuniorshurdlu794\n2033-07-21\n2033-08-20\nlouietheii3e0\nLouie the II\nOceanus\nUnknown\nNA\n75\nOther\n\n\njuniorshurdlu794\n2034-03-02\n2034-06-26\nrespectable717\nRespectable\nOceanus\nUnknown\nNA\nNA\nFerry_Passenger\n\n\nClepper Jessen\n2034-07-27\n2034-10-11\nspiritofoceanus404\nSpirit of Oceanus\nOceanus\nUnknown\nNA\nNA\nTour\n\n\njuniorshurdlu794\n2034-07-03\n2034-11-30\nlouieda4\nLouie\nOceanus\nUnknown\nNA\n75\nOther\n\n\nJunior Shurdlu\n2034-05-28\n2034-07-18\nathenad34\nAthena\nOceanus\nUnknown\nNA\nNA\nResearch\n\n\nJunior Shurdlu\n2033-07-19\n2033-10-03\nheartofoceanusf11\nHeart of Oceanus\nOceanus\nUnknown\nNA\nNA\nTour\n\n\n\n\n\nCode\n# merging ping with location details (region_id, city_id, point_id)\n## See how to deal with list within activites, and how to include region_kind\n## See if want to retain some description to identify point, region vs city\n\ncity_legend &lt;- NL_City %&gt;% \n  select(c(`city_id`, `Activities`, `kind`)) %&gt;%\n  mutate(fish_species_present = \"NA\") %&gt;%\n  rename(area = city_id)\n\npoint_legend &lt;- NL_Point %&gt;% \n  select(c(`point_id`, `Activities`))  %&gt;%\n  mutate(kind = \"point\", \n         fish_species_present = \"NA\") %&gt;%\n  rename(area = point_id)\n\nregion_legend &lt;- NL_Region %&gt;% \n  select(c(`region_id`, `Activities`, `region_kind`, `fish_species_present`))  %&gt;%\n  rename(area = region_id, kind = region_kind)\n\nlocation_legend &lt;- rbind(city_legend, point_legend, region_legend) \n\n#dropping unnecessary tables\nrm(mc2_data, mc2_nodes_tidied, partial_na_records, city_legend, point_legend, region_legend)\n\n\n\n\n\nTo incorporate context of the nodes details into the various edges, the related description of the nodes were appended to edge data sets. This helped to streamline the records into 3 consolidated data sets.\n\n\n\n\n\n\n\n\nConsolidated Data Set\nResultant Edge Data Set\nMapped with Nodes Data Set\n\n\n\n\nTransaction (with cargo weight)\ntx_c: Cargo_id, Destination, Transaction date, Fish species\nN_delivery_doc: Cargo_id, quantity in tons, delivery date\n\n\nPing activity (with vessel details by vessel_id, possible fish caught by location_legend)\nE_Tping_c: Start_time, Dwell, Ping source, Vessel_id\nN_vessel: Vessel_id, vessel name, vessel company, flag country, tonnage, overall length, vessel type\nlocation_legend: Area, activities, kind, fish_species\n\n\nHabor Arrival Report\n(with vessel details)\nE_Hbrpt_c: Vessel_id, Port, Key, Arrival date, Port master, Aphorism, Holiday Greeting, Saying of the Sea, Wisdom\nN_vessel: Vessel_id, vessel name, vessel company, flag country, tonnage, overall length, vessel type\n\n\n\n\n\nCode\n# merging the quantity from delivery_doc with transaction based on cargo id\ntx_qty &lt;- left_join(tx_c, N_Delivery_doc %&gt;% select(cargo_id, qty_tons, deliver_date), by = \"cargo_id\")\n\n# Merging habor report with vessel details to identify type of vessel, tonnage and overall length \n\nE_Hbrpt_v &lt;- left_join(E_Hbrpt_c, N_vessel %&gt;% select(vessel_id, vessel_name, tonnage, length_overall, flag_country, vessel_company, vessel_type), by = \"vessel_id\")\n\n# Merging ping transaction with the location type\nE_Tping_c2 &lt;- E_Tping_c %&gt;% rename(area = ping_source)\nping_activity &lt;- left_join(E_Tping_c2, location_legend %&gt;% select(area, Activities, kind, fish_species_present), by = \"area\")\nping_activity &lt;- left_join(ping_activity, N_vessel %&gt;% select(vessel_id, vessel_name, tonnage, length_overall, flag_country, vessel_company, vessel_type), by = \"vessel_id\")\n\n# removing \"City of\" from the \"area column\" \nvessel_movement &lt;- ping_activity %&gt;%\n  mutate(area = gsub(\"^City of\", \"\", area)) %&gt;%\n  mutate(area = gsub(\"^\\\\s+\", \"\", area))\n\n#write_csv(ping_activity, \"movement.csv\")\n# suggest drop all date added, last edits and edited by - used for biasness analysis, not so much for mc2\n\nrm(tx_c, E_Tping_c2, E_Tping_c, E_Hbrpt_c)\n\n\n\n\n\n\n\n\n\nReference: Kickstarter 3 by Prof Kam\n\n\nCode\n# ggplot(data = oceanus_geog) + geom_sf()\n# \n# write_rds(oceanus_geog, \"data/rds/OceanusGeography.rds\")\n# \n# OceanusLocations &lt;- st_read(dsn = \"data/shp\",\n#   layer = \"Oceanus Geography\")\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\n\n3 fish species are only present in ecological reserves: (1) Offidiaa/Piscis osseus, (2) Sockfish/Pisces foetida and (3) Helenaa/Pisces satis. Hence, any cargo with these fish species have likely violated fishing regulations and fished in ecological reserves. (1) Don Limpet Preserve, (2) Ghoti Preserve and (3) Nemo Reefs.\n\n\n\n\n\nCode\n## Check if code can still be run given above amendment of string split\n\n# Formatting region data to identify fish type in region\nregion_species &lt;- NL_Region %&gt;%\n  mutate(fish_species_present = gsub('c\\\\(|\\\\)|\"', \"\", fish_species_present), \n    fish_species_present = strsplit(as.character(fish_species_present), \", \")) %&gt;%\n  unnest(fish_species_present) %&gt;%\n  mutate(presence = 1) %&gt;%\n  spread(key = fish_species_present, value = presence, fill = 0)\n\nregion_species_c &lt;- region_species %&gt;% \n  select( -region_id, -last_edited_by, -last_edited_date, -date_added)\n\nkable(region_species_c)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nregion_name\nActivities\nregion_kind\nBeauvoir/Habeas pisces\nBirdseye/Pisces frigus\nCod/Gadus n.specificatae\nHarland/Piscis sapidum\nHelenaa/Pisces satis\nOffidiaa/Piscis osseus\nSockfish/Pisces foetida\nTuna/Thunnini n.vera\nWrasse/Labridae n.refert\n\n\n\n\nDon Limpet Preserve\nRecreation, Tourism\nEcological Preserve\n1\n1\n0\n0\n1\n0\n1\n1\n0\n\n\nCod Table\nCommercial fishing\nFishing Ground\n1\n1\n1\n0\n0\n0\n0\n0\n0\n\n\nTuna Shelf\nCommercial fishing, Sport fishing\nFishing Ground\n1\n1\n0\n1\n0\n0\n0\n1\n0\n\n\nGhoti Preserve\nResearch, Tourism, Recreation\nEcological Preserve\n1\n0\n0\n0\n1\n1\n0\n0\n1\n\n\nNemo Reef\nRecreation, Tourism\nEcological Preserve\n1\n1\n0\n0\n1\n0\n0\n1\n1\n\n\nWrasse Beds\nCommercial fishing\nFishing Ground\n1\n1\n0\n0\n0\n0\n0\n0\n1\n\n\n\n\n\nCode\n#Aligning the naming convention for fish species\n\nregion_species_id &lt;- region_species %&gt;% rename(\n  gadusnspecificatae4ba = `Cod/Gadus n.specificatae`, \n  piscesfrigus900 = `Birdseye/Pisces frigus`, \n  piscesfoetidaae7 = `Sockfish/Pisces foetida`, #illegal\n  labridaenrefert9be = `Wrasse/Labridae n.refert`, \n  habeaspisces4eb = `Beauvoir/Habeas pisces`, \n  piscissapidum9b7 = `Harland/Piscis sapidum`, \n  thunnininveradb7 = `Tuna/Thunnini n.vera`, \n  piscisosseusb6d = `Offidiaa/Piscis osseus`, #illegal\n  piscessatisb87 = `Helenaa/Pisces satis`) #illegal\n\n# write_csv(region_species, \"species_region_id.csv\")\n\n# Location of Salmon not identified (Extra value of Salmon in Fish node)\n# Check what to do with cargos with salmon - oncorhynchusrosea790\n\n# identifying occurence of illegal fish species at various port - identifying all unique fish species in cargo report (tx_qty)\n\nunique_fish_cargo &lt;- unique(tx_qty$fish_species)\nunique_fish_cargo\n\n\n [1] \"gadusnspecificatae4ba\" \"piscissapidum9b7\"      \"habeaspisces4eb\"      \n [4] \"piscesfrigus900\"       \"oncorhynchusrosea790\"  \"piscisosseusb6d\"      \n [7] \"piscesfoetidaae7\"      \"labridaenrefert9be\"    \"thunnininveradb7\"     \n[10] \"piscessatisb87\"       \n\n\nCode\n## assign specific colors to fish species, red for illegal. \n\nfish_species_color &lt;- c(\"piscesfoetidaae7\" = \"#FF6666\", \n                        \"piscisosseusb6d\" = \"#FF9999\", \n                        \"piscessatisb87\" = \"#FFCCCC\", \n                        \"gadusnspecificatae4ba\" = \"#CCE5FF\", \n                        \"piscissapidum9b7\" = \"#99CCFF\", \n                        \"habeaspisces4eb\" = \"#66B2ff\", \n                        \"piscesfrigus900\" = \"#CCE5FF\", \n                        \"oncorhynchusrosea790\" = \"#FFFF99\", \n                        \"labridaenrefert9be\" = \"#99CCFF\", \n                        \"thunnininveradb7\" = \"#66b2ff\"\n                        )\n\n# Summarise total tons of fish per location\ntotal_qty_tons_per_dest &lt;- tx_qty %&gt;%\n  group_by(dest, fish_species) %&gt;%\n  summarize(total_qty_tons = sum(qty_tons, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# Reordering levels for fish species for tidier plot\ntotal_qty_tons_per_dest$fish_species &lt;- factor(\n  total_qty_tons_per_dest$fish_species, \n  levels = c(\"gadusnspecificatae4ba\", \"piscissapidum9b7\", \"habeaspisces4eb\", \n             \"piscesfrigus900\", \"labridaenrefert9be\", \"thunnininveradb7\", \n             \"oncorhynchusrosea790\", # unidentified - Salmon\n             \"piscesfoetidaae7\",\"piscisosseusb6d\", \"piscessatisb87\" )) #illegal\n\n# Plot\nggplot(total_qty_tons_per_dest, aes(x = dest, y = total_qty_tons, fill = fish_species)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = fish_species_color) +\n  labs(title = \"Total Quantity of Fish by Destination and Species\",\n       x = \"Destination\",\n       y = \"Total Quantity (tons)\",\n       fill = \"Fish Species\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nscatter_ton_len &lt;- ggplot(data= N_vessel, \n            aes(x= tonnage, \n                y= length_overall, \n                color= vessel_type)) +\n  geom_point() + \n  theme(legend.position = \"top\")\n\nvessel_count &lt;- N_vessel %&gt;%\n  group_by(vessel_type) %&gt;%\n  summarize(vessel_no = n()) %&gt;% \n  mutate(vessel_type = reorder(vessel_type, - vessel_no))\n\n\nbar_vessel_type &lt;- ggplot(data = vessel_count, \n                          aes(x = vessel_type, \n                              y = vessel_no)) + \n  geom_bar(stat = \"identity\") + \n  geom_text(aes(label = vessel_no), vjust = -0.8, size = 2) + \n  theme(axis.text.x = element_text(size = 5))\n\nscatter_ton_len | bar_vessel_type\n\n\n\n\n\n\n\n\n\nFocusing on Fishing vessels and Cargo vessels, identifying the distribution of ships and companies owning this ship\n\n\nCode\nfishing_v &lt;- N_vessel %&gt;% filter(vessel_type == \"Fishing\")\ncargo_v &lt;- N_vessel %&gt;% filter(vessel_type == \"Cargo_Vessel\")\n\nfishing_v_dist &lt;- ggplot(fishing_v, aes(x = tonnage)) +\n  geom_histogram(binwidth = 500, fill = \"blue\", color = \"black\") +\n  labs(title = \"Distribution of Fishing Vessels by Tonnage\",\n       x = \"Tonnage\",\n       y = \"Frequency\") +\n  theme_minimal() + coord_flip()\n\n# include boxplot to see quartile \n\ncargo_v_dist &lt;- ggplot(cargo_v, aes(x = tonnage)) +\n  geom_histogram(binwidth = 500, fill = \"orange\", color = \"black\") +\n  labs(title = \"Distribution of Cargo Vessels by Tonnage\",\n       x = \"Tonnage\",\n       y = \"Frequency\") +\n  theme_minimal() + \n  coord_flip()\n\n#summary(fishing_v) - min: 100, q1: 600, median: 2400, q3: 4850, max: 17200 - investigate\n#summary(cargo_v) - min: 2100, q1: 2100, median: 23750, q3: 74925, max: 76300 - Investigate \n\nfishing_v_dist | cargo_v_dist\n\n\n\n\n\n\n\n\n\nInsights derived:\n\nException size of fishing vessels (Vessels &gt; 12,500 tons). Possible explanation: Fishing of different nature - to search further on types of fishing vessels.\n\n\n\nCode\n# understanding which vessel \nabn_fish_vessel &lt;- fishing_v %&gt;% filter(tonnage &gt; 12500)\n\nsel_abn_fish_vessel &lt;- abn_fish_vessel %&gt;% \n  select(vessel_name, flag_country, vessel_company) \n\nkable(sel_abn_fish_vessel)\n\n\n\n\n\nvessel_name\nflag_country\nvessel_company\n\n\n\n\nPike Pirate\nOceanus\nRobinson, Mcmillan and Watson\n\n\nMarine Marauder\nOceanus\nNielsen, Valentine and Bell\n\n\n\n\n\nCode\n# understanding region that vessel spends time at \n\nabn_fish_v_activity &lt;- ping_activity %&gt;% \n  filter(vessel_id %in% abn_fish_vessel$vessel_id) \n  \nabn_fish_v_activity_sum &lt;- abn_fish_v_activity %&gt;%\n  group_by(vessel_id, area) %&gt;%\n  summarise(median_dwell = median(dwell, na.rm = TRUE))\n\n# Contrasting with the median time spent by fishing vessels \n\nfish_v_activity &lt;- ping_activity %&gt;% \n  filter(vessel_id %in% fishing_v$vessel_id) \n  \nfish_v_activity_sum &lt;- fish_v_activity %&gt;%\n  group_by(vessel_id, area) %&gt;%\n  summarise(median_dwell = median(dwell, na.rm = TRUE))\n\n# kable(ETping_vessel)\n# Flag out vessels that entered restricted zone\n\nfishing_dwell &lt;- ggplot(fish_v_activity, aes(x = area, y = dwell)) +\n  geom_boxplot() +\n  geom_point(data = subset(fish_v_activity, vessel_id == \"marinemarauder8c9\"),\n             aes(x = area, y = dwell), color = \"red\", size = 1) +\n  geom_point(data = subset(fish_v_activity, vessel_id == \"pikepirate89a\"),\n             aes(x = area, y = dwell), color = \"blue\", size = 1) +\n  theme_minimal() +\n  labs(title = \"Median Dwell Time by Area\", \n       x = \"Area\", \n       y = \"Median Dwell Time\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  scale_y_continuous(limits = c(0, 600000)) + # limit dwell \n  coord_flip()\n\n\n\nWide variation of size for cargo vessels ( Grp 1: &lt; 5000 tons, Grp 2: 75,000 &gt; 5000 tons)\nObserved that vessel company is unknown for all 39 records in group 1, and all unknown for all 33 records in group 2\n\n\n\nCode\nabn_cargo_vessel_s &lt;- cargo_v %&gt;% filter(tonnage &lt; 5000)\nabn_cargo_vessel_l &lt;- cargo_v %&gt;% filter(tonnage &gt; 70000)\n\nsel_abn_cargo_vessel_s &lt;- abn_cargo_vessel_s %&gt;% \n  select(vessel_name, flag_country, vessel_company) \n\nsel_abn_cargo_vessel_l &lt;- abn_cargo_vessel_l %&gt;% \n  select(vessel_name, flag_country, vessel_company) \n\n# display records \nkable(sel_abn_cargo_vessel_s)\n\n\n\n\n\nvessel_name\nflag_country\nvessel_company\n\n\n\n\nSeaway Savvy 9\nOsterivaro\nUnknown\n\n\nOceanic Oracle\nAriuzima\nUnknown\n\n\nMaritime Majestic\nMerigrad\nUnknown\n\n\nCargo Centric\nLumindoria\nUnknown\n\n\nHarbor Helios\nLumakari\nUnknown\n\n\nShip Matrix\nKhamseena\nUnknown\n\n\nTrans Atlantic\nLuminkind\nUnknown\n\n\nFreight Frequency 5\nUtoporiana\nUnknown\n\n\nHarbor Halo 9\nCalabrand\nUnknown\n\n\nFreight Firm\nPlaya Solis\nUnknown\n\n\nOceanic Oasis\nBrindisola\nUnknown\n\n\nSea Sovereign\nGavanovia\nUnknown\n\n\nOceanic Odyssey 11\nIsla Solmar\nUnknown\n\n\nNautical Networks\nBaziuzim\nUnknown\n\n\nMaritime Miracle\nCoralmarica\nUnknown\n\n\nVessel Vanguard\nOrvietola\nUnknown\n\n\nSea Sanctuary\nPlaya Solis\nUnknown\n\n\nSea System 3\nKethanor\nUnknown\n\n\nFreight Forte 6\nNovarctica\nUnknown\n\n\nNautical Nirvana\nRio Solovia\nUnknown\n\n\nMaritime Mover\nOrvietola\nUnknown\n\n\nHarbor Halo\nHelixia\nUnknown\n\n\nNautical Nimbus\nHelixia\nUnknown\n\n\nMaritime Matrix\nHelixia\nUnknown\n\n\nNautical Nexus 1\nRiodelsol\nUnknown\n\n\nTrans Global\nFaraluna\nUnknown\n\n\nSea Sentry 2\nKuzalanda\nUnknown\n\n\nCargo Cosmos\nCoralada\nUnknown\n\n\nTrans Continental\nIsla Solmar\nUnknown\n\n\nCargo Crest\nImazam\nUnknown\n\n\nVessel Vanguard 5\nKhamseena\nUnknown\n\n\nCargo Centric 4\nPlaya Solis\nUnknown\n\n\nHarbor Helix\nKondarivakia\nUnknown\n\n\nSea Solutions\nNyxonix\nUnknown\n\n\nSeaway Synergy 8\nAzurionix\nUnknown\n\n\nSeaway Spectrum\nKethanor\nUnknown\n\n\nSeaway Sage\nCoralada\nUnknown\n\n\nNautical Nucleus 10\nZawalinda\nUnknown\n\n\nMaritime Magnitude\nGavanovia\nUnknown\n\n\n\n\n\nCode\nkable(sel_abn_cargo_vessel_l)\n\n\n\n\n\nvessel_name\nflag_country\nvessel_company\n\n\n\n\nMaritime Maelstrom\nHelvoris\nUnknown\n\n\nHarbor Harmony\nAlverovia\nUnknown\n\n\nVessel Vertex\nUzifrica\nUnknown\n\n\nSea Sentinel 1\nAnderia del Mar\nUnknown\n\n\nBlue Harbor\nMawalara\nUnknown\n\n\nMaritime Momentum\nPlaya Solis\nUnknown\n\n\nCargo Catalyst\nNyxonix\nUnknown\n\n\nVessel Victory 3\nMerigrad\nUnknown\n\n\nOceanic Oasis 1\nUtoparadia\nUnknown\n\n\nTrans Pacific\nValtalmo\nUnknown\n\n\nSeaway Spectra\nOceanus\nUnknown\n\n\nFreight Forte\nValtalmo\nUnknown\n\n\nMaritime Masters\nZawalinda\nUnknown\n\n\nTrans Atlantic 4\nTalandria\nUnknown\n\n\nOceanic Odyssey\nVesperlandia\nUnknown\n\n\nVessel Venture 4\nNovarcticaa\nUnknown\n\n\nOceanic Overture\nUzifrica\nUnknown\n\n\nHarbor Horizon\nIslavaria\nUnknown\n\n\nFreight Frequency\nUtoparadia\nUnknown\n\n\nHarbor Holdings\nRiodelsol\nUnknown\n\n\nNautical Nexus\nUtoporiana\nUnknown\n\n\nOceanic Oracle 2\nMyriadonia\nUnknown\n\n\nTrans Global 6\nThessalandia\nUnknown\n\n\nVessel Ventures\nNyxonix\nUnknown\n\n\nFreight Fountain\nNyxonix\nUnknown\n\n\nVessel Vortex\nMarifada\nUnknown\n\n\nAqua Transit\nKorvelonia\nUnknown\n\n\nSeaway Synergy\nPuerto del Mar\nUnknown\n\n\nNautical Nomad 11\nZambarka\nUnknown\n\n\nBulk Carriers\nSirenareef\nUnknown\n\n\nSea Sentinel\nAlverossia\nUnknown\n\n\nNautical Navigator\nKilivaria\nUnknown\n\n\nOceanic Omnipotent\nPlaya Solis\nUnknown\n\n\n\n\n\nCode\n# subset cargo vessel activity\ncargo_v_activity &lt;- ping_activity %&gt;% \n  filter(vessel_id %in% cargo_v$vessel_id) \n\n# extracting list of vessel id for large and small cargo\nselected_vessel &lt;- abn_cargo_vessel_s$vessel_id\nselected_vessel2 &lt;- abn_cargo_vessel_l$vessel_id\n\n# plotting\ncargo_dwell &lt;- ggplot(cargo_v_activity, aes(x = area, y = dwell)) +\n  geom_boxplot() +\n  geom_point(data = subset(cargo_v_activity, vessel_id == selected_vessel),\n             aes(x = area, y = dwell), color = \"orange\", size = 1) +\n  geom_point(data = subset(cargo_v_activity, vessel_id == selected_vessel2),\n             aes(x = area, y = dwell), color = \"purple\", size = 1) +\n  theme_minimal() +\n  labs(title = \"Median Dwell Time by Area\", \n       x = \"Area\", \n       y = \"Median Dwell Time\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  scale_y_continuous( limits = c(0, 20000)) + #zoom into 2 * 10^5\n  coord_flip()\n\nfishing_dwell | cargo_dwell\n\n\n\n\n\n\n\n\n\nExploring ships from “Unknown companies” - Unregistered ships - Transhipment cargo vessel, only 1 registered with Oceanus, else others by nations.\n\n\nCode\n# exploring ships that have unknown companies\n\nunknown_v &lt;- N_vessel %&gt;% filter(vessel_company == \"Unknown\")\n\n# Summarizing to see where unknown vessels come from\nunknown_v_sum &lt;- unknown_v %&gt;% \n  group_by(vessel_type, flag_country) %&gt;% \n  summarize(vessel_count = n()) %&gt;%\n  mutate(flag_country = reorder(flag_country, - vessel_count))\n\nunknown_dist &lt;- ggplot(unknown_v_sum, \n                       aes(x = flag_country, y = vessel_count, \n                           fill = vessel_type)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal() +\n  labs(title = \"Vessel Count by Flag Country and Vessel Type\",\n       x = \"Flag Country\",\n       y = \"Vessel Count\",\n       fill = \"Vessel Type\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5)) \n\nunknown_dist \n\n\n\n\n\n\n\n\n\nCode\ndatatable(unknown_v_sum, \n          options = list(pageLength = 5), \n          filter = \"top\")\n\n\n\n\n\n\nCode\n# Identifying regions that unknown vessels are at \nunknown_v_list &lt;- unknown_v$vessel_id\n\nvessel_dwell &lt;- ggplot(ping_activity, aes(x = area, y = dwell)) +\n  geom_boxplot() +\n  geom_point(data = subset(ping_activity, vessel_id == unknown_v_list),\n             aes(x = area, y = dwell), color = \"hotpink\", size = 1) +\n  theme_minimal() +\n  labs(title = \"Median Dwell Time by Area\", \n       x = \"Area\", \n       y = \"Median Dwell Time\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  scale_y_continuous( limits = c(0, 500000)) + #zoom into 2 * 10^5\n  coord_flip()\n\nvessel_dwell\n\n\n\n\n\n\n\n\n\nCode\n# identifying outliers - nemo-reef &gt; 2,000,000\n# identifying ships that are way above median and \"unknown\"\n\n\nExploring the cargo records\n\nConsistent record where qty_tons &lt;=0 across all 5 cities\nHowever, variation in fish species where qty_tons &lt;= 0 for cargo\n\n\n\nCode\n#exploring abnormal records where qty_tons of cargo delivered = 0 or is negative\n\nggplot(tx_qty, aes(x = fish_species, y = qty_tons)) + \n  geom_boxplot(\n    width = .15, \n    outlier.color = NA \n  ) +\n  ggdist::stat_dots(data = subset(tx_qty, qty_tons &gt; 0),\n    side = \"right\", \n    justification = -0.2,\n    binwidth = 1, \n    dotsize = 0.15) + \n   ggdist::stat_dots(\n    data = subset(tx_qty, qty_tons &lt;= 0),\n    side = \"right\",\n    justification = -0.2,\n    binwidth = 1,\n    dotsize = 0.15,\n    color = \"red\") + \n  geom_hline(yintercept = 0, color = \"blue\") + \n  coord_flip() \n\n\n\n\n\n\n\n\n\n\n\nCode\n#exploring abnormal records where qty_tons of cargo delivered = 0 or is negative\n\nggplot(tx_qty, aes(x = dest, y = qty_tons)) + \n  geom_boxplot(\n    width = .15, \n    outlier.color = NA \n  ) +\n  ggdist::stat_dots(data = subset(tx_qty, qty_tons &gt; 0),\n    side = \"right\", \n    justification = -0.2,\n    binwidth = 1, \n    dotsize = 0.15) + \n   ggdist::stat_dots(\n    data = subset(tx_qty, qty_tons &lt;= 0),\n    side = \"right\",\n    justification = -0.2,\n    binwidth = 1,\n    dotsize = 0.15,\n    color = \"red\") + \n  geom_hline(yintercept = 0, color = \"blue\") + \n  coord_flip() \n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(tx_qty, aes(x = fish_species, y = qty_tons)) + \n  geom_boxplot(\n    width = .15, \n    ## remove outliers\n    outlier.color = NA ## `outlier.shape = NA` or `outlier.alpha = 0` works as well\n  ) +\n  ## add dot plots from {ggdist} package\n  ggdist::stat_dots(\n    ## orientation to the right\n    side = \"right\", \n    justification = -0.2,\n    ## adjust grouping (binning) of observations \n    binwidth = 1, \n    dotsize = 0.1\n  ) +\n  ## add highlighted dots where qty_tons &lt;= 0\n  ggdist::stat_dots(\n    data = subset(tx_qty, qty_tons &lt;= 0),\n    side = \"right\",\n    justification = -0.2,\n    binwidth = 1,\n    dotsize = 0.1,\n    color = \"red\"\n  ) +\n  ## add horizontal line at qty_tons = 0\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(title = \"Quantity of Fish Species by Weight (Tons)\",\n       x = \"Fish Species\",\n       y = \"Quantity (Tons)\") +\n  theme(axis.text.x = element_text(hjust = 1, size = 7),\n    axis.text.y = element_text(size = 7),\n    plot.title = element_text(size = 12, face = \"bold\"),\n    strip.text = element_text(size = 7),\n    plot.margin = unit(c(1, 1, 1, 1), \"mm\"), \n    panel.spacing = unit(0.5,\"lines\")) + \n  facet_grid(. ~ dest)\n\n\n\n\n\n\n\n\n\nComparing the visualisations together, we map to see the cumulative quantity of fishes received by each habor\n\n\nCode\n# Goal: Interactive heat map\n# Zoom into specific date range, see the cargo_id for the contributing ports\n\n#plotting heatmap\n#step 1: calculate data\nqty_fish_dest_time &lt;- tx_qty %&gt;%\n  group_by(tx_date, dest, fish_species) %&gt;%\n  summarize(total_qty_tons = sum(qty_tons, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n#step 2: reshape data for heatmap\n\nheatmap_data &lt;- dcast(qty_fish_dest_time, tx_date + fish_species ~ dest, value.var = \"total_qty_tons\", fill = 0)\n\n# Melt data for ggplot2\nmelted_data &lt;- melt(heatmap_data, id.vars = c(\"tx_date\", \"fish_species\"))\n\n# step 3:  Plot the heatmap\nggplot(melted_data, aes(x = tx_date, y = fish_species, fill = value)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"white\", high = \"red\", name = \"Total Qty (tons)\") +\n  labs(title = \"Heatmap of Fish Species Quantity at Each Destination Over Time\",\n       x = \"Transaction Date\",\n       y = \"Fish Species\") +\n  facet_wrap(~variable, scales = \"free_y\", ncol = 1) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\n\n\n\n\n\n\n\n\n\n\n\n\nUnderstanding distribution of vessels in relation to paths taken\n\n\n\nCode\n# TBC\n\n\n\n\n\n\n\n\nPreliminary comparison of total count per port\n\nDoes purpose or vessel type affect visits - Port Grove only Tourism\nComparing records, habor report includes port grove which is not present in transaction report, hence we will exclude port grove from analysis.\n\nData Processing: Multiple pings from same vessel at same port on the same date, but differing time (hours and minutes) hence, group by same date, same port, and count unique vessel_id.\nSubsequently when plotting, excluded the date to aggregate counts per port.\n\n\nCode\n# Comparing entries per port with boxplot\n\n## tx_qty -&gt; Type of species per port \ncargo_count &lt;- tx_qty %&gt;%\n  group_by(dest) %&gt;%\n  summarize(cargo_count = n())\n\nunique_dest &lt;- unique(cargo_count$dest) # only 5 cities\n\n## count of vessel by port\nhb_count &lt;- E_Hbrpt_v %&gt;%\n  group_by(port) %&gt;%\n  summarize(vessel_total = n()) \n\nunique_port &lt;- unique(hb_count$port) # 6 cities\n\n## To recalculate based on distinct vessel per day per port. \nfish_dist_p_count &lt;- fish_v_activity %&gt;%\n  mutate(date = as.Date(start_time)) %&gt;%\n  group_by(area, date) %&gt;%\n  summarize(fishv_dist_p_count = n_distinct(vessel_id)) %&gt;%\n  filter(area %in% unique_port)\n\nfish_dist_pcount2 &lt;- fish_dist_p_count %&gt;%\n  group_by(area) %&gt;%\n  summarize(fish_dist_count = n())\n\n## calculate for cargo vessels\n\ncargo_dist_p_count &lt;- cargo_v_activity %&gt;%\n  mutate(date = as.Date(start_time)) %&gt;%\n  group_by(area, date) %&gt;%\n  summarize(cargov_dist_p_count = n_distinct(vessel_id)) %&gt;%\n  filter(area %in% unique_port)\n\ncargo_dist_pcount2 &lt;- cargo_dist_p_count %&gt;%\n  group_by(area) %&gt;%\n  summarize(cargo_dist_count = n())\n\n# merge for plot \ncount &lt;- merge(cargo_count, hb_count, by.x = \"dest\", by.y = \"port\", all = TRUE)\ncount &lt;- merge(count, fish_dist_pcount2, by.x = \"dest\", by.y = \"area\", all = TRUE)\ncount &lt;- merge(count, cargo_dist_pcount2, by.x = \"dest\", by.y = \"area\", all = TRUE)\ncount &lt;- count %&gt;% mutate(across(everything(), ~replace_na(., 0)))\n\ncount$dest &lt;- factor(\n  count$dest, \n  levels = c(\"City of Port Grove\", \"City of Haacklee\", \"City of Himark\", \n             \"City of Lomark\", \"City of Paackland\", \"City of South Paackland\")) \n\n# reshape for plot \ncount2 &lt;- count %&gt;%\n  gather(key = \"type\", value = \"count\", cargo_count, vessel_total, fish_dist_count, cargo_dist_count)\n\ncount2$type &lt;- factor(count2$type, levels = c(\"cargo_count\", \"vessel_total\", \"fish_dist_count\", \"cargo_dist_count\"))\n\n\n# Plot the grouped bar chart with labels\nggplot(count2, aes(x = dest, y = count, fill = type)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  geom_text(aes(label = count), \n            position = position_dodge(width = 0.9), \n            vjust = -0.25) + \n  labs(title = \"Comparison of Vessel Count and Cargo Count by Destination\",\n       x = \"Destination\",\n       y = \"Count\",\n       fill = \"Type\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nCode\n### See how to use the bottom\n## Drilling down into type of vessel - Hbrpt -&gt; Type of vessel per port \nhb_v_count &lt;- E_Hbrpt_v %&gt;%\n  group_by(port, vessel_type) %&gt;%\n  summarize(vessel_count = n()) \n\nvessel_count_plot &lt;- ggplot(hb_v_count, aes(x = port, y = vessel_count, fill = vessel_type)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(data = hb_v_count, aes(label = vessel_count), hjust = -1, size = 5) + \n  labs(title = \"Count of Vessel per Port\", x = \"Port\", \n       y = \"Number of Vessel\", fill = \"Vessel Type\") + \n  coord_flip()\n\n\n## Conclusion: Exclude City of Port Grove as it is stopping over for vessels - Research, Tour, Others and not for fishing or cargo. \n\n# Extracting details of vessels that stop at \"City of Port Grove\"\nport_grove_vessel &lt;- E_Hbrpt_v %&gt;% filter(port == \"City of Port Grove\")\nkable(port_grove_vessel)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlast_edited_by\ndate_added\nlast_edited_date\nraw_source\nvessel_id\nport\nkey\narr_date\nport_master\naphorism\nholiday_greeting\nwisdom\nsaying\nvessel_name\ntonnage\nlength_overall\nflag_country\nvessel_company\nvessel_type\n\n\n\n\nClepper Jessen\n2035-04-01\n2035-04-10\nPort Grove harbor reports\nwebigailba7\nCity of Port Grove\n0\n2035-03-24\nPortmaster of Port Grove\nMan cannot discover new oceans unless he has the courage to lose sight of the shore.\nIts Day of Future Hope again today\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nWebigail\nNA\n50\nOceanus\nUnknown\nOther\n\n\nClepper Jessen\n2035-03-25\n2035-04-02\nPort Grove harbor reports\nwebigailba7\nCity of Port Grove\n1\n2035-03-24\nPortmaster of Port Grove\nMan cannot discover new oceans unless he has the courage to lose sight of the shore.\nIts Day of Future Hope again today\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nWebigail\nNA\n50\nOceanus\nUnknown\nOther\n\n\nClepper Jessen\n2035-03-27\n2035-04-04\nPort Grove harbor reports\nwebigailba7\nCity of Port Grove\n2\n2035-03-24\nPortmaster of Port Grove\nMan cannot discover new oceans unless he has the courage to lose sight of the shore.\nEnjoy Saw Appreciation Day today!\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nWebigail\nNA\n50\nOceanus\nUnknown\nOther\n\n\nJunior Shurdlu\n2035-09-12\n2035-09-21\nPort Grove harbor reports\nwebigailba7\nCity of Port Grove\n3\n2035-09-04\nPortmaster of Port Grove\nA sailor’s joy is as simple as a child’s.\nEnjoy Saw Appreciation Day today!\nThe island is not just a place, but an experience.\nThe ocean has always been a salve to my soul.\nWebigail\nNA\n50\nOceanus\nUnknown\nOther\n\n\nJunior Shurdlu\n2035-12-03\n2035-12-11\nPort Grove harbor reports\nwebigailba7\nCity of Port Grove\n4\n2035-11-30\nPortmaster of Port Grove\nShips at a distance have every man’s wish on board.\nIts Lunch of VonLipwig again today\nThe tans will fade, but the memories will last forever.\nIn every outthrust headland, in every curving beach, in every grain of sand there is the story of the earth.\nWebigail\nNA\n50\nOceanus\nUnknown\nOther\n\n\nClepper Jessen\n2035-03-22\n2035-03-26\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n0\n2035-03-19\nPortmaster of Port Grove\nThe tans will fade, but the memories will last forever.\nEnjoy Saw Appreciation Day today!\nWhen you’re on an island, every sunrise is a gift.\nYou can shake the sand from your shoes, but it will never leave your soul.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nJunior Shurdlu\n2035-03-21\n2035-03-31\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n1\n2035-03-19\nPortmaster of Port Grove\nThe tans will fade, but the memories will last forever.\nEnjoy Saw Appreciation Day today!\nWhen you’re on an island, every sunrise is a gift.\nYou can shake the sand from your shoes, but it will never leave your soul.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nClepper Jessen\n2035-03-22\n2035-03-25\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n2\n2035-03-19\nPortmaster of Port Grove\nThe tans will fade, but the memories will last forever.\nEnjoy Saw Appreciation Day today!\nWhen you’re on an island, every sunrise is a gift.\nYou can shake the sand from your shoes, but it will never leave your soul.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nJunior Shurdlu\n2035-03-21\n2035-03-30\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n3\n2035-03-19\nPortmaster of Port Grove\nThe tans will fade, but the memories will last forever.\nEnjoy Saw Appreciation Day today!\nWhen you’re on an island, every sunrise is a gift.\nYou can shake the sand from your shoes, but it will never leave your soul.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nClepper Jessen\n2035-12-01\n2035-12-11\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n4\n2035-11-29\nPortmaster of Port Grove\nSailors, with their built in sense of order, service and discipline, should really be running the world.\nEnjoy Saw Appreciation Day today!\nWhen you’re on an island, every sunrise is a gift.\nYou can shake the sand from your shoes, but it will never leave your soul.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nHaenyeo Hyun-Ki\n2035-11-29\n2035-12-05\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n5\n2035-11-29\nPortmaster of Port Grove\nSailors, with their built in sense of order, service and discipline, should really be running the world.\nEnjoy Saw Appreciation Day today!\nWhen you’re on an island, every sunrise is a gift.\nSunset is my favorite color.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nHaenyeo Hyun-Ki\n2035-08-10\n2035-08-20\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n6\n2035-08-06\nPortmaster of Port Grove\nSailors, with their built-in sense of order, service and discipline, should really be running the world.\nIts Minister’s Day Observed again today\nWhen you’re on an island, every sunrise is a gift.\nThe wonders of the sea are as beautiful as the most beautiful cathedral.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nJunior Shurdlu\n2035-10-03\n2035-10-06\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n7\n2035-09-27\nPortmaster of Port Grove\nSailors, with their built-in sense of order, service and discipline, should really be running the world.\nNA\nThe ocean has always been a salve to my soul.\nAt sea, I learned how little a person needs, not how much.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nJunior Shurdlu\n2035-02-05\n2035-02-10\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n8\n2035-02-01\nPortmaster of Port Grove\nNA\nNA\nThe sea! The sea! The open sea! The blue, the fresh, the ever free!\nAt sea, I learned how little a person needs, not how much.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nJunior Shurdlu\n2035-03-27\n2035-04-05\nPort Grove harbor reports\nmrray9c4\nCity of Port Grove\n0\n2035-03-24\nPortmaster of Port Grove\nThe wind and the waves are always on the side of the ablest navigator.\nNA\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nYou can shake the sand from your shoes, but it will never leave your soul.\nMr. Ray\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nJunior Shurdlu\n2035-09-12\n2035-09-16\nPort Grove harbor reports\nmrray9c4\nCity of Port Grove\n1\n2035-09-04\nPortmaster of Port Grove\nA sailor’s joy is as simple as a child’s.\nNA\nThe island is not just a place, but an experience.\nSunset is my favorite color.\nMr. Ray\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nClepper Jessen\n2035-10-19\n2035-10-27\nPort Grove harbor reports\nmrray9c4\nCity of Port Grove\n2\n2035-10-11\nPortmaster of Port Grove\nThe best therapy is beach therapy.\nNA\nWhen one man, for whatever reason, has the opportunity to lead an extraordinary life, he has no right to keep it to himself.\nSunset is my favorite color.\nMr. Ray\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nHaenyeo Hyun-Ki\n2035-03-30\n2035-04-03\nPort Grove harbor reports\nmanatee17ea\nCity of Port Grove\n0\n2035-03-24\nPortmaster of Port Grove\nThe tans will fade, but the memories will last forever.\nIts Day of Future Hope again today\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nManatee 1\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nJunior Shurdlu\n2035-03-26\n2035-04-05\nPort Grove harbor reports\nmanatee17ea\nCity of Port Grove\n1\n2035-03-24\nPortmaster of Port Grove\nSailors, with their built in sense of order, service and discipline, should really be running the world.\nIts Day of Future Hope again today\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nManatee 1\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nJunior Shurdlu\n2035-03-31\n2035-04-04\nPort Grove harbor reports\nmanatee17ea\nCity of Port Grove\n2\n2035-03-24\nPortmaster of Port Grove\nThe sea, the majestic sea, breaks everything, crushes everything, cleans everything, takes everything…from me.\nIts Day of Future Hope again today\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nManatee 1\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nClepper Jessen\n2035-06-17\n2035-06-22\nPort Grove harbor reports\nmanatee17ea\nCity of Port Grove\n3\n2035-06-09\nPortmaster of Port Grove\nA ship is always safe at shore but that is not what it’s built for.\nNA\nThose who live by the sea can hardly form a single thought of which the sea would not be part.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nManatee 1\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nClepper Jessen\n2035-05-04\n2035-05-13\nPort Grove harbor reports\nmanatee17ea\nCity of Port Grove\n4\n2035-04-28\nPortmaster of Port Grove\nThere is hope at the bottom of the biggest waterfall.\nNA\nThose who live by the sea can hardly form a single thought of which the sea would not be part.\nThe sea! The sea! The open sea! The blue, the fresh, the ever free!\nManatee 1\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nClepper Jessen\n2035-04-30\n2035-05-03\nPort Grove harbor reports\nmanatee17ea\nCity of Port Grove\n5\n2035-04-28\nPortmaster of Port Grove\nThere is hope at the bottom of the biggest waterfall.\nNA\nThose who live by the sea can hardly form a single thought of which the sea would not be part.\nThe sea! The sea! The open sea! The blue, the fresh, the ever free!\nManatee 1\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nJunior Shurdlu\n2035-03-29\n2035-04-05\nPort Grove harbor reports\nclownfishe3d\nCity of Port Grove\n0\n2035-03-24\nPortmaster of Port Grove\nThe tans will fade, but the memories will last forever.\nIts Day of Future Hope again today\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nClown Fish\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nClepper Jessen\n2035-02-02\n2035-02-12\nPort Grove harbor reports\nclownfishe3d\nCity of Port Grove\n1\n2035-02-02\nPortmaster of Port Grove\nThe ocean stirs the heart, inspires the imagination, and brings eternal joy to the soul.\nNA\nThe sea! The sea! The open sea! The blue, the fresh, the ever free!\nNA\nClown Fish\nNA\nNA\nOceanus\nUnknown\nTour\n\n\n\n\n\nCode\n# reorder variables - cargo count, vessel count, fish p, cargo p\n# changing color of the plot - standardise vessel count, cargo count, then \n\n\n\n\n\n\n\n\nPossible considerations\n\n\n\n1 vessel may contribute to various cargo\nHowever, as mentioned in the data description, no harbor reports the vessels everyday, the dataset used of Event.HarborReport might not have the complete depiction of the vessels arrival.\nTo supplement this, we will combine with the Event.TransponderPing records for better match.\n\n\nAttempt #1 to map cargo to vessel by date\n\n\nCode\ntx_dt &lt;- tx_qty %&gt;% \n  # select(-c(last_edited_by, last_edited_date, date_added)) %&gt;% \n  arrange(dest, tx_date) %&gt;%\n  select(dest, tx_date, cargo_id, fish_species, qty_tons)\n\n# return cargo_id\ndatatable(tx_dt, \n          options = list(pageLength = 10), \n          filter = \"top\")\n\n\n\n\n\n\nCode\n# plot heat map\ncargo_summary &lt;- tx_qty %&gt;%\n  group_by(dest, tx_date) %&gt;%\n  summarize(cargo_count = n())\n\n# reshape data\ncargo_summary_reshape &lt;- dcast(cargo_summary, tx_date ~ dest, value.var = \"cargo_count\", fill = 0)\n\n# Melt the data back to long format for ggplot\ncargo_summary_reshape2 &lt;- melt(cargo_summary_reshape, id.vars = \"tx_date\", variable.name = \"dest\", value.name = \"cargo_count\")\n\n# Plot the heatmap\ncargo_ts &lt;- ggplot(cargo_summary_reshape2, \n                        aes(x = tx_date, y = dest, fill = cargo_count)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"white\", high = \"blue\") +\n  labs(title = \"Number of Cargo per Date at Each Harbor\",\n       x = \"Date\",\n       y = \"Harbor\",\n       fill = \"Cargo Count\")\n\nggplotly(cargo_ts)\n\n\n\n\n\n\nCode\n## Add filter for city and date\n\n\n\n\nCode\nHb_v_dt &lt;- E_Hbrpt_v %&gt;% \n  arrange(port, arr_date) %&gt;%\n  select(port, arr_date, vessel_id, vessel_company)\n\ndatatable(Hb_v_dt, \n          options = list(pageLength = 10), \n          filter = \"top\")\n\n\n\n\n\n\n\n\nCode\nvessel_summary &lt;- E_Hbrpt_v %&gt;%\n  group_by(port, arr_date) %&gt;%\n  summarize(vessel_count = n())\n\n# reshape data\nvessel_summary_reshape &lt;- dcast(vessel_summary, arr_date ~ port, value.var = \"vessel_count\", fill = 0)\n\n# Check the reshaped data\nhead(vessel_summary_reshape)\n\n\n    arr_date City of Haacklee City of Himark City of Lomark City of Paackland\n1 2035-02-01                2              1              0                 1\n2 2035-02-02                0              2              2                 4\n3 2035-02-03                3              0              0                 5\n4 2035-02-04                1              0              1                 0\n5 2035-02-05                2              2              1                52\n6 2035-02-06                0              0              0                 1\n  City of Port Grove City of South Paackland\n1                  1                       1\n2                  1                       3\n3                  0                       1\n4                  0                       0\n5                  0                       0\n6                  0                       2\n\n\nCode\n# Melt the data back to long format for ggplot\nvessel_summary_reshape2 &lt;- melt(vessel_summary_reshape, id.vars = \"arr_date\", variable.name = \"port\", value.name = \"vessel_count\")\n\n# Check the melted data\nhead(vessel_summary_reshape2)\n\n\n    arr_date             port vessel_count\n1 2035-02-01 City of Haacklee            2\n2 2035-02-02 City of Haacklee            0\n3 2035-02-03 City of Haacklee            3\n4 2035-02-04 City of Haacklee            1\n5 2035-02-05 City of Haacklee            2\n6 2035-02-06 City of Haacklee            0\n\n\nCode\n# Plot the heatmap\nvessel_ts &lt;- ggplot(vessel_summary_reshape2, \n                    aes(x = arr_date, y = port, fill = vessel_count)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"white\", high = \"blue\") +\n  labs(title = \"Number of Vessels per Date at Each Harbor\",\n       x = \"Date\",\n       y = \"Harbor\",\n       fill = \"Vessel Count\")\n\nggplotly(vessel_ts)\n\n\n\n\n\n\nAttempt to map vessel to cargo\n\n\n\n\n\n\n\n\nMatching Method\n% Match\n% Mis-match\n\n\n\n\nTx_c (Cargo import) with E_Hbrpt_v (Vessel Harbor Arrival) by date\n2454 / 5307 = 46%\n2853 / 5307 = 54%\n\n\nTx_c (Cargo Import) with Ping Activity (Vessel at port) by date\n5307 / 5307 = 100%\n\n\n\nTx_c (Fish Species) with Ping Activity (Past route & probable fishes caught)\n\n\n\n\n\n\n\nCode\n# cleaning tx_qty to align date-time to only date \ntx_qty1 &lt;- tx_qty %&gt;% \n  mutate(tx_date = as.Date(tx_date))\n\nm1 &lt;- tx_qty1 %&gt;% left_join(E_Hbrpt_v %&gt;% select(arr_date, port, vessel_id), \n                            by = c(\"tx_date\" = \"arr_date\", \"dest\" = \"port\")) %&gt;%\n  group_by(cargo_id, dest, tx_date) %&gt;%\n  summarize(probable_vessel = list(vessel_id), .groups = \"drop\")\n\nm1_summary &lt;- m1 %&gt;%\n  mutate(match_status = ifelse(is.na(probable_vessel), \"NA\", \"Matched\")) %&gt;%\n  group_by(match_status) %&gt;%\n  summarize(count = n()) %&gt;%\n  mutate(percentage = (count / sum(count)) * 100)\n\n# santising ping activity to table with unique vessel_id per port per date.\n\nping_activity_c &lt;- ping_activity %&gt;%\n  filter(area %in% unique_port, vessel_type == c(\"Fishing\", \"Cargo_Vessel\")) %&gt;%\n  mutate(start_date = as.Date(start_time)) %&gt;%\n  group_by(start_date, area) %&gt;% \n  summarize(probable_vessel = list(unique(vessel_id)), .groups = \"drop\") \n\nm2 &lt;- tx_qty1 %&gt;% left_join(ping_activity_c, \n                            by = c(\"tx_date\" = \"start_date\", \"dest\" = \"area\")) %&gt;%\n  group_by(cargo_id, dest, tx_date)\n\nm2_summary &lt;- m2 %&gt;%\n  mutate(match_status = ifelse(is.na(probable_vessel), \"NA\", \"Matched\")) %&gt;%\n  group_by(match_status) %&gt;%\n  summarize(count = n()) %&gt;%\n  mutate(percentage = (count / sum(count)) * 100)\n\n# mapping route of boats by integrating harbor report\n\n## santising ping activity to focus on fishing and cargo vessels, create new column to assign report type as \"transponderping\" \n\nping_movement &lt;- ping_activity %&gt;%\n  filter(vessel_type == c(\"Fishing\", \"Cargo_Vessel\")) %&gt;%\n  mutate(start_date = as.Date(start_time)) %&gt;%\n  select( c(\"start_date\", \"area\", \"kind\", \"Activities\", \"vessel_id\", \"fish_species_present\", \"vessel_type\", \"vessel_company\")) %&gt;%\n  mutate(report = \"transponderping\")\n\n# aligning columns of E_Hbrpt_v with ping movement (need to match activities with N_City, varying activities per city)\n\nport_record &lt;- E_Hbrpt_v %&gt;% \n  left_join(NL_City, by = c(\"port\" = \"city_id\")) %&gt;%\n  mutate(report = \"hbrpt\", kind = \"city\", fish_species_present = NA) %&gt;% \n  rename(area = port, \n         start_date = arr_date) %&gt;%\n  select(c(\"start_date\", \"area\", \"kind\", \"Activities\", \"vessel_id\", \"fish_species_present\", \"vessel_type\", \"vessel_company\", \"report\"))\n\n# merge route movement\nroute &lt;- bind_rows(ping_movement, port_record)\nroute &lt;- route %&gt;% arrange(vessel_id, start_date)\n\n# vessel_id, trip length, location, possible fish species\n\n\n\n\nCode\n# summarising route taken by vessels\nroute_summary &lt;- route %&gt;%\n  mutate(route_list = ifelse(report == \"hbrpt\", area, NA),\n         probable_fish_species = ifelse(report == \"hbrpt\", fish_species_present, NA),\n         route_start = ifelse(report == \"hbrpt\", start_date, NA),\n         route_end = ifelse(report == \"hbrpt\", lead(start_date), NA)) %&gt;%\n  fill(route_list, probable_fish_species, route_start, route_end, .direction = \"down\") %&gt;%\n  group_by(vessel_id, route_start) %&gt;%\n  mutate(route_list = ifelse(is.na(report) | report != \"hbrpt\", area, route_list),\n         probable_fish_species = ifelse(is.na(report) | report != \"hbrpt\", fish_species_present, probable_fish_species)) %&gt;%\n  group_by(vessel_id, route_start) %&gt;%\n  summarize(route_list = list(unique(route_list)), \n            probable_fish_species = list(unique(probable_fish_species)),\n            route_start = first(route_start), \n            route_end = last(route_end), \n            .groups = 'drop') %&gt;%\n  distinct() %&gt;%\n  filter(!is.na(route_start))\n\n\n\n\nCode\n# retaining only unique values \n\nroute_summary_unique &lt;- route_summary %&gt;%\n  mutate(route_list = sapply(route_list, function(x) paste(unique(unlist(strsplit(x, \", \"))), collapse = \", \")),\n         probable_fish_species = sapply(probable_fish_species, function(x) paste(unique(unlist(strsplit(x, \", \"))), collapse = \", \")))\n\n# merging with vessel details and potential fish species at the area\n\n\nEvaluating appropriateness of match - #count of match & mis-match\n\n\nCode\n# Comparing count of cargo and count of vessel at habor by date and port\n\nvessel_type_summary &lt;- E_Hbrpt_v %&gt;%\n  group_by(port, arr_date, vessel_type) %&gt;%\n  summarize(vessel_type_count = n())\n\n# reclass to split count by vessel type\nvessel_type_summary_reshaped &lt;- dcast(vessel_type_summary, port + arr_date ~ vessel_type, value.var = \"vessel_type_count\", fill = 0)\n\n# combine individual vessel type\nvessel_summary2 &lt;- vessel_type_summary_reshaped %&gt;%\n  rename(date = arr_date, port = port) \n\n# combine total count of vessel\nvessel_summary &lt;- vessel_summary %&gt;%\n  rename(date = arr_date, port = port) \n\n# combine cargo count\ncargo_summary2 &lt;- cargo_summary %&gt;% \n  mutate(tx_date = as.Date(tx_date)) %&gt;%\n  rename(date = tx_date, port = dest) # Assuming 'dest' is the correct column name in tx_qty\n\n# Merge the datasets by date and port\nby_time &lt;- merge(vessel_summary2, vessel_summary, by = c(\"port\", \"date\"), all = TRUE)\nby_time &lt;- merge(by_time, cargo_summary2, by = c(\"port\", \"date\"), all = TRUE)\n\n\n# test\nby_time &lt;- by_time %&gt;% mutate(diff_combined = vessel_count - cargo_count, \n                              diff_cargo_v = Cargo_Vessel - cargo_count, \n                              diff_fish_v = Fishing - cargo_count)\n\nview(by_time)\n\n\nIncluding transponder ping data\n\n\nCode\n# Network analysis to see mapping of fish species delivered to which port at what quantity\n\nedges &lt;- total_qty_tons_per_dest %&gt;%\n  select(from = fish_species, to = dest, weight = total_qty_tons)\n\n# Create graph from data frame\ngraph &lt;- graph_from_data_frame(edges, directed = FALSE)\n\n# Convert to tbl_graph object\ngraph_tbl &lt;- as_tbl_graph(graph)\n\n# Plot the network graph using ggraph\nggraph(graph_tbl, layout = 'fr') + \n  geom_edge_link(aes(width = weight), alpha = 0.8) +\n  geom_node_point(aes(color = ifelse(name %in% edges$from, \"Fish Species\", \"Destination\")), size = 5) +\n  geom_node_text(aes(label = name), vjust = 1.5, hjust = 1.5) +\n  scale_edge_width(range = c(0.5, 5)) +\n  scale_color_manual(values = c(\"Fish Species\" = \"green\", \"Destination\" = \"blue\")) +\n  theme_void() +\n  labs(title = \"Network Analysis of Fish Species per Destination\", color = \"Node Type\", edge_width = \"Total Quantity (tons)\")\n\n\n\n\n\n\n\n\n\nPotential illegal activities:\n\nCargo_id with fish species of piscisosseusb6d and piscesfoetidaae7 where both species only found in ecological reserves\n\nReference: https://isss608-ay2023-haileycsy.netlify.app/take-home_ex/take-home_ex03/take-home_ex03\n\n\n\nUnderstanding the sequence of event by understanding when South Seafood Express Corp was caught.\n\nIdentifying activity of vessels activity via calendar map\nZooming into last seen activity for South Seafood Express Corp\n\n\n\nCode\nvessel_movement &lt;- vessel_movement %&gt;%  \n  mutate(year = year(start_time),\n         month = month(start_time, label = TRUE),\n         day = day(start_time),\n         week = week(start_time),\n         weekday = wday(start_time, label = TRUE, week_start = 1))\n\n# unique(vessel_movement$area)\n# focus on specific areas \n\nselected_area &lt;- c(\"Ghoti Preserve\", \"Wrasse Beds\", \"Nemo Reef\", \"Don Limpet Preserve\", \"Tuna Shelf\", \"Cod Table\")\n\nselected_port &lt;- c(\"Haacklee\", \"Lomark\", \"Himark\", \"South Paackland\")\n  \nvessel_dist_count &lt;- vessel_movement %&gt;%\n  group_by(area, year, month, day) %&gt;%\n  summarise(vessel_count = n_distinct(vessel_id)) %&gt;% \n  filter(area %in% selected_area)\n\ncalendar_data &lt;- expand.grid(year = unique(vessel_dist_count$year),\n                             month = unique(vessel_dist_count$month),\n                             day = 1:31, \n                             area = selected_area ) %&gt;%\n  filter(!is.na(ymd(paste(year, month, day, sep = \"-\"))))\n\n# merging calendar grid with vessel count\ncalendar_data2 &lt;- left_join(calendar_data, vessel_dist_count, by = c(\"year\", \"month\", \"day\", \"area\"))\n\n# sanitising by replacing NA with 0\ncalendar_data2$vessel_count[is.na(calendar_data2$vessel_count)] &lt;- 0\n\n# plotting calendar chart \nggplot(calendar_data2, aes(x = day, y = month, fill = vessel_count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(low = \"white\", high = \"blue\") +\n  facet_wrap(~ area ) +\n  labs(title = \"Calendar Map of Activities\",\n       x = \"Day\",\n       y = \"Month\",\n       fill = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Zooming into South Seafood Express Corp activity\n\nvessel_movement_ss &lt;- vessel_movement %&gt;% \n  filter(vessel_company == \"SouthSeafood Express Corp\") %&gt;%\n  group_by(area, year, month, day) %&gt;%\n  summarise(vessel_count = n_distinct(vessel_id))\n\n# Exploring where SS were at - Exclude Nav areas, and Exit \n# unique(vessel_movement_ss$area)\n\ncalendar_data_ss &lt;- expand.grid(year = unique(vessel_movement_ss$year),\n                             month = unique(vessel_movement_ss$month),\n                             day = 1:31, \n                             area = vessel_movement_ss$area ) %&gt;%\n  filter(!is.na(ymd(paste(year, month, day, sep = \"-\"))))\n\ncalendar_datass2 &lt;- left_join(calendar_data_ss, vessel_movement_ss, by = c(\"year\", \"month\", \"day\", \"area\"))\n\n# sanitising by replacing NA with 0\ncalendar_datass2$vessel_count[is.na(calendar_datass2$vessel_count)] &lt;- 0\n\n# plotting calendar chart \nggplot(calendar_datass2, aes(x = day, y = month, fill = vessel_count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(low = \"white\", high = \"blue\") +\n  facet_wrap(~ area ) +\n  labs(title = \"Calendar Map of Activities\",\n       x = \"Day\",\n       y = \"Month\",\n       fill = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\n\n\n\n\nCode\n## Check which year and last appearance date \n\n\n\nPinpointing last activity of South Seafood Express Corp\n\n14 May 2035 for snappersnatcher7be at City of Lomark, Cod Table\n6 May 2035 for roachrobberdb6 for City of Himark, Cod Table, Wrasse Bed\n\n\n\nCode\nping_activity_ss &lt;- ping_activity %&gt;% \n  filter(vessel_company == \"SouthSeafood Express Corp\") %&gt;% \n  mutate(date = as.Date(start_time)) %&gt;% \n  select(date, vessel_id, area ) %&gt;%\n  distinct()\n\ndatatable(ping_activity_ss, \n          options = list(pageLength = 5), \n          filter = \"top\")\n\n\n\n\n\n\nAny new introduction of vessels after South Seafood Express was removed and date of first appearance.\n\nNo new vessel added (N_vessel$date_added &gt;= 2023-05) = NA\nNo vessel amended (N_vessel$last_edited_date &gt;= 2023-05) = yes - filter out to see (Salmon Snatcher)\n\n\n\nCode\n# Splitting dataframe to before and after SS was caught. \n\ndate_caught &lt;- as.Date(\"2035-05-14\")\n\n\nfish_v_activity_bef &lt;- fish_v_activity %&gt;% \nmutate(start_date = as.Date(start_time)) %&gt;%\nfilter(start_date &lt;= date_caught)\n\nfish_v_activity_aft &lt;- fish_v_activity %&gt;% \nmutate(start_date = as.Date(start_time)) %&gt;%\nfilter(start_date &gt; date_caught)\n\n# plot dwell time bef and after \nfishing_dwell_aft &lt;- ggplot(fish_v_activity_aft, aes(x = area, y = dwell)) +\n  geom_boxplot() +\n  geom_point(data = subset(fish_v_activity, vessel_id == \"snappersnatcher7be\"),\n             aes(x = area, y = dwell), color = \"red\", size = 1) +\n  geom_point(data = subset(fish_v_activity, vessel_id == \"roachrobberdb6\"),\n             aes(x = area, y = dwell), color = \"orange\", size = 1) +\n  theme_minimal() +\n  labs(title = \"Median Dwell Time by Area\", \n       x = \"Area\", \n       y = \"Median Dwell Time\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  scale_y_continuous(limits = c(0, 600000)) + # limit dwell \n  coord_flip()\n\n\nfishing_dwell_bef &lt;- ggplot(fish_v_activity_bef, aes(x = area, y = dwell)) +\n  geom_boxplot() +\n  theme_minimal() +\n  labs(title = \"Median Dwell Time by Area\", \n       x = \"Area\", \n       y = \"Median Dwell Time\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  scale_y_continuous(limits = c(0, 600000)) + # limit dwell \n  coord_flip()\n\nfishing_dwell_bef | fishing_dwell_aft\n\n\n\n\n\n\n\n\n\nCode\n# check logic - why ss appears in aft plot \n\n# comparing median time spent at each area before and after\n\nfish_v_activity_bef_sum &lt;- fish_v_activity_bef %&gt;%\n  group_by(area) %&gt;%\n  summarise(median_dwell = median(dwell, na.rm = TRUE))\n\nfish_v_activity_aft_sum &lt;- fish_v_activity_aft %&gt;%\n  group_by(area) %&gt;%\n  summarise(median_dwell = median(dwell, na.rm = TRUE))\n\nfish_v_bef_aft &lt;- left_join(fish_v_activity_bef_sum, fish_v_activity_aft_sum, by = c(\"area\" = \"area\"))\nfish_v_bef_aft &lt;- fish_v_bef_aft %&gt;% \n  rename(median_dwell_bef = median_dwell.x, median_dwell_aft = median_dwell.y) %&gt;%\n  mutate(diff_bef_aft = median_dwell_bef - median_dwell_aft) %&gt;% arrange(diff_bef_aft)\n\nggplot(fish_v_bef_aft, aes(x= area, y = diff_bef_aft)) + geom_bar(stat = \"identity\")\n\n\n\n\n\n\n\n\n\nCode\n# reorder variable such that group ecological preserves together and ports tgt (see direct contrast)\n# highlight color - shift from fishing at Ghoti reserve to fishing at Lim Donpet Reserves\n\n\nComparison of vessel count per port per week before and after SS got caught 14 May 2035 - Monday, Friday - 18 May 2035\n\n\nCode\nfish_v_activity_bef_count &lt;- fish_v_activity_bef %&gt;%\n  group_by(start_date, area) %&gt;%\n  summarize(fish_dist_count_bef = n_distinct(vessel_id)) %&gt;% \n  group_by(area) %&gt;% \n  summarize (fish_dist_total_bef = sum(fish_dist_count_bef))\n\n# check day diff - if inclusive / exclusive of date_caught +/- 1 days\n\ndays_bef &lt;- difftime(date_caught, min(fish_v_activity_bef$start_date),  units = \"days\") #102 days --&gt; /7 for weeks\ndays_aft &lt;- difftime(max(fish_v_activity_aft$start_date), date_caught, units = \"days\") #199 days \n\nfish_v_activity_aft_count &lt;- fish_v_activity_aft %&gt;%\n  group_by(start_date, area) %&gt;%\n  summarize(fish_dist_count_aft = n_distinct(vessel_id)) %&gt;% \n  group_by(area) %&gt;% \n  summarize (fish_dist_total_aft = sum(fish_dist_count_aft)) \n\nfish_v_count_bef_aft &lt;- left_join(fish_v_activity_bef_count, fish_v_activity_aft_count, by = c(\"area\" = \"area\"))\nfish_v_count_bef_aft &lt;- fish_v_count_bef_aft %&gt;% \n  mutate(fish_dist_total_bef_weeks = (fish_dist_total_bef / as.numeric(days_bef))*7, \n          fish_dist_total_aft_weeks = (fish_dist_total_aft/ as.numeric(days_aft))*7) %&gt;% \n  mutate(diff_count_bef_aft = fish_dist_total_bef_weeks - fish_dist_total_aft_weeks) %&gt;% \n  arrange(diff_count_bef_aft)\n\nggplot(fish_v_count_bef_aft, aes(x= area, y = diff_count_bef_aft)) + geom_bar(stat = \"identity\")\n\n\n\n\n\n\n\n\n\nComparison of vessel that had drastic switch in route - different location (delta from paste route location and new route location)\nComparison of cargo breakdown\n\n\nCode\ntx_qty_bef &lt;- tx_qty1 %&gt;% filter(tx_date &lt;= date_caught)\ntx_qty_aft &lt;- tx_qty1 %&gt;% filter(tx_date &gt; date_caught)\n\n# Calculate median quantity of fish per port \ntx_qty_bef_sum &lt;- tx_qty_bef %&gt;% \n  group_by(dest, fish_species) %&gt;%\n  summarize(qty_tons_bef_sum = sum(qty_tons), cargo_bef_count = n())\n\ntx_qty_aft_sum &lt;- tx_qty_aft %&gt;%\n  group_by(dest, fish_species) %&gt;%\n  summarize(qty_tons_aft_sum = sum(qty_tons), cargo_aft_count = n())\n\ntx_qty_bef_aft &lt;- left_join(tx_qty_aft_sum, tx_qty_bef_sum, by = c(\"dest\" = \"dest\", \"fish_species\" = \"fish_species\"))\n\ncolnames(tx_qty_bef_aft)\n\n\n[1] \"dest\"             \"fish_species\"     \"qty_tons_aft_sum\" \"cargo_aft_count\" \n[5] \"qty_tons_bef_sum\" \"cargo_bef_count\" \n\n\nCode\n# adjustment to per week\ntx_qty_bef_aft &lt;- tx_qty_bef_aft %&gt;% \n  mutate(qty_tons_aft_sum_week = (qty_tons_aft_sum / as.numeric(days_aft))*7,\n        cargo_aft_count_week = (cargo_aft_count / as.numeric(days_aft))*7, \nqty_tons_bef_sum_week = (qty_tons_bef_sum / as.numeric(days_bef))*7,\ncargo_bef_count_week = (cargo_bef_count / as.numeric(days_bef))*7) #, \n\n# include assign 0 to NA values + calculate differentials \n# qty_tons_bef_aft_week = qty_tons_bef_sum_week - qty_tons_aft_sum_week, \n# cargo_count_bef_aft_week = cargo_bef_count_week - cargo_aft_count_week)\n\ntx_count_bef_aft &lt;- ggplot(tx_qty_bef_aft, aes(x= dest, y = diff_count_bef_aft)) + geom_bar(stat = \"identity\")\n\n\n\n\n\n\n\n\n\n\nCode\n# E_Tping_c_Fishing &lt;- E_Tping_c %&gt;%\n#   left_join(N_vessel %&gt;% select(vessel_id, vessel_type, vessel_company), by = \"vessel_id\") %&gt;%\n#   filter(vessel_type == \"Fishing\")\n# \n# edges &lt;- data.frame(\n#   from = E_Tping_c_Fishing$vessel_company,\n#   to = E_Tping_c_Fishing$ping_source\n# )\n# \n# # Create a graph object\n# graph &lt;- graph_from_data_frame(edges, directed = FALSE)\n# \n# # Plot the network\n# plot(graph, vertex.size=10, vertex.label.cex=0.8, vertex.label.color=\"black\",\n#      main=\"Network Visualization of Boats Movement\")\n\n\n\n\nCode\n# E_Tping_c_Fishing_SS &lt;- E_Tping_c_Fishing %&gt;%\n#   filter(vessel_company == \"SouthSeafood Express Corp\")\n# \n# edges_ss &lt;- data.frame(\n#   from = E_Tping_c_Fishing_SS$vessel_company,\n#   to = E_Tping_c_Fishing_SS$ping_source\n# )\n# \n# # Create a graph object\n# graph_ss &lt;- graph_from_data_frame(edges_ss, directed = FALSE)\n# \n# \n# # Create a vertex attribute to distinguish between boats, SouthSeafood, and other companies\n# V(graph_ss)$type &lt;- ifelse(V(graph_ss)$name == \"SouthSeafood Express Corp\", \"southseafood\", \n#                         ifelse(V(graph)$name %in% E_Tping_c_Fishing_SS$vessel_id, \"boat\", \"location\"))\n# \n# # Plot the network with ggraph\n# ggraph(graph_ss, layout = 'fr') +  # 'fr' layout (Fruchterman-Reingold) to spread nodes nicely\n#   geom_edge_link(aes(width = 1), edge_colour = \"grey\") +  # Add edges with grey color\n#   geom_node_point(aes(color = type), size = 5) +  # Add nodes with different colors based on type\n#   geom_node_text(aes(label = name), repel = TRUE, size = 3, color = \"black\") +  # Add labels with repulsion\n#   scale_color_manual(values = c(\"boat\" = \"orange\", \"location\" = \"blue\", \"southseafood\" = \"red\")) +  # Define custom colors\n#   theme_void() +  # Use a void theme to remove background grid\n#   labs(title = \"Network Visualization of Boats Movement\")  # Add title"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03_3.html#introduction",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03_3.html#introduction",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "FishEye has learned that SouthSeafood Express Corp has been caught fishing illegally. The scandal caused a major disruption in the close-knit fishing community. FishEye has been collecting data on ship movements and shipping records in hopes that they could assemble a cohesive store of knowledge that will allow them to better understand local commercial fishing behavior.\n\n\n\nFishEye analysts need your help to perform geographic and temporal analysis of the CatchNet data so they can prevent illegal fishing from happening again. This includes:\n\nVisualization system to associate vessels with their probable cargos, including seasonality analysis to detect any anomalies in port exit records.\nVisualization to illustrate inappropriate behavior of SouthSeafood Express Corp Vessels, in terms of vessel movements, catch contents, regions where illegal fishing is performed, telling-signs of suspicious behaviors.\nIdentifying vessels engaging in similar behavious to SouthSeafood Express Corp.\nVisualizing changes in fishing activities after SouthSeafood Express was caught."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03_3.html#data-import-processing",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03_3.html#data-import-processing",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "Code\n# load package\npacman::p_load(jsonlite, tidyverse, tidyr, \n               knitr, lubridate, dplyr, \n               igraph, ggraph, ggdist, ggplot2, \n               SmartEDA, sf, tidygraph, reshape2, readr,\n               DT, patchwork,plotly)\n\n# load data\nmc2_data &lt;- fromJSON(\"data/mc2.json\")\n#oceanus_geog = st_read(\"data/Oceanus Geography.geojson\") %&gt;% st_transform(crs = 4326)\n\n\n\n\n\nReference: Kickstarter 2 by Prof Kam\n\n\n\nExtracting JSON file edges to tibble data frame and removing duplicates\nConverting to the correct data types for datetime\nRenaming columns starting with “_ xx_” to minimize downstream syntax errors.\nCreating subsets of data tables based on column of “type”\nRenaming of columns to provide context and unique identifiers for downstream data mapping.\nSpecifically for tx_c, adjustment of transaction date, T0 to T-1 as fish import generally leave harbor one day after delivery\nResultant data sets include:\n\n\n\n\n\n\n\n\nResultant Edges Data Set\nUnique columns\n\n\n\n\nTransactions (i.e., tx_c)\nCargo_id, Destination, Transaction date, Fish species\n\n\nTransponder Ping (i.e., E_Tping_c)\nStart_time, Dwell, Ping source, Vessel_id\n\n\nHabor Arrival Report (E_Hbrpt_c)\nVessel_id, Port, Key, Arrival date, Port master, Aphorism, Holiday Greeting, Saying of the Sea, Wisdom\n\n\n\n\n\nCode\n#assigning to mc2_edges2\nmc2_edges &lt;- as_tibble(mc2_data$links) %&gt;% \n  distinct() \n\n#correcting data type - converting to date format\nmc2_edges$time &lt;- as_datetime(mc2_edges$time)\nmc2_edges$\"_last_edited_date\" &lt;- as_datetime(mc2_edges$\"_last_edited_date\")\nmc2_edges$\"_date_added\" &lt;- as_datetime(mc2_edges$\"_date_added\")\nmc2_edges$date &lt;- as_datetime(mc2_edges$date)\n\n\n#renaming headers with \"_\" to prevent errors. \nmc2_edges &lt;- mc2_edges %&gt;%\n  rename(\"last_edited_by\" = \"_last_edited_by\",\n         \"date_added\" = \"_date_added\",\n         \"last_edited_date\" = \"_last_edited_date\",\n         \"raw_source\" = \"_raw_source\",\n         \"algorithm\" = \"_algorithm\") \n\n#checking data format\n#glimpse(mc2_edges)\n\n# Breaking into subsets based on event category\nE_TransponderPing &lt;- subset(mc2_edges,  mc2_edges$type == \"Event.TransportEvent.TransponderPing\")\nE_HarborRpt &lt;- subset(mc2_edges,  mc2_edges$type == \"Event.HarborReport\")\nE_Tx &lt;- subset(mc2_edges, mc2_edges$type == \"Event.Transaction\")\n\n# Dropping columns that are NULL and renaming variables to separate them\n\n# Transactions\nE_Tx_c &lt;- E_Tx %&gt;%\n  rename(\n  cargo_id = source, \n  dest = target,\n  tx_date = date) %&gt;%\n  mutate(tx_date = tx_date -1) %&gt;% # adjustment for records\n  select(-c(key, algorithm, `raw_source`, `type`, `data_author`, `aphorism`, `holiday_greeting`, `wisdom`, `saying of the sea`, `time`, `dwell`)) \n\n# Separating the fish species for the respective cargo \ntx_sub1 &lt;- E_Tx_c[grep(\"^City of\", E_Tx_c$dest), ]\ntx_sub2 &lt;- E_Tx_c[!grepl(\"^City of\", E_Tx_c$dest), ]\ntx_sub2 &lt;- tx_sub2 %&gt;% rename(fish_species = dest)\n\ntx_c &lt;- left_join(tx_sub1, tx_sub2 %&gt;% select(cargo_id, fish_species), by = \"cargo_id\")\n\n# Dropping raw source: All Oceanus Centralized Export/Import Archive and Notatification Service (OCEANS)\n# Dropping algorithm: CatchMate ('arrrr' edition)\n# Null columns - Data author, aphorism, holiday_greeting, wisdom, saying of the sea, time, dwell\n\n# Transponder Ping\nE_Tping_c &lt;- E_TransponderPing %&gt;%\n  rename(vessel_id = target, \n         ping_source = source,\n         start_time = time) %&gt;%\n  select(-c(key, `algorithm`, `raw_source`, `type`, `date`, `data_author`, `aphorism`, `holiday_greeting`, `wisdom`, `saying of the sea`)) \n\n#Dropping raw_source: All Oceanus Vessel Locator System\n#Dropping algorithm: All OVLS-Catch&Hook\n# Null columns - Date, Data author, aphorism, holiday_greeting, wisdom, saying of the sea\n\n# Habour Report\nE_Hbrpt_c &lt;- E_HarborRpt %&gt;% rename(\n  vessel_id = source, \n  port = target, \n  arr_date = date, \n  port_master = data_author, \n  saying = `saying of the sea`\n) %&gt;%\n  select(-c(`algorithm`, `type`, `time`, `dwell`)) \n\n#Dropping algorithm: All HarborReportMaster 3.11\n#Retain raw_source: Differing values depending on which Port / City\n# check meaning of key (0,1,2)\n\nrm(tx_sub1, tx_sub2, E_TransponderPing,  E_HarborRpt, E_Tx)\n\n\n\n\n\nRepeating similar steps for nodes records, we obtained the following resultant data set. To minimize the number of data sets, we appended nodes information on vessels and region into a combined data set, with an assigned label to identify it’s category. (e.g., vessel_type)\n\n\n\n\n\n\n\nResultant Nodes Data Sets\nUnique Columns\n\n\n\n\nN_fish (Fishes and their description)\nFish_id, fish species\n\n\nN_Delivery_Doc (Cargo and details)\nCargo_id, quantity in tons, delivery date\n\n\nN_vessel (Vessels and their description)\nVessel_id, vessel name, vessel company, flag country, tonnage, overall length, vessel type\n\n\nLocation_legend (Point, City, Region)\nArea, activities, kind, fish_species\n\n\n\n\n\nCode\n#segmenting nodes data and checking for distinct records\nmc2_nodes &lt;- as_tibble(mc2_data$nodes) %&gt;%\n  distinct()\n\n#renaming to remove the \"_\" \nmc2_nodes &lt;- mc2_nodes %&gt;%\n  rename(\"last_edited_by\" = \"_last_edited_by\",\n         \"date_added\" = \"_date_added\",\n         \"last_edited_date\" = \"_last_edited_date\",\n         \"raw_source\" = \"_raw_source\",\n         \"algorithm\" = \"_algorithm\") \n\n#tidying the text data to remove nested list.\n\nmc2_nodes_tidied &lt;- mc2_nodes %&gt;%\n  mutate(Activities = gsub(\"c[(]\", \"\", Activities)) %&gt;% \n  mutate(Activities = gsub(\"\\\"\", \"\", Activities)) %&gt;%\n  mutate(Activities = gsub(\"[)]\", \"\", Activities)) \n\nmc2_nodes_tidied &lt;- mc2_nodes_tidied %&gt;%\n  mutate(fish_species_present = gsub(\"c[(]\", \"\", fish_species_present)) %&gt;% \n  mutate(fish_species_present = gsub(\"\\\"\", \"\", fish_species_present)) %&gt;%\n  mutate(fish_species_present = gsub(\"[)]\", \"\", fish_species_present)) \n\n# Creating subset on nodes information\nN_fish &lt;- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Commodity.Fish\") %&gt;%\n  select_if(~ !any(is.na(.))) %&gt;% \n  select(-c(`type`, `raw_source`, `algorithm`, `Activities`, `fish_species_present`)) %&gt;%\n  rename(fish_species = name, \n         fish_id = id)\n\nNL_City &lt;- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Location.City\") %&gt;%\n  select_if(~ !any(is.na(.))) %&gt;%\n  select(-c(`raw_source`, `algorithm`, `type`, `fish_species_present`)) %&gt;%\n  rename(city_name = Name, \n         city_id = id)\n\n\nNL_Point &lt;- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Location.Point\") %&gt;%\n  select_if(~ !any(is.na(.))) %&gt;%\n  select(-c(`raw_source`, `algorithm`, `kind`, `fish_species_present`)) %&gt;%\n  rename(point_name = Name, \n         point_id = id)\n\n## Need to tidy NL Region\nNL_Region &lt;- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Location.Region\") %&gt;%\n  select_if(~ !any(is.na(.))) %&gt;%\n  select(-c(`raw_source`, `algorithm`, `type`, `Description`)) %&gt;%\n  rename(region_name = Name, \n         region_id = id, \n         region_kind = kind)\n\nN_Delivery_doc &lt;- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Document.DeliveryReport\") %&gt;%\n  select_if(~ !any(is.na(.))) %&gt;%\n  rename(deliver_date = date,\n         cargo_id = id) %&gt;%\n  select(-c(`algorithm`, `type`, `raw_source`, `Activities`, `fish_species_present`)) \n\n## consider adding back more columns, it dropped some columns where values were partial NA\n\nN_vessel &lt;- mc2_nodes_tidied %&gt;%\n  filter(grepl(\"Entity.Vessel\", type)) %&gt;%\n  mutate(vessel_type = case_when(\n    grepl(\"FishingVessel\", type, ignore.case = TRUE) ~ \"Fishing\",\n    grepl(\"Ferry.Passenger\", type, ignore.case = TRUE) ~ \"Ferry_Passenger\",\n    grepl(\"Ferry.Cargo\", type, ignore.case = TRUE) ~ \"Ferry_Cargo\",\n    grepl(\"Research\", type, ignore.case = TRUE) ~ \"Research\", \n    grepl(\"Other\", type, ignore.case = TRUE) ~ \"Other\", \n    grepl(\"Tour\", type, ignore.case = TRUE) ~ \"Tour\", \n    grepl(\"CargoVessel\", type, ignore.case = TRUE) ~ \"Cargo_Vessel\"\n    )) %&gt;% \n  mutate(company = ifelse(is.na(company), \"Unknown\", company)) %&gt;% # Handle NA values by replacing NA with unknown\n  select(-c(`algorithm`, `type`, `raw_source`, `Activities`, `fish_species_present`, `Description`, `kind`, `style`, `name`, `qty_tons`,`date`)) %&gt;%\n  rename(vessel_id = id, \n         vessel_name = Name, \n         vessel_company = company)\n\n\n# Further exploring records where there is null values\npartial_na_records &lt;- N_vessel[!complete.cases(N_vessel), ]\nkable(partial_na_records)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlast_edited_by\ndate_added\nlast_edited_date\nvessel_id\nvessel_name\nflag_country\nvessel_company\ntonnage\nlength_overall\nvessel_type\n\n\n\n\njuniorshurdlu794\n2034-07-30\n2034-08-16\nwebigailba7\nWebigail\nOceanus\nUnknown\nNA\n50\nOther\n\n\njuniorshurdlu794\n2034-04-17\n2034-05-19\nvenerable89c\nVenerable\nOceanus\nUnknown\nNA\nNA\nFerry_Passenger\n\n\njuniorshurdlu794\n2033-11-22\n2034-04-20\nsturdyd7f\nSturdy\nOceanus\nUnknown\nNA\nNA\nFerry_Cargo\n\n\njuniorshurdlu794\n2033-12-03\n2034-01-04\nstout369\nStout\nOceanus\nUnknown\nNA\nNA\nFerry_Cargo\n\n\nJunior Shurdlu\n2033-12-15\n2034-04-11\ninquisitive8c0\nInquisitive\nOceanus\nUnknown\nNA\nNA\nResearch\n\n\njuniorshurdlu794\n2034-07-30\n2034-11-06\ndewie961\nDewie\nOceanus\nUnknown\nNA\n75\nOther\n\n\nJunior Shurdlu\n2034-07-01\n2034-11-09\nhimarkroyal032\nHimark Royal\nOceanus\nUnknown\nNA\nNA\nTour\n\n\nJunior Shurdlu\n2034-11-28\n2035-04-06\nmrray9c4\nMr. Ray\nOceanus\nUnknown\nNA\nNA\nTour\n\n\nClepper Jessen\n2034-10-01\n2035-02-19\nmanatee17ea\nManatee 1\nOceanus\nUnknown\nNA\nNA\nTour\n\n\njuniorshurdlu794\n2035-01-03\n2035-05-18\nhewey2ef\nHewey\nOceanus\nUnknown\nNA\n75\nOther\n\n\njuniorshurdlu794\n2033-08-12\n2033-10-09\nhonorablea6e\nHonorable\nOceanus\nUnknown\nNA\nNA\nFerry_Passenger\n\n\nClepper Jessen\n2033-09-20\n2033-11-11\nclownfishe3d\nClown Fish\nOceanus\nUnknown\nNA\nNA\nTour\n\n\njuniorshurdlu794\n2033-07-21\n2033-08-20\nlouietheii3e0\nLouie the II\nOceanus\nUnknown\nNA\n75\nOther\n\n\njuniorshurdlu794\n2034-03-02\n2034-06-26\nrespectable717\nRespectable\nOceanus\nUnknown\nNA\nNA\nFerry_Passenger\n\n\nClepper Jessen\n2034-07-27\n2034-10-11\nspiritofoceanus404\nSpirit of Oceanus\nOceanus\nUnknown\nNA\nNA\nTour\n\n\njuniorshurdlu794\n2034-07-03\n2034-11-30\nlouieda4\nLouie\nOceanus\nUnknown\nNA\n75\nOther\n\n\nJunior Shurdlu\n2034-05-28\n2034-07-18\nathenad34\nAthena\nOceanus\nUnknown\nNA\nNA\nResearch\n\n\nJunior Shurdlu\n2033-07-19\n2033-10-03\nheartofoceanusf11\nHeart of Oceanus\nOceanus\nUnknown\nNA\nNA\nTour\n\n\n\n\n\nCode\n# merging ping with location details (region_id, city_id, point_id)\n## See how to deal with list within activites, and how to include region_kind\n## See if want to retain some description to identify point, region vs city\n\ncity_legend &lt;- NL_City %&gt;% \n  select(c(`city_id`, `Activities`, `kind`)) %&gt;%\n  mutate(fish_species_present = \"NA\") %&gt;%\n  rename(area = city_id)\n\npoint_legend &lt;- NL_Point %&gt;% \n  select(c(`point_id`, `Activities`))  %&gt;%\n  mutate(kind = \"point\", \n         fish_species_present = \"NA\") %&gt;%\n  rename(area = point_id)\n\nregion_legend &lt;- NL_Region %&gt;% \n  select(c(`region_id`, `Activities`, `region_kind`, `fish_species_present`))  %&gt;%\n  rename(area = region_id, kind = region_kind)\n\nlocation_legend &lt;- rbind(city_legend, point_legend, region_legend) \n\n#dropping unnecessary tables\nrm(mc2_data, mc2_nodes_tidied, partial_na_records, city_legend, point_legend, region_legend)\n\n\n\n\n\nTo incorporate context of the nodes details into the various edges, the related description of the nodes were appended to edge data sets. This helped to streamline the records into 3 consolidated data sets.\n\n\n\n\n\n\n\n\nConsolidated Data Set\nResultant Edge Data Set\nMapped with Nodes Data Set\n\n\n\n\nTransaction (with cargo weight)\ntx_c: Cargo_id, Destination, Transaction date, Fish species\nN_delivery_doc: Cargo_id, quantity in tons, delivery date\n\n\nPing activity (with vessel details by vessel_id, possible fish caught by location_legend)\nE_Tping_c: Start_time, Dwell, Ping source, Vessel_id\nN_vessel: Vessel_id, vessel name, vessel company, flag country, tonnage, overall length, vessel type\nlocation_legend: Area, activities, kind, fish_species\n\n\nHabor Arrival Report\n(with vessel details)\nE_Hbrpt_c: Vessel_id, Port, Key, Arrival date, Port master, Aphorism, Holiday Greeting, Saying of the Sea, Wisdom\nN_vessel: Vessel_id, vessel name, vessel company, flag country, tonnage, overall length, vessel type\n\n\n\n\n\nCode\n# merging the quantity from delivery_doc with transaction based on cargo id\ntx_qty &lt;- left_join(tx_c, N_Delivery_doc %&gt;% select(cargo_id, qty_tons, deliver_date), by = \"cargo_id\")\n\n# Merging habor report with vessel details to identify type of vessel, tonnage and overall length \n\nE_Hbrpt_v &lt;- left_join(E_Hbrpt_c, N_vessel %&gt;% select(vessel_id, vessel_name, tonnage, length_overall, flag_country, vessel_company, vessel_type), by = \"vessel_id\")\n\n# Merging ping transaction with the location type\nE_Tping_c2 &lt;- E_Tping_c %&gt;% rename(area = ping_source)\nping_activity &lt;- left_join(E_Tping_c2, location_legend %&gt;% select(area, Activities, kind, fish_species_present), by = \"area\")\nping_activity &lt;- left_join(ping_activity, N_vessel %&gt;% select(vessel_id, vessel_name, tonnage, length_overall, flag_country, vessel_company, vessel_type), by = \"vessel_id\")\n\n# removing \"City of\" from the \"area column\" \nvessel_movement &lt;- ping_activity %&gt;%\n  mutate(area = gsub(\"^City of\", \"\", area)) %&gt;%\n  mutate(area = gsub(\"^\\\\s+\", \"\", area))\n\n#write_csv(ping_activity, \"movement.csv\")\n# suggest drop all date added, last edits and edited by - used for biasness analysis, not so much for mc2\n\nrm(tx_c, E_Tping_c2, E_Tping_c, E_Hbrpt_c)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03_3.html#exploratory-data-analysis",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03_3.html#exploratory-data-analysis",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "Reference: Kickstarter 3 by Prof Kam\n\n\nCode\n# ggplot(data = oceanus_geog) + geom_sf()\n# \n# write_rds(oceanus_geog, \"data/rds/OceanusGeography.rds\")\n# \n# OceanusLocations &lt;- st_read(dsn = \"data/shp\",\n#   layer = \"Oceanus Geography\")\n\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\n\n3 fish species are only present in ecological reserves: (1) Offidiaa/Piscis osseus, (2) Sockfish/Pisces foetida and (3) Helenaa/Pisces satis. Hence, any cargo with these fish species have likely violated fishing regulations and fished in ecological reserves. (1) Don Limpet Preserve, (2) Ghoti Preserve and (3) Nemo Reefs.\n\n\n\n\n\nCode\n## Check if code can still be run given above amendment of string split\n\n# Formatting region data to identify fish type in region\nregion_species &lt;- NL_Region %&gt;%\n  mutate(fish_species_present = gsub('c\\\\(|\\\\)|\"', \"\", fish_species_present), \n    fish_species_present = strsplit(as.character(fish_species_present), \", \")) %&gt;%\n  unnest(fish_species_present) %&gt;%\n  mutate(presence = 1) %&gt;%\n  spread(key = fish_species_present, value = presence, fill = 0)\n\nregion_species_c &lt;- region_species %&gt;% \n  select( -region_id, -last_edited_by, -last_edited_date, -date_added)\n\nkable(region_species_c)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nregion_name\nActivities\nregion_kind\nBeauvoir/Habeas pisces\nBirdseye/Pisces frigus\nCod/Gadus n.specificatae\nHarland/Piscis sapidum\nHelenaa/Pisces satis\nOffidiaa/Piscis osseus\nSockfish/Pisces foetida\nTuna/Thunnini n.vera\nWrasse/Labridae n.refert\n\n\n\n\nDon Limpet Preserve\nRecreation, Tourism\nEcological Preserve\n1\n1\n0\n0\n1\n0\n1\n1\n0\n\n\nCod Table\nCommercial fishing\nFishing Ground\n1\n1\n1\n0\n0\n0\n0\n0\n0\n\n\nTuna Shelf\nCommercial fishing, Sport fishing\nFishing Ground\n1\n1\n0\n1\n0\n0\n0\n1\n0\n\n\nGhoti Preserve\nResearch, Tourism, Recreation\nEcological Preserve\n1\n0\n0\n0\n1\n1\n0\n0\n1\n\n\nNemo Reef\nRecreation, Tourism\nEcological Preserve\n1\n1\n0\n0\n1\n0\n0\n1\n1\n\n\nWrasse Beds\nCommercial fishing\nFishing Ground\n1\n1\n0\n0\n0\n0\n0\n0\n1\n\n\n\n\n\nCode\n#Aligning the naming convention for fish species\n\nregion_species_id &lt;- region_species %&gt;% rename(\n  gadusnspecificatae4ba = `Cod/Gadus n.specificatae`, \n  piscesfrigus900 = `Birdseye/Pisces frigus`, \n  piscesfoetidaae7 = `Sockfish/Pisces foetida`, #illegal\n  labridaenrefert9be = `Wrasse/Labridae n.refert`, \n  habeaspisces4eb = `Beauvoir/Habeas pisces`, \n  piscissapidum9b7 = `Harland/Piscis sapidum`, \n  thunnininveradb7 = `Tuna/Thunnini n.vera`, \n  piscisosseusb6d = `Offidiaa/Piscis osseus`, #illegal\n  piscessatisb87 = `Helenaa/Pisces satis`) #illegal\n\n# write_csv(region_species, \"species_region_id.csv\")\n\n# Location of Salmon not identified (Extra value of Salmon in Fish node)\n# Check what to do with cargos with salmon - oncorhynchusrosea790\n\n# identifying occurence of illegal fish species at various port - identifying all unique fish species in cargo report (tx_qty)\n\nunique_fish_cargo &lt;- unique(tx_qty$fish_species)\nunique_fish_cargo\n\n\n [1] \"gadusnspecificatae4ba\" \"piscissapidum9b7\"      \"habeaspisces4eb\"      \n [4] \"piscesfrigus900\"       \"oncorhynchusrosea790\"  \"piscisosseusb6d\"      \n [7] \"piscesfoetidaae7\"      \"labridaenrefert9be\"    \"thunnininveradb7\"     \n[10] \"piscessatisb87\"       \n\n\nCode\n## assign specific colors to fish species, red for illegal. \n\nfish_species_color &lt;- c(\"piscesfoetidaae7\" = \"#FF6666\", \n                        \"piscisosseusb6d\" = \"#FF9999\", \n                        \"piscessatisb87\" = \"#FFCCCC\", \n                        \"gadusnspecificatae4ba\" = \"#CCE5FF\", \n                        \"piscissapidum9b7\" = \"#99CCFF\", \n                        \"habeaspisces4eb\" = \"#66B2ff\", \n                        \"piscesfrigus900\" = \"#CCE5FF\", \n                        \"oncorhynchusrosea790\" = \"#FFFF99\", \n                        \"labridaenrefert9be\" = \"#99CCFF\", \n                        \"thunnininveradb7\" = \"#66b2ff\"\n                        )\n\n# Summarise total tons of fish per location\ntotal_qty_tons_per_dest &lt;- tx_qty %&gt;%\n  group_by(dest, fish_species) %&gt;%\n  summarize(total_qty_tons = sum(qty_tons, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# Reordering levels for fish species for tidier plot\ntotal_qty_tons_per_dest$fish_species &lt;- factor(\n  total_qty_tons_per_dest$fish_species, \n  levels = c(\"gadusnspecificatae4ba\", \"piscissapidum9b7\", \"habeaspisces4eb\", \n             \"piscesfrigus900\", \"labridaenrefert9be\", \"thunnininveradb7\", \n             \"oncorhynchusrosea790\", # unidentified - Salmon\n             \"piscesfoetidaae7\",\"piscisosseusb6d\", \"piscessatisb87\" )) #illegal\n\n# Plot\nggplot(total_qty_tons_per_dest, aes(x = dest, y = total_qty_tons, fill = fish_species)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = fish_species_color) +\n  labs(title = \"Total Quantity of Fish by Destination and Species\",\n       x = \"Destination\",\n       y = \"Total Quantity (tons)\",\n       fill = \"Fish Species\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nscatter_ton_len &lt;- ggplot(data= N_vessel, \n            aes(x= tonnage, \n                y= length_overall, \n                color= vessel_type)) +\n  geom_point() + \n  theme(legend.position = \"top\")\n\nvessel_count &lt;- N_vessel %&gt;%\n  group_by(vessel_type) %&gt;%\n  summarize(vessel_no = n()) %&gt;% \n  mutate(vessel_type = reorder(vessel_type, - vessel_no))\n\n\nbar_vessel_type &lt;- ggplot(data = vessel_count, \n                          aes(x = vessel_type, \n                              y = vessel_no)) + \n  geom_bar(stat = \"identity\") + \n  geom_text(aes(label = vessel_no), vjust = -0.8, size = 2) + \n  theme(axis.text.x = element_text(size = 5))\n\nscatter_ton_len | bar_vessel_type\n\n\n\n\n\n\n\n\n\nFocusing on Fishing vessels and Cargo vessels, identifying the distribution of ships and companies owning this ship\n\n\nCode\nfishing_v &lt;- N_vessel %&gt;% filter(vessel_type == \"Fishing\")\ncargo_v &lt;- N_vessel %&gt;% filter(vessel_type == \"Cargo_Vessel\")\n\nfishing_v_dist &lt;- ggplot(fishing_v, aes(x = tonnage)) +\n  geom_histogram(binwidth = 500, fill = \"blue\", color = \"black\") +\n  labs(title = \"Distribution of Fishing Vessels by Tonnage\",\n       x = \"Tonnage\",\n       y = \"Frequency\") +\n  theme_minimal() + coord_flip()\n\n# include boxplot to see quartile \n\ncargo_v_dist &lt;- ggplot(cargo_v, aes(x = tonnage)) +\n  geom_histogram(binwidth = 500, fill = \"orange\", color = \"black\") +\n  labs(title = \"Distribution of Cargo Vessels by Tonnage\",\n       x = \"Tonnage\",\n       y = \"Frequency\") +\n  theme_minimal() + \n  coord_flip()\n\n#summary(fishing_v) - min: 100, q1: 600, median: 2400, q3: 4850, max: 17200 - investigate\n#summary(cargo_v) - min: 2100, q1: 2100, median: 23750, q3: 74925, max: 76300 - Investigate \n\nfishing_v_dist | cargo_v_dist\n\n\n\n\n\n\n\n\n\nInsights derived:\n\nException size of fishing vessels (Vessels &gt; 12,500 tons). Possible explanation: Fishing of different nature - to search further on types of fishing vessels.\n\n\n\nCode\n# understanding which vessel \nabn_fish_vessel &lt;- fishing_v %&gt;% filter(tonnage &gt; 12500)\n\nsel_abn_fish_vessel &lt;- abn_fish_vessel %&gt;% \n  select(vessel_name, flag_country, vessel_company) \n\nkable(sel_abn_fish_vessel)\n\n\n\n\n\nvessel_name\nflag_country\nvessel_company\n\n\n\n\nPike Pirate\nOceanus\nRobinson, Mcmillan and Watson\n\n\nMarine Marauder\nOceanus\nNielsen, Valentine and Bell\n\n\n\n\n\nCode\n# understanding region that vessel spends time at \n\nabn_fish_v_activity &lt;- ping_activity %&gt;% \n  filter(vessel_id %in% abn_fish_vessel$vessel_id) \n  \nabn_fish_v_activity_sum &lt;- abn_fish_v_activity %&gt;%\n  group_by(vessel_id, area) %&gt;%\n  summarise(median_dwell = median(dwell, na.rm = TRUE))\n\n# Contrasting with the median time spent by fishing vessels \n\nfish_v_activity &lt;- ping_activity %&gt;% \n  filter(vessel_id %in% fishing_v$vessel_id) \n  \nfish_v_activity_sum &lt;- fish_v_activity %&gt;%\n  group_by(vessel_id, area) %&gt;%\n  summarise(median_dwell = median(dwell, na.rm = TRUE))\n\n# kable(ETping_vessel)\n# Flag out vessels that entered restricted zone\n\nfishing_dwell &lt;- ggplot(fish_v_activity, aes(x = area, y = dwell)) +\n  geom_boxplot() +\n  geom_point(data = subset(fish_v_activity, vessel_id == \"marinemarauder8c9\"),\n             aes(x = area, y = dwell), color = \"red\", size = 1) +\n  geom_point(data = subset(fish_v_activity, vessel_id == \"pikepirate89a\"),\n             aes(x = area, y = dwell), color = \"blue\", size = 1) +\n  theme_minimal() +\n  labs(title = \"Median Dwell Time by Area\", \n       x = \"Area\", \n       y = \"Median Dwell Time\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  scale_y_continuous(limits = c(0, 600000)) + # limit dwell \n  coord_flip()\n\n\n\nWide variation of size for cargo vessels ( Grp 1: &lt; 5000 tons, Grp 2: 75,000 &gt; 5000 tons)\nObserved that vessel company is unknown for all 39 records in group 1, and all unknown for all 33 records in group 2\n\n\n\nCode\nabn_cargo_vessel_s &lt;- cargo_v %&gt;% filter(tonnage &lt; 5000)\nabn_cargo_vessel_l &lt;- cargo_v %&gt;% filter(tonnage &gt; 70000)\n\nsel_abn_cargo_vessel_s &lt;- abn_cargo_vessel_s %&gt;% \n  select(vessel_name, flag_country, vessel_company) \n\nsel_abn_cargo_vessel_l &lt;- abn_cargo_vessel_l %&gt;% \n  select(vessel_name, flag_country, vessel_company) \n\n# display records \nkable(sel_abn_cargo_vessel_s)\n\n\n\n\n\nvessel_name\nflag_country\nvessel_company\n\n\n\n\nSeaway Savvy 9\nOsterivaro\nUnknown\n\n\nOceanic Oracle\nAriuzima\nUnknown\n\n\nMaritime Majestic\nMerigrad\nUnknown\n\n\nCargo Centric\nLumindoria\nUnknown\n\n\nHarbor Helios\nLumakari\nUnknown\n\n\nShip Matrix\nKhamseena\nUnknown\n\n\nTrans Atlantic\nLuminkind\nUnknown\n\n\nFreight Frequency 5\nUtoporiana\nUnknown\n\n\nHarbor Halo 9\nCalabrand\nUnknown\n\n\nFreight Firm\nPlaya Solis\nUnknown\n\n\nOceanic Oasis\nBrindisola\nUnknown\n\n\nSea Sovereign\nGavanovia\nUnknown\n\n\nOceanic Odyssey 11\nIsla Solmar\nUnknown\n\n\nNautical Networks\nBaziuzim\nUnknown\n\n\nMaritime Miracle\nCoralmarica\nUnknown\n\n\nVessel Vanguard\nOrvietola\nUnknown\n\n\nSea Sanctuary\nPlaya Solis\nUnknown\n\n\nSea System 3\nKethanor\nUnknown\n\n\nFreight Forte 6\nNovarctica\nUnknown\n\n\nNautical Nirvana\nRio Solovia\nUnknown\n\n\nMaritime Mover\nOrvietola\nUnknown\n\n\nHarbor Halo\nHelixia\nUnknown\n\n\nNautical Nimbus\nHelixia\nUnknown\n\n\nMaritime Matrix\nHelixia\nUnknown\n\n\nNautical Nexus 1\nRiodelsol\nUnknown\n\n\nTrans Global\nFaraluna\nUnknown\n\n\nSea Sentry 2\nKuzalanda\nUnknown\n\n\nCargo Cosmos\nCoralada\nUnknown\n\n\nTrans Continental\nIsla Solmar\nUnknown\n\n\nCargo Crest\nImazam\nUnknown\n\n\nVessel Vanguard 5\nKhamseena\nUnknown\n\n\nCargo Centric 4\nPlaya Solis\nUnknown\n\n\nHarbor Helix\nKondarivakia\nUnknown\n\n\nSea Solutions\nNyxonix\nUnknown\n\n\nSeaway Synergy 8\nAzurionix\nUnknown\n\n\nSeaway Spectrum\nKethanor\nUnknown\n\n\nSeaway Sage\nCoralada\nUnknown\n\n\nNautical Nucleus 10\nZawalinda\nUnknown\n\n\nMaritime Magnitude\nGavanovia\nUnknown\n\n\n\n\n\nCode\nkable(sel_abn_cargo_vessel_l)\n\n\n\n\n\nvessel_name\nflag_country\nvessel_company\n\n\n\n\nMaritime Maelstrom\nHelvoris\nUnknown\n\n\nHarbor Harmony\nAlverovia\nUnknown\n\n\nVessel Vertex\nUzifrica\nUnknown\n\n\nSea Sentinel 1\nAnderia del Mar\nUnknown\n\n\nBlue Harbor\nMawalara\nUnknown\n\n\nMaritime Momentum\nPlaya Solis\nUnknown\n\n\nCargo Catalyst\nNyxonix\nUnknown\n\n\nVessel Victory 3\nMerigrad\nUnknown\n\n\nOceanic Oasis 1\nUtoparadia\nUnknown\n\n\nTrans Pacific\nValtalmo\nUnknown\n\n\nSeaway Spectra\nOceanus\nUnknown\n\n\nFreight Forte\nValtalmo\nUnknown\n\n\nMaritime Masters\nZawalinda\nUnknown\n\n\nTrans Atlantic 4\nTalandria\nUnknown\n\n\nOceanic Odyssey\nVesperlandia\nUnknown\n\n\nVessel Venture 4\nNovarcticaa\nUnknown\n\n\nOceanic Overture\nUzifrica\nUnknown\n\n\nHarbor Horizon\nIslavaria\nUnknown\n\n\nFreight Frequency\nUtoparadia\nUnknown\n\n\nHarbor Holdings\nRiodelsol\nUnknown\n\n\nNautical Nexus\nUtoporiana\nUnknown\n\n\nOceanic Oracle 2\nMyriadonia\nUnknown\n\n\nTrans Global 6\nThessalandia\nUnknown\n\n\nVessel Ventures\nNyxonix\nUnknown\n\n\nFreight Fountain\nNyxonix\nUnknown\n\n\nVessel Vortex\nMarifada\nUnknown\n\n\nAqua Transit\nKorvelonia\nUnknown\n\n\nSeaway Synergy\nPuerto del Mar\nUnknown\n\n\nNautical Nomad 11\nZambarka\nUnknown\n\n\nBulk Carriers\nSirenareef\nUnknown\n\n\nSea Sentinel\nAlverossia\nUnknown\n\n\nNautical Navigator\nKilivaria\nUnknown\n\n\nOceanic Omnipotent\nPlaya Solis\nUnknown\n\n\n\n\n\nCode\n# subset cargo vessel activity\ncargo_v_activity &lt;- ping_activity %&gt;% \n  filter(vessel_id %in% cargo_v$vessel_id) \n\n# extracting list of vessel id for large and small cargo\nselected_vessel &lt;- abn_cargo_vessel_s$vessel_id\nselected_vessel2 &lt;- abn_cargo_vessel_l$vessel_id\n\n# plotting\ncargo_dwell &lt;- ggplot(cargo_v_activity, aes(x = area, y = dwell)) +\n  geom_boxplot() +\n  geom_point(data = subset(cargo_v_activity, vessel_id == selected_vessel),\n             aes(x = area, y = dwell), color = \"orange\", size = 1) +\n  geom_point(data = subset(cargo_v_activity, vessel_id == selected_vessel2),\n             aes(x = area, y = dwell), color = \"purple\", size = 1) +\n  theme_minimal() +\n  labs(title = \"Median Dwell Time by Area\", \n       x = \"Area\", \n       y = \"Median Dwell Time\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  scale_y_continuous( limits = c(0, 20000)) + #zoom into 2 * 10^5\n  coord_flip()\n\nfishing_dwell | cargo_dwell\n\n\n\n\n\n\n\n\n\nExploring ships from “Unknown companies” - Unregistered ships - Transhipment cargo vessel, only 1 registered with Oceanus, else others by nations.\n\n\nCode\n# exploring ships that have unknown companies\n\nunknown_v &lt;- N_vessel %&gt;% filter(vessel_company == \"Unknown\")\n\n# Summarizing to see where unknown vessels come from\nunknown_v_sum &lt;- unknown_v %&gt;% \n  group_by(vessel_type, flag_country) %&gt;% \n  summarize(vessel_count = n()) %&gt;%\n  mutate(flag_country = reorder(flag_country, - vessel_count))\n\nunknown_dist &lt;- ggplot(unknown_v_sum, \n                       aes(x = flag_country, y = vessel_count, \n                           fill = vessel_type)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal() +\n  labs(title = \"Vessel Count by Flag Country and Vessel Type\",\n       x = \"Flag Country\",\n       y = \"Vessel Count\",\n       fill = \"Vessel Type\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5)) \n\nunknown_dist \n\n\n\n\n\n\n\n\n\nCode\ndatatable(unknown_v_sum, \n          options = list(pageLength = 5), \n          filter = \"top\")\n\n\n\n\n\n\nCode\n# Identifying regions that unknown vessels are at \nunknown_v_list &lt;- unknown_v$vessel_id\n\nvessel_dwell &lt;- ggplot(ping_activity, aes(x = area, y = dwell)) +\n  geom_boxplot() +\n  geom_point(data = subset(ping_activity, vessel_id == unknown_v_list),\n             aes(x = area, y = dwell), color = \"hotpink\", size = 1) +\n  theme_minimal() +\n  labs(title = \"Median Dwell Time by Area\", \n       x = \"Area\", \n       y = \"Median Dwell Time\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  scale_y_continuous( limits = c(0, 500000)) + #zoom into 2 * 10^5\n  coord_flip()\n\nvessel_dwell\n\n\n\n\n\n\n\n\n\nCode\n# identifying outliers - nemo-reef &gt; 2,000,000\n# identifying ships that are way above median and \"unknown\"\n\n\nExploring the cargo records\n\nConsistent record where qty_tons &lt;=0 across all 5 cities\nHowever, variation in fish species where qty_tons &lt;= 0 for cargo\n\n\n\nCode\n#exploring abnormal records where qty_tons of cargo delivered = 0 or is negative\n\nggplot(tx_qty, aes(x = fish_species, y = qty_tons)) + \n  geom_boxplot(\n    width = .15, \n    outlier.color = NA \n  ) +\n  ggdist::stat_dots(data = subset(tx_qty, qty_tons &gt; 0),\n    side = \"right\", \n    justification = -0.2,\n    binwidth = 1, \n    dotsize = 0.15) + \n   ggdist::stat_dots(\n    data = subset(tx_qty, qty_tons &lt;= 0),\n    side = \"right\",\n    justification = -0.2,\n    binwidth = 1,\n    dotsize = 0.15,\n    color = \"red\") + \n  geom_hline(yintercept = 0, color = \"blue\") + \n  coord_flip() \n\n\n\n\n\n\n\n\n\n\n\nCode\n#exploring abnormal records where qty_tons of cargo delivered = 0 or is negative\n\nggplot(tx_qty, aes(x = dest, y = qty_tons)) + \n  geom_boxplot(\n    width = .15, \n    outlier.color = NA \n  ) +\n  ggdist::stat_dots(data = subset(tx_qty, qty_tons &gt; 0),\n    side = \"right\", \n    justification = -0.2,\n    binwidth = 1, \n    dotsize = 0.15) + \n   ggdist::stat_dots(\n    data = subset(tx_qty, qty_tons &lt;= 0),\n    side = \"right\",\n    justification = -0.2,\n    binwidth = 1,\n    dotsize = 0.15,\n    color = \"red\") + \n  geom_hline(yintercept = 0, color = \"blue\") + \n  coord_flip() \n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(tx_qty, aes(x = fish_species, y = qty_tons)) + \n  geom_boxplot(\n    width = .15, \n    ## remove outliers\n    outlier.color = NA ## `outlier.shape = NA` or `outlier.alpha = 0` works as well\n  ) +\n  ## add dot plots from {ggdist} package\n  ggdist::stat_dots(\n    ## orientation to the right\n    side = \"right\", \n    justification = -0.2,\n    ## adjust grouping (binning) of observations \n    binwidth = 1, \n    dotsize = 0.1\n  ) +\n  ## add highlighted dots where qty_tons &lt;= 0\n  ggdist::stat_dots(\n    data = subset(tx_qty, qty_tons &lt;= 0),\n    side = \"right\",\n    justification = -0.2,\n    binwidth = 1,\n    dotsize = 0.1,\n    color = \"red\"\n  ) +\n  ## add horizontal line at qty_tons = 0\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(title = \"Quantity of Fish Species by Weight (Tons)\",\n       x = \"Fish Species\",\n       y = \"Quantity (Tons)\") +\n  theme(axis.text.x = element_text(hjust = 1, size = 7),\n    axis.text.y = element_text(size = 7),\n    plot.title = element_text(size = 12, face = \"bold\"),\n    strip.text = element_text(size = 7),\n    plot.margin = unit(c(1, 1, 1, 1), \"mm\"), \n    panel.spacing = unit(0.5,\"lines\")) + \n  facet_grid(. ~ dest)\n\n\n\n\n\n\n\n\n\nComparing the visualisations together, we map to see the cumulative quantity of fishes received by each habor\n\n\nCode\n# Goal: Interactive heat map\n# Zoom into specific date range, see the cargo_id for the contributing ports\n\n#plotting heatmap\n#step 1: calculate data\nqty_fish_dest_time &lt;- tx_qty %&gt;%\n  group_by(tx_date, dest, fish_species) %&gt;%\n  summarize(total_qty_tons = sum(qty_tons, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n#step 2: reshape data for heatmap\n\nheatmap_data &lt;- dcast(qty_fish_dest_time, tx_date + fish_species ~ dest, value.var = \"total_qty_tons\", fill = 0)\n\n# Melt data for ggplot2\nmelted_data &lt;- melt(heatmap_data, id.vars = c(\"tx_date\", \"fish_species\"))\n\n# step 3:  Plot the heatmap\nggplot(melted_data, aes(x = tx_date, y = fish_species, fill = value)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"white\", high = \"red\", name = \"Total Qty (tons)\") +\n  labs(title = \"Heatmap of Fish Species Quantity at Each Destination Over Time\",\n       x = \"Transaction Date\",\n       y = \"Fish Species\") +\n  facet_wrap(~variable, scales = \"free_y\", ncol = 1) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\n\n\n\n\n\n\n\n\n\n\n\n\nUnderstanding distribution of vessels in relation to paths taken\n\n\n\nCode\n# TBC"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03_3.html#addressing-mini-challenge-2-questions",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03_3.html#addressing-mini-challenge-2-questions",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "Preliminary comparison of total count per port\n\nDoes purpose or vessel type affect visits - Port Grove only Tourism\nComparing records, habor report includes port grove which is not present in transaction report, hence we will exclude port grove from analysis.\n\nData Processing: Multiple pings from same vessel at same port on the same date, but differing time (hours and minutes) hence, group by same date, same port, and count unique vessel_id.\nSubsequently when plotting, excluded the date to aggregate counts per port.\n\n\nCode\n# Comparing entries per port with boxplot\n\n## tx_qty -&gt; Type of species per port \ncargo_count &lt;- tx_qty %&gt;%\n  group_by(dest) %&gt;%\n  summarize(cargo_count = n())\n\nunique_dest &lt;- unique(cargo_count$dest) # only 5 cities\n\n## count of vessel by port\nhb_count &lt;- E_Hbrpt_v %&gt;%\n  group_by(port) %&gt;%\n  summarize(vessel_total = n()) \n\nunique_port &lt;- unique(hb_count$port) # 6 cities\n\n## To recalculate based on distinct vessel per day per port. \nfish_dist_p_count &lt;- fish_v_activity %&gt;%\n  mutate(date = as.Date(start_time)) %&gt;%\n  group_by(area, date) %&gt;%\n  summarize(fishv_dist_p_count = n_distinct(vessel_id)) %&gt;%\n  filter(area %in% unique_port)\n\nfish_dist_pcount2 &lt;- fish_dist_p_count %&gt;%\n  group_by(area) %&gt;%\n  summarize(fish_dist_count = n())\n\n## calculate for cargo vessels\n\ncargo_dist_p_count &lt;- cargo_v_activity %&gt;%\n  mutate(date = as.Date(start_time)) %&gt;%\n  group_by(area, date) %&gt;%\n  summarize(cargov_dist_p_count = n_distinct(vessel_id)) %&gt;%\n  filter(area %in% unique_port)\n\ncargo_dist_pcount2 &lt;- cargo_dist_p_count %&gt;%\n  group_by(area) %&gt;%\n  summarize(cargo_dist_count = n())\n\n# merge for plot \ncount &lt;- merge(cargo_count, hb_count, by.x = \"dest\", by.y = \"port\", all = TRUE)\ncount &lt;- merge(count, fish_dist_pcount2, by.x = \"dest\", by.y = \"area\", all = TRUE)\ncount &lt;- merge(count, cargo_dist_pcount2, by.x = \"dest\", by.y = \"area\", all = TRUE)\ncount &lt;- count %&gt;% mutate(across(everything(), ~replace_na(., 0)))\n\ncount$dest &lt;- factor(\n  count$dest, \n  levels = c(\"City of Port Grove\", \"City of Haacklee\", \"City of Himark\", \n             \"City of Lomark\", \"City of Paackland\", \"City of South Paackland\")) \n\n# reshape for plot \ncount2 &lt;- count %&gt;%\n  gather(key = \"type\", value = \"count\", cargo_count, vessel_total, fish_dist_count, cargo_dist_count)\n\ncount2$type &lt;- factor(count2$type, levels = c(\"cargo_count\", \"vessel_total\", \"fish_dist_count\", \"cargo_dist_count\"))\n\n\n# Plot the grouped bar chart with labels\nggplot(count2, aes(x = dest, y = count, fill = type)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  geom_text(aes(label = count), \n            position = position_dodge(width = 0.9), \n            vjust = -0.25) + \n  labs(title = \"Comparison of Vessel Count and Cargo Count by Destination\",\n       x = \"Destination\",\n       y = \"Count\",\n       fill = \"Type\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nCode\n### See how to use the bottom\n## Drilling down into type of vessel - Hbrpt -&gt; Type of vessel per port \nhb_v_count &lt;- E_Hbrpt_v %&gt;%\n  group_by(port, vessel_type) %&gt;%\n  summarize(vessel_count = n()) \n\nvessel_count_plot &lt;- ggplot(hb_v_count, aes(x = port, y = vessel_count, fill = vessel_type)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(data = hb_v_count, aes(label = vessel_count), hjust = -1, size = 5) + \n  labs(title = \"Count of Vessel per Port\", x = \"Port\", \n       y = \"Number of Vessel\", fill = \"Vessel Type\") + \n  coord_flip()\n\n\n## Conclusion: Exclude City of Port Grove as it is stopping over for vessels - Research, Tour, Others and not for fishing or cargo. \n\n# Extracting details of vessels that stop at \"City of Port Grove\"\nport_grove_vessel &lt;- E_Hbrpt_v %&gt;% filter(port == \"City of Port Grove\")\nkable(port_grove_vessel)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlast_edited_by\ndate_added\nlast_edited_date\nraw_source\nvessel_id\nport\nkey\narr_date\nport_master\naphorism\nholiday_greeting\nwisdom\nsaying\nvessel_name\ntonnage\nlength_overall\nflag_country\nvessel_company\nvessel_type\n\n\n\n\nClepper Jessen\n2035-04-01\n2035-04-10\nPort Grove harbor reports\nwebigailba7\nCity of Port Grove\n0\n2035-03-24\nPortmaster of Port Grove\nMan cannot discover new oceans unless he has the courage to lose sight of the shore.\nIts Day of Future Hope again today\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nWebigail\nNA\n50\nOceanus\nUnknown\nOther\n\n\nClepper Jessen\n2035-03-25\n2035-04-02\nPort Grove harbor reports\nwebigailba7\nCity of Port Grove\n1\n2035-03-24\nPortmaster of Port Grove\nMan cannot discover new oceans unless he has the courage to lose sight of the shore.\nIts Day of Future Hope again today\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nWebigail\nNA\n50\nOceanus\nUnknown\nOther\n\n\nClepper Jessen\n2035-03-27\n2035-04-04\nPort Grove harbor reports\nwebigailba7\nCity of Port Grove\n2\n2035-03-24\nPortmaster of Port Grove\nMan cannot discover new oceans unless he has the courage to lose sight of the shore.\nEnjoy Saw Appreciation Day today!\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nWebigail\nNA\n50\nOceanus\nUnknown\nOther\n\n\nJunior Shurdlu\n2035-09-12\n2035-09-21\nPort Grove harbor reports\nwebigailba7\nCity of Port Grove\n3\n2035-09-04\nPortmaster of Port Grove\nA sailor’s joy is as simple as a child’s.\nEnjoy Saw Appreciation Day today!\nThe island is not just a place, but an experience.\nThe ocean has always been a salve to my soul.\nWebigail\nNA\n50\nOceanus\nUnknown\nOther\n\n\nJunior Shurdlu\n2035-12-03\n2035-12-11\nPort Grove harbor reports\nwebigailba7\nCity of Port Grove\n4\n2035-11-30\nPortmaster of Port Grove\nShips at a distance have every man’s wish on board.\nIts Lunch of VonLipwig again today\nThe tans will fade, but the memories will last forever.\nIn every outthrust headland, in every curving beach, in every grain of sand there is the story of the earth.\nWebigail\nNA\n50\nOceanus\nUnknown\nOther\n\n\nClepper Jessen\n2035-03-22\n2035-03-26\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n0\n2035-03-19\nPortmaster of Port Grove\nThe tans will fade, but the memories will last forever.\nEnjoy Saw Appreciation Day today!\nWhen you’re on an island, every sunrise is a gift.\nYou can shake the sand from your shoes, but it will never leave your soul.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nJunior Shurdlu\n2035-03-21\n2035-03-31\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n1\n2035-03-19\nPortmaster of Port Grove\nThe tans will fade, but the memories will last forever.\nEnjoy Saw Appreciation Day today!\nWhen you’re on an island, every sunrise is a gift.\nYou can shake the sand from your shoes, but it will never leave your soul.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nClepper Jessen\n2035-03-22\n2035-03-25\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n2\n2035-03-19\nPortmaster of Port Grove\nThe tans will fade, but the memories will last forever.\nEnjoy Saw Appreciation Day today!\nWhen you’re on an island, every sunrise is a gift.\nYou can shake the sand from your shoes, but it will never leave your soul.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nJunior Shurdlu\n2035-03-21\n2035-03-30\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n3\n2035-03-19\nPortmaster of Port Grove\nThe tans will fade, but the memories will last forever.\nEnjoy Saw Appreciation Day today!\nWhen you’re on an island, every sunrise is a gift.\nYou can shake the sand from your shoes, but it will never leave your soul.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nClepper Jessen\n2035-12-01\n2035-12-11\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n4\n2035-11-29\nPortmaster of Port Grove\nSailors, with their built in sense of order, service and discipline, should really be running the world.\nEnjoy Saw Appreciation Day today!\nWhen you’re on an island, every sunrise is a gift.\nYou can shake the sand from your shoes, but it will never leave your soul.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nHaenyeo Hyun-Ki\n2035-11-29\n2035-12-05\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n5\n2035-11-29\nPortmaster of Port Grove\nSailors, with their built in sense of order, service and discipline, should really be running the world.\nEnjoy Saw Appreciation Day today!\nWhen you’re on an island, every sunrise is a gift.\nSunset is my favorite color.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nHaenyeo Hyun-Ki\n2035-08-10\n2035-08-20\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n6\n2035-08-06\nPortmaster of Port Grove\nSailors, with their built-in sense of order, service and discipline, should really be running the world.\nIts Minister’s Day Observed again today\nWhen you’re on an island, every sunrise is a gift.\nThe wonders of the sea are as beautiful as the most beautiful cathedral.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nJunior Shurdlu\n2035-10-03\n2035-10-06\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n7\n2035-09-27\nPortmaster of Port Grove\nSailors, with their built-in sense of order, service and discipline, should really be running the world.\nNA\nThe ocean has always been a salve to my soul.\nAt sea, I learned how little a person needs, not how much.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nJunior Shurdlu\n2035-02-05\n2035-02-10\nPort Grove harbor reports\ninquisitive8c0\nCity of Port Grove\n8\n2035-02-01\nPortmaster of Port Grove\nNA\nNA\nThe sea! The sea! The open sea! The blue, the fresh, the ever free!\nAt sea, I learned how little a person needs, not how much.\nInquisitive\nNA\nNA\nOceanus\nUnknown\nResearch\n\n\nJunior Shurdlu\n2035-03-27\n2035-04-05\nPort Grove harbor reports\nmrray9c4\nCity of Port Grove\n0\n2035-03-24\nPortmaster of Port Grove\nThe wind and the waves are always on the side of the ablest navigator.\nNA\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nYou can shake the sand from your shoes, but it will never leave your soul.\nMr. Ray\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nJunior Shurdlu\n2035-09-12\n2035-09-16\nPort Grove harbor reports\nmrray9c4\nCity of Port Grove\n1\n2035-09-04\nPortmaster of Port Grove\nA sailor’s joy is as simple as a child’s.\nNA\nThe island is not just a place, but an experience.\nSunset is my favorite color.\nMr. Ray\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nClepper Jessen\n2035-10-19\n2035-10-27\nPort Grove harbor reports\nmrray9c4\nCity of Port Grove\n2\n2035-10-11\nPortmaster of Port Grove\nThe best therapy is beach therapy.\nNA\nWhen one man, for whatever reason, has the opportunity to lead an extraordinary life, he has no right to keep it to himself.\nSunset is my favorite color.\nMr. Ray\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nHaenyeo Hyun-Ki\n2035-03-30\n2035-04-03\nPort Grove harbor reports\nmanatee17ea\nCity of Port Grove\n0\n2035-03-24\nPortmaster of Port Grove\nThe tans will fade, but the memories will last forever.\nIts Day of Future Hope again today\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nManatee 1\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nJunior Shurdlu\n2035-03-26\n2035-04-05\nPort Grove harbor reports\nmanatee17ea\nCity of Port Grove\n1\n2035-03-24\nPortmaster of Port Grove\nSailors, with their built in sense of order, service and discipline, should really be running the world.\nIts Day of Future Hope again today\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nManatee 1\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nJunior Shurdlu\n2035-03-31\n2035-04-04\nPort Grove harbor reports\nmanatee17ea\nCity of Port Grove\n2\n2035-03-24\nPortmaster of Port Grove\nThe sea, the majestic sea, breaks everything, crushes everything, cleans everything, takes everything…from me.\nIts Day of Future Hope again today\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nManatee 1\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nClepper Jessen\n2035-06-17\n2035-06-22\nPort Grove harbor reports\nmanatee17ea\nCity of Port Grove\n3\n2035-06-09\nPortmaster of Port Grove\nA ship is always safe at shore but that is not what it’s built for.\nNA\nThose who live by the sea can hardly form a single thought of which the sea would not be part.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nManatee 1\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nClepper Jessen\n2035-05-04\n2035-05-13\nPort Grove harbor reports\nmanatee17ea\nCity of Port Grove\n4\n2035-04-28\nPortmaster of Port Grove\nThere is hope at the bottom of the biggest waterfall.\nNA\nThose who live by the sea can hardly form a single thought of which the sea would not be part.\nThe sea! The sea! The open sea! The blue, the fresh, the ever free!\nManatee 1\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nClepper Jessen\n2035-04-30\n2035-05-03\nPort Grove harbor reports\nmanatee17ea\nCity of Port Grove\n5\n2035-04-28\nPortmaster of Port Grove\nThere is hope at the bottom of the biggest waterfall.\nNA\nThose who live by the sea can hardly form a single thought of which the sea would not be part.\nThe sea! The sea! The open sea! The blue, the fresh, the ever free!\nManatee 1\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nJunior Shurdlu\n2035-03-29\n2035-04-05\nPort Grove harbor reports\nclownfishe3d\nCity of Port Grove\n0\n2035-03-24\nPortmaster of Port Grove\nThe tans will fade, but the memories will last forever.\nIts Day of Future Hope again today\nIf there’s a heaven for me, I’m sure it has a beach attached to it.\nThe goal is not to sail the boat, but rather to help the boat sail herself.\nClown Fish\nNA\nNA\nOceanus\nUnknown\nTour\n\n\nClepper Jessen\n2035-02-02\n2035-02-12\nPort Grove harbor reports\nclownfishe3d\nCity of Port Grove\n1\n2035-02-02\nPortmaster of Port Grove\nThe ocean stirs the heart, inspires the imagination, and brings eternal joy to the soul.\nNA\nThe sea! The sea! The open sea! The blue, the fresh, the ever free!\nNA\nClown Fish\nNA\nNA\nOceanus\nUnknown\nTour\n\n\n\n\n\nCode\n# reorder variables - cargo count, vessel count, fish p, cargo p\n# changing color of the plot - standardise vessel count, cargo count, then \n\n\n\n\n\n\n\n\nPossible considerations\n\n\n\n1 vessel may contribute to various cargo\nHowever, as mentioned in the data description, no harbor reports the vessels everyday, the dataset used of Event.HarborReport might not have the complete depiction of the vessels arrival.\nTo supplement this, we will combine with the Event.TransponderPing records for better match.\n\n\nAttempt #1 to map cargo to vessel by date\n\n\nCode\ntx_dt &lt;- tx_qty %&gt;% \n  # select(-c(last_edited_by, last_edited_date, date_added)) %&gt;% \n  arrange(dest, tx_date) %&gt;%\n  select(dest, tx_date, cargo_id, fish_species, qty_tons)\n\n# return cargo_id\ndatatable(tx_dt, \n          options = list(pageLength = 10), \n          filter = \"top\")\n\n\n\n\n\n\nCode\n# plot heat map\ncargo_summary &lt;- tx_qty %&gt;%\n  group_by(dest, tx_date) %&gt;%\n  summarize(cargo_count = n())\n\n# reshape data\ncargo_summary_reshape &lt;- dcast(cargo_summary, tx_date ~ dest, value.var = \"cargo_count\", fill = 0)\n\n# Melt the data back to long format for ggplot\ncargo_summary_reshape2 &lt;- melt(cargo_summary_reshape, id.vars = \"tx_date\", variable.name = \"dest\", value.name = \"cargo_count\")\n\n# Plot the heatmap\ncargo_ts &lt;- ggplot(cargo_summary_reshape2, \n                        aes(x = tx_date, y = dest, fill = cargo_count)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"white\", high = \"blue\") +\n  labs(title = \"Number of Cargo per Date at Each Harbor\",\n       x = \"Date\",\n       y = \"Harbor\",\n       fill = \"Cargo Count\")\n\nggplotly(cargo_ts)\n\n\n\n\n\n\nCode\n## Add filter for city and date\n\n\n\n\nCode\nHb_v_dt &lt;- E_Hbrpt_v %&gt;% \n  arrange(port, arr_date) %&gt;%\n  select(port, arr_date, vessel_id, vessel_company)\n\ndatatable(Hb_v_dt, \n          options = list(pageLength = 10), \n          filter = \"top\")\n\n\n\n\n\n\n\n\nCode\nvessel_summary &lt;- E_Hbrpt_v %&gt;%\n  group_by(port, arr_date) %&gt;%\n  summarize(vessel_count = n())\n\n# reshape data\nvessel_summary_reshape &lt;- dcast(vessel_summary, arr_date ~ port, value.var = \"vessel_count\", fill = 0)\n\n# Check the reshaped data\nhead(vessel_summary_reshape)\n\n\n    arr_date City of Haacklee City of Himark City of Lomark City of Paackland\n1 2035-02-01                2              1              0                 1\n2 2035-02-02                0              2              2                 4\n3 2035-02-03                3              0              0                 5\n4 2035-02-04                1              0              1                 0\n5 2035-02-05                2              2              1                52\n6 2035-02-06                0              0              0                 1\n  City of Port Grove City of South Paackland\n1                  1                       1\n2                  1                       3\n3                  0                       1\n4                  0                       0\n5                  0                       0\n6                  0                       2\n\n\nCode\n# Melt the data back to long format for ggplot\nvessel_summary_reshape2 &lt;- melt(vessel_summary_reshape, id.vars = \"arr_date\", variable.name = \"port\", value.name = \"vessel_count\")\n\n# Check the melted data\nhead(vessel_summary_reshape2)\n\n\n    arr_date             port vessel_count\n1 2035-02-01 City of Haacklee            2\n2 2035-02-02 City of Haacklee            0\n3 2035-02-03 City of Haacklee            3\n4 2035-02-04 City of Haacklee            1\n5 2035-02-05 City of Haacklee            2\n6 2035-02-06 City of Haacklee            0\n\n\nCode\n# Plot the heatmap\nvessel_ts &lt;- ggplot(vessel_summary_reshape2, \n                    aes(x = arr_date, y = port, fill = vessel_count)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"white\", high = \"blue\") +\n  labs(title = \"Number of Vessels per Date at Each Harbor\",\n       x = \"Date\",\n       y = \"Harbor\",\n       fill = \"Vessel Count\")\n\nggplotly(vessel_ts)\n\n\n\n\n\n\nAttempt to map vessel to cargo\n\n\n\n\n\n\n\n\nMatching Method\n% Match\n% Mis-match\n\n\n\n\nTx_c (Cargo import) with E_Hbrpt_v (Vessel Harbor Arrival) by date\n2454 / 5307 = 46%\n2853 / 5307 = 54%\n\n\nTx_c (Cargo Import) with Ping Activity (Vessel at port) by date\n5307 / 5307 = 100%\n\n\n\nTx_c (Fish Species) with Ping Activity (Past route & probable fishes caught)\n\n\n\n\n\n\n\nCode\n# cleaning tx_qty to align date-time to only date \ntx_qty1 &lt;- tx_qty %&gt;% \n  mutate(tx_date = as.Date(tx_date))\n\nm1 &lt;- tx_qty1 %&gt;% left_join(E_Hbrpt_v %&gt;% select(arr_date, port, vessel_id), \n                            by = c(\"tx_date\" = \"arr_date\", \"dest\" = \"port\")) %&gt;%\n  group_by(cargo_id, dest, tx_date) %&gt;%\n  summarize(probable_vessel = list(vessel_id), .groups = \"drop\")\n\nm1_summary &lt;- m1 %&gt;%\n  mutate(match_status = ifelse(is.na(probable_vessel), \"NA\", \"Matched\")) %&gt;%\n  group_by(match_status) %&gt;%\n  summarize(count = n()) %&gt;%\n  mutate(percentage = (count / sum(count)) * 100)\n\n# santising ping activity to table with unique vessel_id per port per date.\n\nping_activity_c &lt;- ping_activity %&gt;%\n  filter(area %in% unique_port, vessel_type == c(\"Fishing\", \"Cargo_Vessel\")) %&gt;%\n  mutate(start_date = as.Date(start_time)) %&gt;%\n  group_by(start_date, area) %&gt;% \n  summarize(probable_vessel = list(unique(vessel_id)), .groups = \"drop\") \n\nm2 &lt;- tx_qty1 %&gt;% left_join(ping_activity_c, \n                            by = c(\"tx_date\" = \"start_date\", \"dest\" = \"area\")) %&gt;%\n  group_by(cargo_id, dest, tx_date)\n\nm2_summary &lt;- m2 %&gt;%\n  mutate(match_status = ifelse(is.na(probable_vessel), \"NA\", \"Matched\")) %&gt;%\n  group_by(match_status) %&gt;%\n  summarize(count = n()) %&gt;%\n  mutate(percentage = (count / sum(count)) * 100)\n\n# mapping route of boats by integrating harbor report\n\n## santising ping activity to focus on fishing and cargo vessels, create new column to assign report type as \"transponderping\" \n\nping_movement &lt;- ping_activity %&gt;%\n  filter(vessel_type == c(\"Fishing\", \"Cargo_Vessel\")) %&gt;%\n  mutate(start_date = as.Date(start_time)) %&gt;%\n  select( c(\"start_date\", \"area\", \"kind\", \"Activities\", \"vessel_id\", \"fish_species_present\", \"vessel_type\", \"vessel_company\")) %&gt;%\n  mutate(report = \"transponderping\")\n\n# aligning columns of E_Hbrpt_v with ping movement (need to match activities with N_City, varying activities per city)\n\nport_record &lt;- E_Hbrpt_v %&gt;% \n  left_join(NL_City, by = c(\"port\" = \"city_id\")) %&gt;%\n  mutate(report = \"hbrpt\", kind = \"city\", fish_species_present = NA) %&gt;% \n  rename(area = port, \n         start_date = arr_date) %&gt;%\n  select(c(\"start_date\", \"area\", \"kind\", \"Activities\", \"vessel_id\", \"fish_species_present\", \"vessel_type\", \"vessel_company\", \"report\"))\n\n# merge route movement\nroute &lt;- bind_rows(ping_movement, port_record)\nroute &lt;- route %&gt;% arrange(vessel_id, start_date)\n\n# vessel_id, trip length, location, possible fish species\n\n\n\n\nCode\n# summarising route taken by vessels\nroute_summary &lt;- route %&gt;%\n  mutate(route_list = ifelse(report == \"hbrpt\", area, NA),\n         probable_fish_species = ifelse(report == \"hbrpt\", fish_species_present, NA),\n         route_start = ifelse(report == \"hbrpt\", start_date, NA),\n         route_end = ifelse(report == \"hbrpt\", lead(start_date), NA)) %&gt;%\n  fill(route_list, probable_fish_species, route_start, route_end, .direction = \"down\") %&gt;%\n  group_by(vessel_id, route_start) %&gt;%\n  mutate(route_list = ifelse(is.na(report) | report != \"hbrpt\", area, route_list),\n         probable_fish_species = ifelse(is.na(report) | report != \"hbrpt\", fish_species_present, probable_fish_species)) %&gt;%\n  group_by(vessel_id, route_start) %&gt;%\n  summarize(route_list = list(unique(route_list)), \n            probable_fish_species = list(unique(probable_fish_species)),\n            route_start = first(route_start), \n            route_end = last(route_end), \n            .groups = 'drop') %&gt;%\n  distinct() %&gt;%\n  filter(!is.na(route_start))\n\n\n\n\nCode\n# retaining only unique values \n\nroute_summary_unique &lt;- route_summary %&gt;%\n  mutate(route_list = sapply(route_list, function(x) paste(unique(unlist(strsplit(x, \", \"))), collapse = \", \")),\n         probable_fish_species = sapply(probable_fish_species, function(x) paste(unique(unlist(strsplit(x, \", \"))), collapse = \", \")))\n\n# merging with vessel details and potential fish species at the area\n\n\nEvaluating appropriateness of match - #count of match & mis-match\n\n\nCode\n# Comparing count of cargo and count of vessel at habor by date and port\n\nvessel_type_summary &lt;- E_Hbrpt_v %&gt;%\n  group_by(port, arr_date, vessel_type) %&gt;%\n  summarize(vessel_type_count = n())\n\n# reclass to split count by vessel type\nvessel_type_summary_reshaped &lt;- dcast(vessel_type_summary, port + arr_date ~ vessel_type, value.var = \"vessel_type_count\", fill = 0)\n\n# combine individual vessel type\nvessel_summary2 &lt;- vessel_type_summary_reshaped %&gt;%\n  rename(date = arr_date, port = port) \n\n# combine total count of vessel\nvessel_summary &lt;- vessel_summary %&gt;%\n  rename(date = arr_date, port = port) \n\n# combine cargo count\ncargo_summary2 &lt;- cargo_summary %&gt;% \n  mutate(tx_date = as.Date(tx_date)) %&gt;%\n  rename(date = tx_date, port = dest) # Assuming 'dest' is the correct column name in tx_qty\n\n# Merge the datasets by date and port\nby_time &lt;- merge(vessel_summary2, vessel_summary, by = c(\"port\", \"date\"), all = TRUE)\nby_time &lt;- merge(by_time, cargo_summary2, by = c(\"port\", \"date\"), all = TRUE)\n\n\n# test\nby_time &lt;- by_time %&gt;% mutate(diff_combined = vessel_count - cargo_count, \n                              diff_cargo_v = Cargo_Vessel - cargo_count, \n                              diff_fish_v = Fishing - cargo_count)\n\nview(by_time)\n\n\nIncluding transponder ping data\n\n\nCode\n# Network analysis to see mapping of fish species delivered to which port at what quantity\n\nedges &lt;- total_qty_tons_per_dest %&gt;%\n  select(from = fish_species, to = dest, weight = total_qty_tons)\n\n# Create graph from data frame\ngraph &lt;- graph_from_data_frame(edges, directed = FALSE)\n\n# Convert to tbl_graph object\ngraph_tbl &lt;- as_tbl_graph(graph)\n\n# Plot the network graph using ggraph\nggraph(graph_tbl, layout = 'fr') + \n  geom_edge_link(aes(width = weight), alpha = 0.8) +\n  geom_node_point(aes(color = ifelse(name %in% edges$from, \"Fish Species\", \"Destination\")), size = 5) +\n  geom_node_text(aes(label = name), vjust = 1.5, hjust = 1.5) +\n  scale_edge_width(range = c(0.5, 5)) +\n  scale_color_manual(values = c(\"Fish Species\" = \"green\", \"Destination\" = \"blue\")) +\n  theme_void() +\n  labs(title = \"Network Analysis of Fish Species per Destination\", color = \"Node Type\", edge_width = \"Total Quantity (tons)\")\n\n\n\n\n\n\n\n\n\nPotential illegal activities:\n\nCargo_id with fish species of piscisosseusb6d and piscesfoetidaae7 where both species only found in ecological reserves\n\nReference: https://isss608-ay2023-haileycsy.netlify.app/take-home_ex/take-home_ex03/take-home_ex03\n\n\n\nUnderstanding the sequence of event by understanding when South Seafood Express Corp was caught.\n\nIdentifying activity of vessels activity via calendar map\nZooming into last seen activity for South Seafood Express Corp\n\n\n\nCode\nvessel_movement &lt;- vessel_movement %&gt;%  \n  mutate(year = year(start_time),\n         month = month(start_time, label = TRUE),\n         day = day(start_time),\n         week = week(start_time),\n         weekday = wday(start_time, label = TRUE, week_start = 1))\n\n# unique(vessel_movement$area)\n# focus on specific areas \n\nselected_area &lt;- c(\"Ghoti Preserve\", \"Wrasse Beds\", \"Nemo Reef\", \"Don Limpet Preserve\", \"Tuna Shelf\", \"Cod Table\")\n\nselected_port &lt;- c(\"Haacklee\", \"Lomark\", \"Himark\", \"South Paackland\")\n  \nvessel_dist_count &lt;- vessel_movement %&gt;%\n  group_by(area, year, month, day) %&gt;%\n  summarise(vessel_count = n_distinct(vessel_id)) %&gt;% \n  filter(area %in% selected_area)\n\ncalendar_data &lt;- expand.grid(year = unique(vessel_dist_count$year),\n                             month = unique(vessel_dist_count$month),\n                             day = 1:31, \n                             area = selected_area ) %&gt;%\n  filter(!is.na(ymd(paste(year, month, day, sep = \"-\"))))\n\n# merging calendar grid with vessel count\ncalendar_data2 &lt;- left_join(calendar_data, vessel_dist_count, by = c(\"year\", \"month\", \"day\", \"area\"))\n\n# sanitising by replacing NA with 0\ncalendar_data2$vessel_count[is.na(calendar_data2$vessel_count)] &lt;- 0\n\n# plotting calendar chart \nggplot(calendar_data2, aes(x = day, y = month, fill = vessel_count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(low = \"white\", high = \"blue\") +\n  facet_wrap(~ area ) +\n  labs(title = \"Calendar Map of Activities\",\n       x = \"Day\",\n       y = \"Month\",\n       fill = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Zooming into South Seafood Express Corp activity\n\nvessel_movement_ss &lt;- vessel_movement %&gt;% \n  filter(vessel_company == \"SouthSeafood Express Corp\") %&gt;%\n  group_by(area, year, month, day) %&gt;%\n  summarise(vessel_count = n_distinct(vessel_id))\n\n# Exploring where SS were at - Exclude Nav areas, and Exit \n# unique(vessel_movement_ss$area)\n\ncalendar_data_ss &lt;- expand.grid(year = unique(vessel_movement_ss$year),\n                             month = unique(vessel_movement_ss$month),\n                             day = 1:31, \n                             area = vessel_movement_ss$area ) %&gt;%\n  filter(!is.na(ymd(paste(year, month, day, sep = \"-\"))))\n\ncalendar_datass2 &lt;- left_join(calendar_data_ss, vessel_movement_ss, by = c(\"year\", \"month\", \"day\", \"area\"))\n\n# sanitising by replacing NA with 0\ncalendar_datass2$vessel_count[is.na(calendar_datass2$vessel_count)] &lt;- 0\n\n# plotting calendar chart \nggplot(calendar_datass2, aes(x = day, y = month, fill = vessel_count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(low = \"white\", high = \"blue\") +\n  facet_wrap(~ area ) +\n  labs(title = \"Calendar Map of Activities\",\n       x = \"Day\",\n       y = \"Month\",\n       fill = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\n\n\n\n\nCode\n## Check which year and last appearance date \n\n\n\nPinpointing last activity of South Seafood Express Corp\n\n14 May 2035 for snappersnatcher7be at City of Lomark, Cod Table\n6 May 2035 for roachrobberdb6 for City of Himark, Cod Table, Wrasse Bed\n\n\n\nCode\nping_activity_ss &lt;- ping_activity %&gt;% \n  filter(vessel_company == \"SouthSeafood Express Corp\") %&gt;% \n  mutate(date = as.Date(start_time)) %&gt;% \n  select(date, vessel_id, area ) %&gt;%\n  distinct()\n\ndatatable(ping_activity_ss, \n          options = list(pageLength = 5), \n          filter = \"top\")\n\n\n\n\n\n\nAny new introduction of vessels after South Seafood Express was removed and date of first appearance.\n\nNo new vessel added (N_vessel$date_added &gt;= 2023-05) = NA\nNo vessel amended (N_vessel$last_edited_date &gt;= 2023-05) = yes - filter out to see (Salmon Snatcher)\n\n\n\nCode\n# Splitting dataframe to before and after SS was caught. \n\ndate_caught &lt;- as.Date(\"2035-05-14\")\n\n\nfish_v_activity_bef &lt;- fish_v_activity %&gt;% \nmutate(start_date = as.Date(start_time)) %&gt;%\nfilter(start_date &lt;= date_caught)\n\nfish_v_activity_aft &lt;- fish_v_activity %&gt;% \nmutate(start_date = as.Date(start_time)) %&gt;%\nfilter(start_date &gt; date_caught)\n\n# plot dwell time bef and after \nfishing_dwell_aft &lt;- ggplot(fish_v_activity_aft, aes(x = area, y = dwell)) +\n  geom_boxplot() +\n  geom_point(data = subset(fish_v_activity, vessel_id == \"snappersnatcher7be\"),\n             aes(x = area, y = dwell), color = \"red\", size = 1) +\n  geom_point(data = subset(fish_v_activity, vessel_id == \"roachrobberdb6\"),\n             aes(x = area, y = dwell), color = \"orange\", size = 1) +\n  theme_minimal() +\n  labs(title = \"Median Dwell Time by Area\", \n       x = \"Area\", \n       y = \"Median Dwell Time\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  scale_y_continuous(limits = c(0, 600000)) + # limit dwell \n  coord_flip()\n\n\nfishing_dwell_bef &lt;- ggplot(fish_v_activity_bef, aes(x = area, y = dwell)) +\n  geom_boxplot() +\n  theme_minimal() +\n  labs(title = \"Median Dwell Time by Area\", \n       x = \"Area\", \n       y = \"Median Dwell Time\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  scale_y_continuous(limits = c(0, 600000)) + # limit dwell \n  coord_flip()\n\nfishing_dwell_bef | fishing_dwell_aft\n\n\n\n\n\n\n\n\n\nCode\n# check logic - why ss appears in aft plot \n\n# comparing median time spent at each area before and after\n\nfish_v_activity_bef_sum &lt;- fish_v_activity_bef %&gt;%\n  group_by(area) %&gt;%\n  summarise(median_dwell = median(dwell, na.rm = TRUE))\n\nfish_v_activity_aft_sum &lt;- fish_v_activity_aft %&gt;%\n  group_by(area) %&gt;%\n  summarise(median_dwell = median(dwell, na.rm = TRUE))\n\nfish_v_bef_aft &lt;- left_join(fish_v_activity_bef_sum, fish_v_activity_aft_sum, by = c(\"area\" = \"area\"))\nfish_v_bef_aft &lt;- fish_v_bef_aft %&gt;% \n  rename(median_dwell_bef = median_dwell.x, median_dwell_aft = median_dwell.y) %&gt;%\n  mutate(diff_bef_aft = median_dwell_bef - median_dwell_aft) %&gt;% arrange(diff_bef_aft)\n\nggplot(fish_v_bef_aft, aes(x= area, y = diff_bef_aft)) + geom_bar(stat = \"identity\")\n\n\n\n\n\n\n\n\n\nCode\n# reorder variable such that group ecological preserves together and ports tgt (see direct contrast)\n# highlight color - shift from fishing at Ghoti reserve to fishing at Lim Donpet Reserves\n\n\nComparison of vessel count per port per week before and after SS got caught 14 May 2035 - Monday, Friday - 18 May 2035\n\n\nCode\nfish_v_activity_bef_count &lt;- fish_v_activity_bef %&gt;%\n  group_by(start_date, area) %&gt;%\n  summarize(fish_dist_count_bef = n_distinct(vessel_id)) %&gt;% \n  group_by(area) %&gt;% \n  summarize (fish_dist_total_bef = sum(fish_dist_count_bef))\n\n# check day diff - if inclusive / exclusive of date_caught +/- 1 days\n\ndays_bef &lt;- difftime(date_caught, min(fish_v_activity_bef$start_date),  units = \"days\") #102 days --&gt; /7 for weeks\ndays_aft &lt;- difftime(max(fish_v_activity_aft$start_date), date_caught, units = \"days\") #199 days \n\nfish_v_activity_aft_count &lt;- fish_v_activity_aft %&gt;%\n  group_by(start_date, area) %&gt;%\n  summarize(fish_dist_count_aft = n_distinct(vessel_id)) %&gt;% \n  group_by(area) %&gt;% \n  summarize (fish_dist_total_aft = sum(fish_dist_count_aft)) \n\nfish_v_count_bef_aft &lt;- left_join(fish_v_activity_bef_count, fish_v_activity_aft_count, by = c(\"area\" = \"area\"))\nfish_v_count_bef_aft &lt;- fish_v_count_bef_aft %&gt;% \n  mutate(fish_dist_total_bef_weeks = (fish_dist_total_bef / as.numeric(days_bef))*7, \n          fish_dist_total_aft_weeks = (fish_dist_total_aft/ as.numeric(days_aft))*7) %&gt;% \n  mutate(diff_count_bef_aft = fish_dist_total_bef_weeks - fish_dist_total_aft_weeks) %&gt;% \n  arrange(diff_count_bef_aft)\n\nggplot(fish_v_count_bef_aft, aes(x= area, y = diff_count_bef_aft)) + geom_bar(stat = \"identity\")\n\n\n\n\n\n\n\n\n\nComparison of vessel that had drastic switch in route - different location (delta from paste route location and new route location)\nComparison of cargo breakdown\n\n\nCode\ntx_qty_bef &lt;- tx_qty1 %&gt;% filter(tx_date &lt;= date_caught)\ntx_qty_aft &lt;- tx_qty1 %&gt;% filter(tx_date &gt; date_caught)\n\n# Calculate median quantity of fish per port \ntx_qty_bef_sum &lt;- tx_qty_bef %&gt;% \n  group_by(dest, fish_species) %&gt;%\n  summarize(qty_tons_bef_sum = sum(qty_tons), cargo_bef_count = n())\n\ntx_qty_aft_sum &lt;- tx_qty_aft %&gt;%\n  group_by(dest, fish_species) %&gt;%\n  summarize(qty_tons_aft_sum = sum(qty_tons), cargo_aft_count = n())\n\ntx_qty_bef_aft &lt;- left_join(tx_qty_aft_sum, tx_qty_bef_sum, by = c(\"dest\" = \"dest\", \"fish_species\" = \"fish_species\"))\n\ncolnames(tx_qty_bef_aft)\n\n\n[1] \"dest\"             \"fish_species\"     \"qty_tons_aft_sum\" \"cargo_aft_count\" \n[5] \"qty_tons_bef_sum\" \"cargo_bef_count\" \n\n\nCode\n# adjustment to per week\ntx_qty_bef_aft &lt;- tx_qty_bef_aft %&gt;% \n  mutate(qty_tons_aft_sum_week = (qty_tons_aft_sum / as.numeric(days_aft))*7,\n        cargo_aft_count_week = (cargo_aft_count / as.numeric(days_aft))*7, \nqty_tons_bef_sum_week = (qty_tons_bef_sum / as.numeric(days_bef))*7,\ncargo_bef_count_week = (cargo_bef_count / as.numeric(days_bef))*7) #, \n\n# include assign 0 to NA values + calculate differentials \n# qty_tons_bef_aft_week = qty_tons_bef_sum_week - qty_tons_aft_sum_week, \n# cargo_count_bef_aft_week = cargo_bef_count_week - cargo_aft_count_week)\n\ntx_count_bef_aft &lt;- ggplot(tx_qty_bef_aft, aes(x= dest, y = diff_count_bef_aft)) + geom_bar(stat = \"identity\")\n\n\n\n\n\n\n\n\n\n\nCode\n# E_Tping_c_Fishing &lt;- E_Tping_c %&gt;%\n#   left_join(N_vessel %&gt;% select(vessel_id, vessel_type, vessel_company), by = \"vessel_id\") %&gt;%\n#   filter(vessel_type == \"Fishing\")\n# \n# edges &lt;- data.frame(\n#   from = E_Tping_c_Fishing$vessel_company,\n#   to = E_Tping_c_Fishing$ping_source\n# )\n# \n# # Create a graph object\n# graph &lt;- graph_from_data_frame(edges, directed = FALSE)\n# \n# # Plot the network\n# plot(graph, vertex.size=10, vertex.label.cex=0.8, vertex.label.color=\"black\",\n#      main=\"Network Visualization of Boats Movement\")\n\n\n\n\nCode\n# E_Tping_c_Fishing_SS &lt;- E_Tping_c_Fishing %&gt;%\n#   filter(vessel_company == \"SouthSeafood Express Corp\")\n# \n# edges_ss &lt;- data.frame(\n#   from = E_Tping_c_Fishing_SS$vessel_company,\n#   to = E_Tping_c_Fishing_SS$ping_source\n# )\n# \n# # Create a graph object\n# graph_ss &lt;- graph_from_data_frame(edges_ss, directed = FALSE)\n# \n# \n# # Create a vertex attribute to distinguish between boats, SouthSeafood, and other companies\n# V(graph_ss)$type &lt;- ifelse(V(graph_ss)$name == \"SouthSeafood Express Corp\", \"southseafood\", \n#                         ifelse(V(graph)$name %in% E_Tping_c_Fishing_SS$vessel_id, \"boat\", \"location\"))\n# \n# # Plot the network with ggraph\n# ggraph(graph_ss, layout = 'fr') +  # 'fr' layout (Fruchterman-Reingold) to spread nodes nicely\n#   geom_edge_link(aes(width = 1), edge_colour = \"grey\") +  # Add edges with grey color\n#   geom_node_point(aes(color = type), size = 5) +  # Add nodes with different colors based on type\n#   geom_node_text(aes(label = name), repel = TRUE, size = 3, color = \"black\") +  # Add labels with repulsion\n#   scale_color_manual(values = c(\"boat\" = \"orange\", \"location\" = \"blue\", \"southseafood\" = \"red\")) +  # Define custom colors\n#   theme_void() +  # Use a void theme to remove background grid\n#   labs(title = \"Network Visualization of Boats Movement\")  # Add title"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/data/shp/Oceanus Geography.html",
    "href": "Take-home_Ex/Take-home_Ex03/data/shp/Oceanus Geography.html",
    "title": "ISSS608-AY2023-24T3",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Singapore’s private residential market is diverse. With price being a product of supply and demand, sale prices of property vary greatly depending on the property transacted. This includes factors such as property type, unit size, location and remaining leasehold.\nIndividual purchase of residential property can range from:\n\nLowest of $440,000 for resale apartment with limited leasehold of 28 years in Paya Lebar (OCR).\nHighest of $45,000,000 for new freehold condo launched in Tanglin (CCR).\n\n\n\nNote: Highest price reflected excludes commercial en-bloc sale and exceptional cases.\n\n\n\nCommercial en-bloc sale\nExceptional cases\n\n\n\n\nTypically involves freehold property, traditionally completed in 1980s-1990s where Price (PSF) is lower and developers can potentially profit with redevelopment of the land plot, such as:\n\nE.g., #1 - Meyer Parks - $392.18 million for 144,883 sqft for 60 units on 9 Feb 2023\nE.g., #2 - Bagnall Court - $115.28 million for 68,491 sqft for 43 units on 4 Jan 2023\nE.g., #3 - Kew Lodge - $66.8 million for 25177 sqft for 11 units on 23 May 2023.\n\n\nSale of Dick Lee family’s bungalows for charity - $61.1 million for adjoining freehold bungalow.\nSale of Good Class Bungalow at 61 Wilkinson Road - $55.5 million for 25,680 sqft.\n\n\n\n\n\n\n\nAside from non-uniform supply, demand varies across buyers with different purchasing power. There are 4 main groups, each with differing interests.\n\n\n\nAudience\nHDB Upgraders\nForeign Investors\nYoung couples\nLocal investors\n\n\n\n\nPurchase Motivation\nUpgrade of lifestyle.\nCapital appreciation, but demand weakened with huge increase of ABSD to 60% in April 2023.\nExceeded $14,000 cap for BTO with later marriages, higher earning power turning to either resale public housing or private residential property.\nPurchase property for rental income.\n\n\nArea of Interest\nLarge unit size, mostly OCR, and ocassionally RCR.\nLuxury property mostly in CCR or RCR for investment.\nWith limited cash on hand, they are keen on units in OCR with decent size.\nSmall units in RCR or CCR for ease of rental to expats or foreigners and capital appreciation with resale.\n\n\n\n\n\n\n\nAs a graphical editor of a median company, this post aims to:\n\nExplore the distribution of property sale prices with regards to (1) Location, (2) Property Type, (3) Unit-Size to understand the expected price of similar properties.\nUncover the factors driving demand such as (4) Remaining Leasehold, (5) Expectation of interest rates, and (6) Buyer’s demographics.\nLook into sub-markets such as commercial en-bloc, new launches, luxury private residential market."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#overview",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#overview",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Singapore’s private residential market is diverse. With price being a product of supply and demand, sale prices of property vary greatly depending on the property transacted. This includes factors such as property type, unit size, location and remaining leasehold.\nIndividual purchase of residential property can range from:\n\nLowest of $440,000 for resale apartment with limited leasehold of 28 years in Paya Lebar (OCR).\nHighest of $45,000,000 for new freehold condo launched in Tanglin (CCR).\n\n\n\nNote: Highest price reflected excludes commercial en-bloc sale and exceptional cases.\n\n\n\nCommercial en-bloc sale\nExceptional cases\n\n\n\n\nTypically involves freehold property, traditionally completed in 1980s-1990s where Price (PSF) is lower and developers can potentially profit with redevelopment of the land plot, such as:\n\nE.g., #1 - Meyer Parks - $392.18 million for 144,883 sqft for 60 units on 9 Feb 2023\nE.g., #2 - Bagnall Court - $115.28 million for 68,491 sqft for 43 units on 4 Jan 2023\nE.g., #3 - Kew Lodge - $66.8 million for 25177 sqft for 11 units on 23 May 2023.\n\n\nSale of Dick Lee family’s bungalows for charity - $61.1 million for adjoining freehold bungalow.\nSale of Good Class Bungalow at 61 Wilkinson Road - $55.5 million for 25,680 sqft.\n\n\n\n\n\n\n\nAside from non-uniform supply, demand varies across buyers with different purchasing power. There are 4 main groups, each with differing interests.\n\n\n\nAudience\nHDB Upgraders\nForeign Investors\nYoung couples\nLocal investors\n\n\n\n\nPurchase Motivation\nUpgrade of lifestyle.\nCapital appreciation, but demand weakened with huge increase of ABSD to 60% in April 2023.\nExceeded $14,000 cap for BTO with later marriages, higher earning power turning to either resale public housing or private residential property.\nPurchase property for rental income.\n\n\nArea of Interest\nLarge unit size, mostly OCR, and ocassionally RCR.\nLuxury property mostly in CCR or RCR for investment.\nWith limited cash on hand, they are keen on units in OCR with decent size.\nSmall units in RCR or CCR for ease of rental to expats or foreigners and capital appreciation with resale.\n\n\n\n\n\n\n\nAs a graphical editor of a median company, this post aims to:\n\nExplore the distribution of property sale prices with regards to (1) Location, (2) Property Type, (3) Unit-Size to understand the expected price of similar properties.\nUncover the factors driving demand such as (4) Remaining Leasehold, (5) Expectation of interest rates, and (6) Buyer’s demographics.\nLook into sub-markets such as commercial en-bloc, new launches, luxury private residential market."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-pre-processing-data-exploration",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-pre-processing-data-exploration",
    "title": "Take-home Exercise 1",
    "section": "2. Data Pre-processing & data exploration",
    "text": "2. Data Pre-processing & data exploration\n\n2.1 Loading data & relevant libraries\n\n2.1.1 Loading relevant libraries to be used.\n\n\n\n\n\n\n\nLibrary\nPurpose\n\n\n\n\ntidyverse\n\nInclude dpylr for data manipulation with “mutate”, “group_by”, “summarize”, etc.\nInclude ggplot2 for visualisation through histogram, boxplots, etc.\nInclude forcats for factoring and ordering of variables\n\n\n\nggdist\nggridges\nggrepel\nggthemes & hrbrthemes\n\nFor visualisation of distributions and uncertainity.\nFor creating density plots for visualisation of continuous distribution.\nFor repelling overlapping text labels in plot\nFor customisation of plot appearance\n\n\n\npatchwork\nFor combination and alignment of multiple plots for each visualisation.\n\n\nknitr\nFor elegant, flexible and fast report generation of underlying dataframes.\n\n\n\n\n\nCode\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, readr, ggdist, ggridges, colorspace, knitr, forcats, reshape2, png, grid) \n\n\n\n\n2.1.2 Combining multiple data files into a common file for further processing.\n\n\n\nCode\nrealis_1 &lt;- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\nrealis_2 &lt;- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\nrealis_3 &lt;- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\nrealis_4 &lt;- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\nrealis_5 &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n\nrealis_full &lt;- rbind(realis_1, realis_2, realis_3, realis_4, realis_5)\n\n\n\n\n2.1.3. To understand the compiled data set, we queried the data type\n\n\nCode\n# Understanding the data types for the respective columns\nheader_types &lt;- sapply(realis_full, class)\n\n\n\n\n\n\n\n\n\n\nCategorical Variables\nContinuous Variables (Numerical / Date)\nIdentifiers\n\n\n\n\n\nType of Sale\nType of Area\nProperty Type\nPurchaser Address Indicator\nPlanning Area\n\n\nTransacted Price\nArea (SQFT)\nUnit Price (PSF)\nTenure (Converted to remaining leasehold)\nSale Date\nCompletion Date\nNumber of Units\n\n\nProject Name\nPostal Code\n\n\n\n\n\n\n2.1.4. For key categorical variables, we explored the unique values.\n\n\nCode\n# Understanding the unique data values in each column that is categorical.\n\nget_unique_val &lt;- function(df) {lapply(df, unique)}\nrealis_cat &lt;- realis_full[,c(\"Type of Sale\", \"Type of Area\", \"Property Type\", \"Purchaser Address Indicator\", \"Planning Area\")]\nunique_val &lt;- get_unique_val(realis_cat)\nuni_val_df &lt;- data.frame(\n  Values = sapply(unique_val, paste, collapse = \", \")\n)\n\nkable(uni_val_df, caption = \"Unique Categories in Realis Dataset\", row.names = NA, label = NULL)\n\n\n\nUnique Categories in Realis Dataset\n\n\n\n\n\n\n\nValues\n\n\n\n\nType of Sale\nNew Sale, Resale, Sub Sale\n\n\nType of Area\nStrata, Land\n\n\nProperty Type\nCondominium, Executive Condominium, Terrace House, Semi-Detached House, Apartment, Detached House\n\n\nPurchaser Address Indicator\nHDB, Private, N.A\n\n\nPlanning Area\nBukit Merah, Bedok, Yishun, Sengkang, Hougang, Bukit Timah, Marine Parade, Clementi, Woodlands, Serangoon, Tanglin, Tampines, Kallang, Rochor, Novena, Punggol, Sembawang, Downtown Core, Bishan, Jurong West, Pasir Ris, Queenstown, Bukit Panjang, Bukit Batok, Museum, Newton, Southern Islands, Toa Payoh, Choa Chu Kang, Geylang, River Valley, Orchard, Singapore River, Outram, Tengah, Ang Mo Kio, Jurong East, Mandai, Sungei Kadut, Changi, Paya Lebar\n\n\n\n\n\n\n\n2.1.5. For Continuous variables (Numerical), a quick understanding of their min, max values and interquartile range was obtained with summary() function.\nNote: As further processing for is required for date-related variables, this will be covered subsequently in data processing for Sale Date, Completion Date, and Tenure.\n\n\nCode\n# Understanding the distribution of numerical values in Realis \nrealis_num &lt;- realis_full[,c(\"Transacted Price ($)\", \"Area (SQFT)\", \"Unit Price ($ PSF)\", \"Number of Units\")]\n\nrealis_num &lt;- realis_num %&gt;% \n  rename(\"Transacted_Price\" = \"Transacted Price ($)\") %&gt;% \n  rename(\"Area_SQFT\" = \"Area (SQFT)\") %&gt;%\n  rename(\"Unit_Price_PSF\" = \"Unit Price ($ PSF)\") %&gt;% \n  rename(\"Number_of_Units\" = \"Number of Units\")\n  \nkable(summary(realis_num))\n\n\n\n\n\n\n\n\n\n\n\n\n\nTransacted_Price\nArea_SQFT\nUnit_Price_PSF\nNumber_of_Units\n\n\n\n\n\nMin. : 440000\nMin. : 322.9\nMin. : 138\nMin. : 1.000\n\n\n\n1st Qu.: 1280000\n1st Qu.: 721.2\n1st Qu.:1384\n1st Qu.: 1.000\n\n\n\nMedian : 1660000\nMedian : 990.3\nMedian :1762\nMedian : 1.000\n\n\n\nMean : 2143286\nMean : 1191.6\nMean :1852\nMean : 1.005\n\n\n\n3rd Qu.: 2320000\n3rd Qu.: 1302.4\n3rd Qu.:2260\n3rd Qu.: 1.000\n\n\n\nMax. :392180000\nMax. :144883.4\nMax. :5756\nMax. :60.000\n\n\n\n\n\n\n\n\n2.2 Processing data & creating new variables for relevance to real-life.\n\n\nCode\nflowchart LR\n\n  id1[(URA Real Estate Transactions)] --&gt; id2(Private Residential Property Transactions)\n \n  id2(Private Residential Property Transactions) --&gt; id3(Sale Details)\n  id2(Private Residential Property Transactions) --&gt; id4(Property Details)\n  \n    id4(Property Details) --&gt; id7(Property Nature)\n    id4(Property Details) --&gt; id5(Location)\n    id4(Property Details) --&gt; id6(Property Lifespan)\n    id4(Property Details) --&gt; id3(Project Name)\n      \n  \n    id3(Sale Details) --&gt; id8(Transaction Price)\n    id3(Sale Details) --&gt; id9(Number of Units)\n    id3(Sale Details) --&gt; id10(Type of Sale)\n    id3(Sale Details) --&gt; id11(Purchaser Address Indicator)\n    id3(Sale Details) --&gt; id12(Sale Date)\n    \n    id8(Transaction Price) --&gt; id14(Price PSF)\n    id9(Number of Units) --&gt; |Sum| v3&gt;Number of Units per Project]\n     \n    id5(Location) --&gt; a(Address)\n    id5(Location) --&gt; b(Postal Code) \n    id5(Location) --&gt; c(Postal District)\n    id5(Location) --&gt; d(Planning Region)\n    id5(Location) --&gt; e(Planning Area)\n    \n    c(Postal District) --&gt; |Mutate| v1(Region Type - CCR, RCR, OCR)\n    e(Planning Area) --&gt; |Mutate| v1&gt;Region Type - CCR, RCR, OCR]\n    \n    id6(Property Lifespan) --&gt; f(Tenure)\n    id6(Property Lifespan) --&gt; g(Completion Date)\n    f(Tenure) --&gt; |Lubridate| v2(Remaining Lease)\n    g(Completion Date) --&gt;|Lubridate| v2&gt;Remaining Lease]\n    \n    id7(Property Nature) --&gt; h(Type of Area)\n    id7(Property Nature) --&gt; |Mutate| i&gt;Freehold / Lease term]  \n    id7(Property Nature) --&gt; j(Area SQFT)\n    \n    b(Postal Code) --&gt; |Mutate| v4&gt;Common Postal Code for big projects]\n\n\n\n\n\nflowchart LR\n\n  id1[(URA Real Estate Transactions)] --&gt; id2(Private Residential Property Transactions)\n \n  id2(Private Residential Property Transactions) --&gt; id3(Sale Details)\n  id2(Private Residential Property Transactions) --&gt; id4(Property Details)\n  \n    id4(Property Details) --&gt; id7(Property Nature)\n    id4(Property Details) --&gt; id5(Location)\n    id4(Property Details) --&gt; id6(Property Lifespan)\n    id4(Property Details) --&gt; id3(Project Name)\n      \n  \n    id3(Sale Details) --&gt; id8(Transaction Price)\n    id3(Sale Details) --&gt; id9(Number of Units)\n    id3(Sale Details) --&gt; id10(Type of Sale)\n    id3(Sale Details) --&gt; id11(Purchaser Address Indicator)\n    id3(Sale Details) --&gt; id12(Sale Date)\n    \n    id8(Transaction Price) --&gt; id14(Price PSF)\n    id9(Number of Units) --&gt; |Sum| v3&gt;Number of Units per Project]\n     \n    id5(Location) --&gt; a(Address)\n    id5(Location) --&gt; b(Postal Code) \n    id5(Location) --&gt; c(Postal District)\n    id5(Location) --&gt; d(Planning Region)\n    id5(Location) --&gt; e(Planning Area)\n    \n    c(Postal District) --&gt; |Mutate| v1(Region Type - CCR, RCR, OCR)\n    e(Planning Area) --&gt; |Mutate| v1&gt;Region Type - CCR, RCR, OCR]\n    \n    id6(Property Lifespan) --&gt; f(Tenure)\n    id6(Property Lifespan) --&gt; g(Completion Date)\n    f(Tenure) --&gt; |Lubridate| v2(Remaining Lease)\n    g(Completion Date) --&gt;|Lubridate| v2&gt;Remaining Lease]\n    \n    id7(Property Nature) --&gt; h(Type of Area)\n    id7(Property Nature) --&gt; |Mutate| i&gt;Freehold / Lease term]  \n    id7(Property Nature) --&gt; j(Area SQFT)\n    \n    b(Postal Code) --&gt; |Mutate| v4&gt;Common Postal Code for big projects]\n\n\n\n\n\n\n\n2.2.1 Manual data correction for incorrect data entry\n\nRe-labelling was performed for visibly wrong record. (e.g., Completion Year for “The Hiller” should be 2011 instead of 0216) and this was cross-checked with industry sources.\n\n\n\n2.2.2 - Reclassification of Postal District to reflect proximity to city center\n\nReferencing “Property Guru”, the property sold can be grouped into Central Core Region, Rest of Central Region and Outside of Central Region (CCR, RCR and OCR).\nHence, a new column of Region_type was created to reflect the 3 segmented zones based on classifying the existing values in Postal District.\n\n\n\n\n\n\n\n\nRegion Type\nPostal District classified\n\n\n\n\nCore Central Region (CCR)\n01, 02, 04, 06, 07, 09, 10, 11\n\n\nRest of Central Region (RCR)\n03, 05, 08, 12, 13, 14, 15, 20\n\n\nOutside of Central Region (OCR)\n16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28\n\n\n\n\n\nCode\n# Encoding postal district into CCR, RCR and OCR\nrealis_full &lt;- realis_full %&gt;% \n  mutate(`Postal District` = as.numeric(`Postal District`)) %&gt;%\n  mutate(Region_type = case_when(\n    `Postal District` %in% c(01, 02, 04, 06, 07, 09,10, 11) ~ \"CCR\",\n    `Postal District` %in% c(03, 05, 08, 12, 13, 14, 15, 20) ~ \"RCR\",\n    `Postal District` %in% c(16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28) ~ \"OCR\"\n  ))\n\n\n\nAlso, for reasonableness check, a mapping of the Postal District values was mapped to easily recognised Planning Area that the public is familiar with.\n\n\n\nCode\npostal_mapping&lt;- realis_full %&gt;%\n  group_by(`Planning Area`) %&gt;%\n  summarize(Distinct_Values = paste(unique(`Postal District`), collapse = \", \"))\n\nkable(postal_mapping, title = \"Mapping of Planning Area to Postal District \")\n\n\n\n\n\nPlanning Area\nDistinct_Values\n\n\n\n\nAng Mo Kio\n28, 20, 26\n\n\nBedok\n14, 15, 16\n\n\nBishan\n20\n\n\nBukit Batok\n23, 21\n\n\nBukit Merah\n4, 3, 10, 2\n\n\nBukit Panjang\n23, 21\n\n\nBukit Timah\n10, 21, 11, 23\n\n\nChangi\n17\n\n\nChoa Chu Kang\n23\n\n\nClementi\n5, 21\n\n\nDowntown Core\n1, 7, 2, 6\n\n\nGeylang\n14, 15, 13\n\n\nHougang\n19, 28\n\n\nJurong East\n22\n\n\nJurong West\n22\n\n\nKallang\n8, 12, 15, 7, 14\n\n\nMandai\n27\n\n\nMarine Parade\n15\n\n\nMuseum\n9\n\n\nNewton\n9, 10\n\n\nNovena\n11, 12, 9\n\n\nOrchard\n10, 9\n\n\nOutram\n3, 2, 1\n\n\nPasir Ris\n18, 17\n\n\nPaya Lebar\n18\n\n\nPunggol\n19\n\n\nQueenstown\n3, 5, 10\n\n\nRiver Valley\n9, 10\n\n\nRochor\n9, 8, 7\n\n\nSembawang\n27\n\n\nSengkang\n28, 19\n\n\nSerangoon\n19, 20, 28, 13\n\n\nSingapore River\n6, 3, 9, 1\n\n\nSouthern Islands\n4\n\n\nSungei Kadut\n25\n\n\nTampines\n18, 16\n\n\nTanglin\n10\n\n\nTengah\n24\n\n\nToa Payoh\n19, 13, 12, 20, 11\n\n\nWoodlands\n25\n\n\nYishun\n27, 26\n\n\n\n\n\n\n\n2.2.3 For standardisation, where large project tends to spread across multiple postal codes, a consistent postal code was assigned to each project.\n\nRevised postal code assigned is based on the highest frequency per project with the group_by() function.\n\n\n\n\n\n\n\n\n\nE.g., Project Name\nOriginal Postal Code\nReassigned Postal Code\n\n\n\n\nThe Reserve Residences\n589604 589605 589603 589770 589771 589772 589773 589774\n589605\n\n\nGrand Dunman\n439397 439409 438664 438665 439395 439396 439188\n439396\n\n\nLentor Hills Residences\n788881 788882 788883 788884 78885\n788882\n\n\n\n\n\nCode\n# Re-assigning large projects to a common postal code. (highest frequency postal code) for standardisation. \nrealis_full &lt;- realis_full %&gt;%\n  group_by(`Project Name`) %&gt;%\n  mutate(`Postal Code` = names(which.max(table(`Postal Code`)))) %&gt;%\n  ungroup()\n\n\n\n\n2.2.4 - Converting Tenure into remaining lease life.\n\nConverting Tenure into date format, excluding those “Freehold”, “99 or 999 years leasehold from uncompleted units”.\nCalculating the remaining lease life based on Sale Date. (Values are rounded down to nearest no. of years)\nRe-labeling back the records which are “Freehold” and “99 or 999 years leasehold” for uncompleted units.\n\n\n\n\n\n\n\n\n\nRemaining Lease (in years)\nNumber of Units Transacted\nPercentage of Units Transacted\n\n\n\n\n0-30\n13\n0.05%\n\n\n31-60\n343\n1.27%\n\n\n61 - 150\n18,557\n68.89%\n\n\n&gt;150\n803\n2.98%\n\n\nFreehold\n7,220\n26.80%\n\n\n\n\n\nCode\nrealis_clean &lt;- realis_full %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    years = as.numeric(str_extract(Tenure, \"\\\\d+(?=\\\\s+yrs)\")),  # Extracts digits before \" yrs\" as years\n    start_date = dmy(str_extract(Tenure, \"\\\\d{2}/\\\\d{2}/\\\\d{4}\")),  # Extracts date in \"dd/mm/yyyy\" format\n    end_date = start_date + years(years),\n    remaining_years = floor(as.numeric(difftime(end_date, Sys.Date(), units = \"days\") / 365)) # Calculate remaining years from days\n  ) %&gt;%\n  ungroup()\n\nrealis_clean2 &lt;- realis_clean %&gt;%\n  mutate(years_left = ifelse(!is.na(remaining_years), remaining_years, \n                             ifelse(Tenure == \"999 years leasehold\", \"999\", \n                                    ifelse(Tenure == \"99 years leasehold\", \"99\", \n                                           ifelse(Tenure == \"Freehold\", \"Freehold\", \n                                                  ifelse(Tenure == \"110 yrs from 01/11/2017\", \"103\",\n                                                         ifelse(Tenure == \"110 Yrs from 01/11/2017\", \"103\", NA)))))))\n\n# Converting character into date format\nrealis_clean2$`Sale Date` &lt;- as.Date(realis_clean2$`Sale Date`, format = \"%d %b %Y\") \n\n\n\n\n\n2.3 Exploring outliers and identifying potential clusters.\n\n2.3.1 - Commercial En-bloc\nObserving the data set, the transactions include commercial purchases that are infrequent and done by private developers for large land masses. This subset of transactions are unlikely to be done by individual buyers, and will be excluded from subsequent visualisation to prevent distortion of the axis.\n\nNumber of Units &gt; 5\nType of Sale = “Resale”\nPurchaser Address Indicator =“Private”\nTenure = “Freehold”\n\n\n\nCode\nenbloc_set &lt;- realis_full %&gt;% filter(`Tenure` == \"Freehold\", \n                                     `Number of Units` &gt; 5, \n                                     `Purchaser Address Indicator` == \"Private\", \n                                     `Type of Sale` == \"Resale\"\n                                      )\nenbloc_set_2 &lt;- enbloc_set %&gt;% \n  rename(\"Transacted_Price\" = \"Transacted Price ($)\") %&gt;% \n  rename(\"Area_SQFT\" = \"Area (SQFT)\") %&gt;%\n  rename(\"Unit_Price_PSF\" = \"Unit Price ($ PSF)\") %&gt;% \n  rename(\"Sale_Date\" = \"Sale Date\") %&gt;% \n  rename(\"Number_of_Units\" = \"Number of Units\")\n\nkable(enbloc_set_2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProject Name\nTransacted_Price\nArea_SQFT\nUnit_Price_PSF\nSale_Date\nAddress\nType of Sale\nType of Area\nArea (SQM)\nUnit Price ($ PSM)\nNett Price($)\nProperty Type\nNumber_of_Units\nTenure\nCompletion Date\nPurchaser Address Indicator\nPostal Code\nPostal District\nPostal Sector\nPlanning Region\nPlanning Area\nRegion_type\n\n\n\n\nBAGNALL COURT\n115280000\n68491.33\n1683\n04 Jan 2023\n813,817 ETC ENBLOC UPPER EAST COAST ROAD\nResale\nStrata\n6363\n18117\n-\nCondominium\n43\nFreehold\n1991\nPrivate\n466609\n16\n46\nEast Region\nBedok\nOCR\n\n\nMEYER PARK\n392180000\n144883.44\n2707\n09 Feb 2023\n81,83 ENBLOC MEYER ROAD #19-01,02 ETC\nResale\nStrata\n13460\n29137\n-\nCondominium\n60\nFreehold\n1985\nPrivate\n437910\n15\n43\nCentral Region\nMarine Parade\nRCR\n\n\nKEW LODGE\n66800000\n25177.00\n2653\n23 May 2023\n34,34A,36 ETC ENBLOC KHEAM HOCK ROAD\nResale\nStrata\n2339\n28559\n-\nTerrace House\n11\nFreehold\n1984\nPrivate\n298796\n11\n29\nCentral Region\nNovena\nCCR\n\n\nKARTAR APARTMENTS\n18000000\n6964.31\n2585\n11 Oct 2023\n41A,43 ETC ENBLOC THOMSON ROAD\nResale\nStrata\n647\n27821\n-\nApartment\n7\nFreehold\n-\nPrivate\n307583\n11\n30\nCentral Region\nNovena\nCCR\n\n\n\n\n\n\n\n2.3.2 - Large new launches\nAnother subset identified are new project launches, where we observe a spike in transaction volumes in the month which new large developments are launched. While these transactions are not excluded from the visualisation dataset, this subset will be further analysed under section 3.3\n\nType of Sale = “New Sale”\nCompletion Date = “Uncompleted”\nSum of Number of Units group by Project Name &gt; 100\n\n\n\nCode\nSale_by_proj &lt;- realis_full %&gt;% \n  group_by(`Project Name`) %&gt;% \n  mutate(total_sale = sum(`Number of Units`))%&gt;% \n  arrange(desc(total_sale)) %&gt;%\n  ungroup()\n  \nnew_launch &lt;- Sale_by_proj %&gt;% \n  filter(`Type of Sale` == \"New Sale\", \n         `Completion Date` == \"Uncompleted\")\n\nlarge_new_launch &lt;- Sale_by_proj %&gt;% \n  filter(`Type of Sale` == \"New Sale\", \n         `Completion Date` == \"Uncompleted\", \n         total_sale &gt; 100)\n\nlarge_new_launch &lt;- large_new_launch %&gt;% \n  rename(\"Unit_Price_PSF\" = \"Unit Price ($ PSF)\")\n\nnew_proj_sale &lt;- large_new_launch %&gt;%\n  group_by(`Project Name`) %&gt;%\n  summarize(proj_sale = total_sale, \n            median_proj_psf = median(as.numeric(`Unit_Price_PSF`))) %&gt;%\n  arrange(desc(proj_sale))\n\nkable(head(distinct(new_proj_sale)), n =5)\n\n\n\n\n\nProject Name\nproj_sale\nmedian_proj_psf\n\n\n\n\nTHE RESERVE RESIDENCES\n679\n2474.0\n\n\nGRAND DUNMAN\n641\n2523.0\n\n\nLENTOR HILLS RESIDENCES\n487\n2107.0\n\n\nN.A.\n486\n2473.5\n\n\nLENTOR MANSION\n409\n2269.0\n\n\nTEMBUSU GRAND\n389\n2461.0\n\n\n\n\n\nExample of new large development new launches & reported sales:\n\n\n\nNewly launched Project\nMonth of Launch\nSales with first launch\n\n\n\n\nThe Reserve Residences\nMay 2023\n&gt;70% units sold at launch weekend\n\n\nGrand Dunman\nJuly 2023\n&gt;50% units sold at launch weekend\n\n\nLentor Hills Residences\nJuly 2023\n&gt;50% units sold at launch weekend\n\n\nLentor Mansion\nMar 2024\n75% units sold at launch weekend\n\n\nTembusu Grand\nApr 2023\n&gt;50% units sold at launch weekend\n\n\n\n\n\n2.3.3 - Luxury market\n\nExploring transactions that has Transacted Price ($) in the top 2.5% which has previously been excluded in earlier price distribution visualisation as they skewed the records.\nThe distribution of property for this luxury market will be further analysed in section 3.3.\n\n\n\n\n\n\n\n\n\nPrice Range\nNumber of Units\nNumber of Distinct Projects\n\n\n\n\n\n97.5 percentile -&gt; $6,2250,93\nMax -&gt;$61,080,008\n\n677\nApprox 200\n\n\n\n\n\nCode\nhigh_val &lt;- realis_clean2 %&gt;%\n  filter(`Transacted Price ($)` &gt; quantile(`Transacted Price ($)`, 0.975, na.rm = TRUE)) \n\nind_high_val &lt;- anti_join(high_val, enbloc_set, by = c(\"Tenure\",\"Number of Units\",\"Type of Sale\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-visualization",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-visualization",
    "title": "Take-home Exercise 1",
    "section": "3. Data Visualization",
    "text": "3. Data Visualization\nDiving into individual private residential purchases, the visualization data set used Realis_vis will exclude the subset of Enbloc_set.\n\n\nCode\nrealis_vis &lt;- anti_join(realis_clean2, enbloc_set, by = c(\"Tenure\",\"Number of Units\",\"Type of Sale\"))\n\n\n\n3.1 Setting a common theme for visualisation.\n\nTo have an aligned understanding, we have defined a common color scheme.\n\n\n\n\nCode\nprop_col &lt;- c(\"Apartment\" = \"#CCE5FF\", \n              \"Executive Condominium\" = \"#CCFF99\", \n              \"Condominium\" = \"#99CCff\", \n              \"Terrace House\" = \"#FFE5CC\", \n              \"Semi-Detached House\" = \"#FFCC99\", \n              \"Detached House\" = \"#FF9933\")\n\n\n2. To minimise distortion from outliers, the upper bounds will be adjusted according to the underlying dataset values.\n\n\nCode\nupper_bound &lt;- quantile(realis_clean2$`Transacted Price ($)`, 0.975)\nprint(paste(\"Upper bound price at 97.5%\", upper_bound))\n\n\n[1] \"Upper bound price at 97.5% 6200000\"\n\n\n\n\n3.2 Visualization 1 - How has transacted price varied over the 2024 Q1 and 2023\n\nInsights:\n\nMajority of private residential sales involves Apartment & Condominium, and Executive condominium, given limited supply of Terrace, Semi-Detached and Detached houses and much higher prices leading to fewer transaction.\nPrice of Condo and Apartment relatively similar, EC is much cheaper with highly subsidized government rates.\nClear price distinction between (1) Apartment, Condo, where &gt; 75% below $2.7 Mil vs (2) Terrace, Semi-Detached, Detached Houses, where &gt; 75% above $2.7 Mil, signalling different purchasing power of target audience.\nSeasonality of sales varies. While terrace and semi-detached relatively even sales, sales for EC, Condo, Apartment highly varied with new project launches. (Further exploration in Section 3.3)\nDemand in 2024 Q1 started strong, and fell in February. Potentially due to busy CNY season and shorter month. Transaction is picking up again in March 2024.\n\n\n3.2.1 Distribution of No. of Unit of property sold over months per Property Type\nSteps taken:\n\nBinning the transaction records into months.\nDrawing bar graph and color coding based on the type of property sold\nIncluding annotation to segregate the bars that are for 2024 Q1\n\n\n\nCode\nsale_by_prop_month &lt;- realis_clean2 %&gt;% \n  group_by(`Property Type`, (year_month = format(`Sale Date`, \"%Y-%m\"))) %&gt;%\n  summarise(total_units = sum(`Number of Units`), avg_price = median(`Transacted Price ($)`))\n\nsale_by_prop_month &lt;- sale_by_prop_month %&gt;% rename_with( ~ \"year_month\", .cols = 2)\n\n# Converting the year_month from character back to continuous date for line plots \nsale_by_prop_month$year_month &lt;- as.Date(paste0(sale_by_prop_month$year_month, \"-01\"))\n\n# Extract the month and year information for labeling\nsale_by_prop_month$month &lt;- format(sale_by_prop_month$year_month, \"%b\")\nsale_by_prop_month$year &lt;- format(sale_by_prop_month$year_month, \"%Y\")\n\n# Create a label for each point showing the month and year\nsale_by_prop_month$label &lt;- paste(sale_by_prop_month$month, sale_by_prop_month$year)\n\nsale_by_prop_month_2 &lt;- sale_by_prop_month[,c(\"Property Type\", \"label\", \"total_units\", \"avg_price\")]\n\nmonth_sale &lt;- dcast(sale_by_prop_month_2, `Property Type` ~ `label`, value.var = \"total_units\")\n\nmonth_price &lt;- dcast(sale_by_prop_month_2, `Property Type` ~ `label`, value.var = \"avg_price\")\n\n# Plotting distribution of sales by month \nhist_plot &lt;- ggplot(data = sale_by_prop_month, \n                    aes(x= year_month, y = total_units, fill = `Property Type`)) + \n  geom_col(color = \"grey30\") + ylim(0,2000) + \n  geom_vline(\n    xintercept = as.Date(\"2024-01-01\") -15, color = \"red\", linetype = \"dashed\") + scale_fill_manual(values = prop_col) + \n  theme(axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 0.5)) +\n  labs(title = \"Distribution of Units Sale per Month\", \n       x = \"No. of Units Sold\", \n       y = \"Month\")\n\n# Setting upper bound price for apartment\nupper_bound &lt;- quantile(realis_clean2$`Transacted Price ($)`, 0.99)\n\n# Setting order\nprop_order &lt;- c(\"Detached House\", \"Semi-Detached House\",\"Terrace House\", \"Condominium\", \"Apartment\", \"Executive Condominium\")\n\nrealis_clean2$`Property Type` &lt;- factor(realis_clean2$`Property Type`, levels = prop_order)\n\n# drawing graph --&gt; see if can color code\nprop_price_dist &lt;- ggplot(realis_clean2, \n                     aes(x = `Property Type`, y = `Transacted Price ($)`, fill = `Property Type` )) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2) +\n   coord_flip() +\n  ylim(0, upper_bound) + \n  scale_fill_manual(values = prop_col)  + \n  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) + geom_hline(yintercept = 2750000, color = \"red\", linetype = \"dashed\") + labs(title = \"Spread of Transacted Price per Property Type\", \n       x = \"Property Type\", \n       y = \"Transacted Price\")\n\n\n\nSummary of Unit Sales per monthSummary of Median Transaction Price per monthDistribution of Transactions over TimeSpread of Price per Property Type\n\n\n\n\nCode\nkable(month_sale, caption = \"Units sold per property type\")\n\n\n\nUnits sold per property type\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProperty Type\nApr 2023\nAug 2023\nDec 2023\nFeb 2023\nFeb 2024\nJan 2023\nJan 2024\nJul 2023\nJun 2023\nMar 2023\nMar 2024\nMay 2023\nNov 2023\nOct 2023\nSep 2023\n\n\n\n\nApartment\n772\n638\n461\n588\n435\n489\n565\n1444\n598\n585\n853\n1294\n1011\n556\n496\n\n\nCondominium\n1047\n782\n558\n676\n564\n483\n601\n896\n603\n1108\n693\n801\n719\n641\n572\n\n\nDetached House\n15\n15\n5\n19\n16\n11\n12\n11\n19\n34\n12\n16\n21\n16\n14\n\n\nExecutive Condominium\n184\n449\n183\n119\n150\n231\n459\n230\n154\n185\n234\n282\n182\n217\n275\n\n\nSemi-Detached House\n26\n41\n27\n29\n25\n23\n29\n57\n67\n36\n39\n36\n33\n30\n29\n\n\nTerrace House\n87\n95\n61\n72\n59\n48\n75\n78\n66\n92\n82\n73\n70\n66\n86\n\n\n\n\n\nCode\nprint(paste(\"Maximum units sold per month is\", max(sale_by_prop_month$total_units))) #max unit sold = 1444,\n\n\n[1] \"Maximum units sold per month is 1444\"\n\n\n\n\n\n\nCode\nkable(month_price, caption = \"Average Price per property type\")\n\n\n\nAverage Price per property type\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProperty Type\nApr 2023\nAug 2023\nDec 2023\nFeb 2023\nFeb 2024\nJan 2023\nJan 2024\nJul 2023\nJun 2023\nMar 2023\nMar 2024\nMay 2023\nNov 2023\nOct 2023\nSep 2023\n\n\n\n\nApartment\n1742500\n1593000\n1560000\n1875000\n1634000\n1620500\n1700000\n1716000\n1671200\n1580000\n1650000\n1768000\n1709000\n1629700\n1650000\n\n\nCondominium\n1730000\n1610750\n1560000\n1658888\n1704000\n1598000\n1690000\n1672500\n1590000\n1580577\n1780000\n1628000\n1780000\n1645000\n1575440\n\n\nDetached House\n13888000\n9950000\n11338000\n11300000\n11425000\n10200000\n10750000\n7000000\n9000000\n14500000\n10740000\n8800128\n8458200\n7830000\n8300000\n\n\nExecutive Condominium\n1299000\n1450000\n1404000\n1285000\n1395500\n1347000\n1504000\n1352000\n1290000\n1300000\n1480000\n1269000\n1335500\n1360000\n1450000\n\n\nSemi-Detached House\n5405000\n5500000\n5000000\n5568000\n5000000\n6539400\n5600000\n5550000\n3805000\n5279000\n5700000\n5195000\n4950000\n5250000\n5718000\n\n\nTerrace House\n3500000\n3628000\n3500000\n3500000\n3565000\n3550000\n3750000\n3780000\n3620000\n3600000\n3725000\n3570000\n3625000\n3600000\n3844000\n\n\n\n\n\nCode\nprint(paste(\"Maximum Average Price per month is $\", max(sale_by_prop_month$avg_price))) #max price $14,500,000\n\n\n[1] \"Maximum Average Price per month is $ 14500000\"\n\n\n\n\n\n\nCode\nhist_plot\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nprop_price_dist\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.1.2 Transaction Price & No of Unit sold per Property Type\nSteps taken:\n\nPartitioning subset of the transaction records based on Property Type\nCreating bar chart on the sum No of Units sold per month\nCreating line graph on the median Transaction Price for the property sold that month\nIncluding annotation to highlight trend in 2024 Q1\n\n\n\nCode\n# Segment into property type\napt_by_month &lt;- subset(sale_by_prop_month,  sale_by_prop_month$`Property Type` == \"Apartment\")\nec_by_month &lt;- subset(sale_by_prop_month,  sale_by_prop_month$`Property Type` == \"Executive Condominium\")\nc_by_month &lt;- subset(sale_by_prop_month,  sale_by_prop_month$`Property Type` == \"Condominium\")\nt_by_month &lt;- subset(sale_by_prop_month,  sale_by_prop_month$`Property Type` == \"Terrace House\")\nsd_by_month &lt;- subset(sale_by_prop_month,  sale_by_prop_month$`Property Type` == \"Semi-Detached House\")\nd_by_month &lt;- subset(sale_by_prop_month,  sale_by_prop_month$`Property Type` == \"Detached House\")\n\n## Apartment \n# Understanding the dataset \n# summary(apt_by_month)\n# Max units: 1444, max price = $1,875,000\n\n# Creating the graph\n## Apartment\nhist_plot_apt &lt;- ggplot(data = apt_by_month, aes(x = year_month, y = total_units, fill = total_units)) +\n  geom_col() +\n  scale_fill_gradient(low = \"#E0E0E0\", high = \"#000000\", name = \"Intensity\", limit = c(0,2000)) +  # Apply a color scale for intensity\n  geom_line(aes(y = avg_price * 1500 / 2000000), color = \"blue\") +\n  scale_y_continuous(\n    name = \"Apt\",\n    limits = c(0, 1500),\n    sec.axis = sec_axis(~. * 2000000 / 1500, name = \"Median Price\")\n  ) + geom_vline(xintercept = as.Date(\"2024-01-01\") -15, color = \"red\", linetype = \"dashed\") + theme(legend.position = \"none\", panel.background = element_rect(fill = \"#CCE5FF\"))\n\n## EC\n# summary(ec_by_month) \n# max unit sold: 459, max avg price = 1504000\n\nhist_plot_ec &lt;- ggplot(data = ec_by_month, \n                    aes(x= year_month, y = total_units, fill = total_units)) +\n  geom_col() +\n  scale_fill_gradient(low = \"#E0E0E0\", high = \"#000000\", name = \"Intensity\", limit = c(0,2000)) + \n  geom_line(aes(y = avg_price *500/1600000), color = \"blue\") + \n   scale_y_continuous(name = \"EC\", \n                      limits = c(0, 500), \n                      sec.axis = sec_axis(~.*1600000/500) ) + geom_vline(xintercept = as.Date(\"2024-01-01\") -15, color = \"red\", linetype = \"dashed\") + theme(legend.position = \"none\", panel.background = element_rect(fill = \"#CCFF99\")) + labs(title = \"Unit Sold & Median Price over Months\")\n\n## Condo\n# summary(c_by_month)\n# max unit sold: 1108, max price: 1780000\n\nhist_plot_c &lt;- ggplot(data = c_by_month, \n                    aes(x= year_month, y = total_units, fill = total_units)) +\n  geom_col() +\n  scale_fill_gradient(low = \"#E0E0E0\", high = \"#000000\", name = \"Intensity\", limit = c(0,2000)) + \n  geom_line(aes(y = avg_price *1200/1800000), color = \"blue\") + \n   scale_y_continuous(name = \"Condo\", \n                      limits = c(0, 1200), \n                      sec.axis = sec_axis(~.*1800000/1200) ) + geom_vline(xintercept = as.Date(\"2024-01-01\") -15, color = \"red\", linetype = \"dashed\") + theme(legend.position = \"none\", panel.background = element_rect(fill = \"#99CCFF\" ))\n\n## Combining the plot\nhist_plot_apt &lt;- hist_plot_apt + theme(axis.text.x = element_blank(), axis.line.x = element_blank(), axis.title.x = element_blank())\nhist_plot_ec &lt;- hist_plot_ec + theme(axis.text.x = element_blank(), axis.line.x = element_blank(), axis.title.x = element_blank())\nhist_plot_c &lt;- hist_plot_c + theme(axis.title.x = element_blank())\n\ncombined_plot &lt;- hist_plot_ec + hist_plot_apt + hist_plot_c + plot_layout(ncol = 1) + theme(axis.line.x = element_line(color = \"black\")) + theme(panel.grid = element_line(color = \"white\", linetype = \"dotted\")) \n\n\n## Terrace\n# kable(summary(t_by_month))\n# max units: 95\n# max price: 3,844,000\n\nhist_plot_t &lt;- ggplot(data = t_by_month, \n                    aes(x= year_month, y = total_units, fill = total_units)) +\n  geom_col() +\n  scale_fill_gradient(low = \"#E0E0E0\", high = \"#000000\", name = \"Intensity\", limit = c(0,100)) + \n  geom_line(aes(y = avg_price *100/4000000), color = \"blue\") + \n   scale_y_continuous(name = \"Terrace\", \n                      limits = c(0, 100), \n                      sec.axis = sec_axis(~.*4000000/100) ) + geom_vline(xintercept = as.Date(\"2024-01-01\") -15, color = \"red\", linetype = \"dashed\") + theme(legend.position = \"none\", panel.background = element_rect(fill = \"#FFE5CC\"))\n\n## Semi Detached\n# kable(summary(sd_by_month))\n# max unit: 67\n# max price: 6,539,400 \n\nhist_plot_sd &lt;- ggplot(data = sd_by_month, \n                    aes(x= year_month, y = total_units, fill = total_units)) +\n  geom_col() +\n  scale_fill_gradient(low = \"#e0e0e0\", high = \"#000000\", name = \"Intensity\", limit = c(0,100)) + \n  geom_line(aes(y = avg_price *100/7000000), color = \"blue\") + \n   scale_y_continuous(name = \"Semi-Detached\", \n                      limits = c(0, 100), \n                      sec.axis = sec_axis(~.*7000000/100, name = \"Median Price\") ) + geom_vline(xintercept = as.Date(\"2024-01-01\") -15, color = \"red\", linetype = \"dashed\") + theme(legend.position = \"none\", panel.background = element_rect(fill = \"#FFCC99\"))\n\n\n## Detached\n# kable(summary(d_by_month))\n# max unit: 34\n# max price: 14,500,000\n\nhist_plot_d &lt;- ggplot(data = d_by_month, \n                    aes(x= year_month, y = total_units, fill = total_units)) +\n  geom_col() +\n  scale_fill_gradient(low = \"#E0E0E0\", high = \"#000000\", name = \"Intensity\", limit = c(0,100)) + \n  geom_line(aes(y = avg_price *50/15000000), color = \"blue\") + \n   scale_y_continuous(name = \"Detached\", \n                      limits = c(0, 100), \n                      sec.axis = sec_axis(~.*15000000/50) ) + geom_vline(xintercept = as.Date(\"2024-01-01\") -15, color = \"red\", linetype = \"dashed\") + theme(legend.position = \"none\", panel.background = element_rect(fill = \"#FF9933\"))\n\n\nhist_plot_t &lt;- hist_plot_t + theme(axis.text.x = element_blank(), axis.line.x = element_blank(), axis.title.x = element_blank())\nhist_plot_sd &lt;- hist_plot_sd + theme(axis.text.x = element_blank(), axis.line.x = element_blank(), axis.title.x = element_blank())\nhist_plot_d &lt;- hist_plot_d + theme(axis.title.x = element_blank())\n\ncombined_plot_2 &lt;- hist_plot_t + hist_plot_sd + hist_plot_d + plot_layout(ncol = 1) + theme(axis.line.x = element_line(color = \"black\")) \n\n\n\nUnit Sale & Median Price for EC, Apt, CondoUnit Sale & Median Price for Terrace, Semi-D, DetachedSummary for EC, Apt, CondoSummary for Terrace, Semi-D, Detached\n\n\n\n\nCode\ncombined_plot\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ncombined_plot_2\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nkable(summary(apt_by_month), caption = \"Apartment Summary\")\n\n\n\nApartment Summary\n\n\n\n\n\n\n\n\n\n\n\n\n\nProperty Type\nyear_month\ntotal_units\navg_price\nmonth\nyear\nlabel\n\n\n\n\n\nLength:15\nMin. :2023-01-01\nMin. : 435.0\nMin. :1560000\nLength:15\nLength:15\nLength:15\n\n\n\nClass :character\n1st Qu.:2023-04-16\n1st Qu.: 526.0\n1st Qu.:1625100\nClass :character\nClass :character\nClass :character\n\n\n\nMode :character\nMedian :2023-08-01\nMedian : 588.0\nMedian :1650000\nMode :character\nMode :character\nMode :character\n\n\n\nNA\nMean :2023-08-01\nMean : 719.0\nMean :1673260\nNA\nNA\nNA\n\n\n\nNA\n3rd Qu.:2023-11-16\n3rd Qu.: 812.5\n3rd Qu.:1712500\nNA\nNA\nNA\n\n\n\nNA\nMax. :2024-03-01\nMax. :1444.0\nMax. :1875000\nNA\nNA\nNA\n\n\n\n\n\nCode\nkable(summary(ec_by_month), caption = \"EC Summary\")\n\n\n\nEC Summary\n\n\n\n\n\n\n\n\n\n\n\n\n\nProperty Type\nyear_month\ntotal_units\navg_price\nmonth\nyear\nlabel\n\n\n\n\n\nLength:15\nMin. :2023-01-01\nMin. :119.0\nMin. :1269000\nLength:15\nLength:15\nLength:15\n\n\n\nClass :character\n1st Qu.:2023-04-16\n1st Qu.:182.5\n1st Qu.:1299500\nClass :character\nClass :character\nClass :character\n\n\n\nMode :character\nMedian :2023-08-01\nMedian :217.0\nMedian :1352000\nMode :character\nMode :character\nMode :character\n\n\n\nNA\nMean :2023-08-01\nMean :235.6\nMean :1368067\nNA\nNA\nNA\n\n\n\nNA\n3rd Qu.:2023-11-16\n3rd Qu.:254.5\n3rd Qu.:1427000\nNA\nNA\nNA\n\n\n\nNA\nMax. :2024-03-01\nMax. :459.0\nMax. :1504000\nNA\nNA\nNA\n\n\n\n\n\nCode\nkable(summary(c_by_month), caption = \"Terrace Summary\")\n\n\n\nTerrace Summary\n\n\n\n\n\n\n\n\n\n\n\n\n\nProperty Type\nyear_month\ntotal_units\navg_price\nmonth\nyear\nlabel\n\n\n\n\n\nLength:15\nMin. :2023-01-01\nMin. : 483.0\nMin. :1560000\nLength:15\nLength:15\nLength:15\n\n\n\nClass :character\n1st Qu.:2023-04-16\n1st Qu.: 586.5\n1st Qu.:1594000\nClass :character\nClass :character\nClass :character\n\n\n\nMode :character\nMedian :2023-08-01\nMedian : 676.0\nMedian :1645000\nMode :character\nMode :character\nMode :character\n\n\n\nNA\nMean :2023-08-01\nMean : 716.3\nMean :1653544\nNA\nNA\nNA\n\n\n\nNA\n3rd Qu.:2023-11-16\n3rd Qu.: 791.5\n3rd Qu.:1697000\nNA\nNA\nNA\n\n\n\nNA\nMax. :2024-03-01\nMax. :1108.0\nMax. :1780000\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nCode\nkable(summary(t_by_month), caption = \"Terrace Summary\")\n\n\n\nTerrace Summary\n\n\n\n\n\n\n\n\n\n\n\n\n\nProperty Type\nyear_month\ntotal_units\navg_price\nmonth\nyear\nlabel\n\n\n\n\n\nLength:15\nMin. :2023-01-01\nMin. :48\nMin. :3500000\nLength:15\nLength:15\nLength:15\n\n\n\nClass :character\n1st Qu.:2023-04-16\n1st Qu.:66\n1st Qu.:3557500\nClass :character\nClass :character\nClass :character\n\n\n\nMode :character\nMedian :2023-08-01\nMedian :73\nMedian :3600000\nMode :character\nMode :character\nMode :character\n\n\n\nNA\nMean :2023-08-01\nMean :74\nMean :3623800\nNA\nNA\nNA\n\n\n\nNA\n3rd Qu.:2023-11-16\n3rd Qu.:84\n3rd Qu.:3676500\nNA\nNA\nNA\n\n\n\nNA\nMax. :2024-03-01\nMax. :95\nMax. :3844000\nNA\nNA\nNA\n\n\n\n\n\nCode\nkable(summary(sd_by_month) , caption = \"Semi Detached Summary\")\n\n\n\nSemi Detached Summary\n\n\n\n\n\n\n\n\n\n\n\n\n\nProperty Type\nyear_month\ntotal_units\navg_price\nmonth\nyear\nlabel\n\n\n\n\n\nLength:15\nMin. :2023-01-01\nMin. :23.00\nMin. :3805000\nLength:15\nLength:15\nLength:15\n\n\n\nClass :character\n1st Qu.:2023-04-16\n1st Qu.:28.00\n1st Qu.:5097500\nClass :character\nClass :character\nClass :character\n\n\n\nMode :character\nMedian :2023-08-01\nMedian :30.00\nMedian :5405000\nMode :character\nMode :character\nMode :character\n\n\n\nNA\nMean :2023-08-01\nMean :35.13\nMean :5337293\nNA\nNA\nNA\n\n\n\nNA\n3rd Qu.:2023-11-16\n3rd Qu.:37.50\n3rd Qu.:5584000\nNA\nNA\nNA\n\n\n\nNA\nMax. :2024-03-01\nMax. :67.00\nMax. :6539400\nNA\nNA\nNA\n\n\n\n\n\nCode\nkable(summary(d_by_month), caption = \"Detached Summary\")\n\n\n\nDetached Summary\n\n\n\n\n\n\n\n\n\n\n\n\n\nProperty Type\nyear_month\ntotal_units\navg_price\nmonth\nyear\nlabel\n\n\n\n\n\nLength:15\nMin. :2023-01-01\nMin. : 5.00\nMin. : 7000000\nLength:15\nLength:15\nLength:15\n\n\n\nClass :character\n1st Qu.:2023-04-16\n1st Qu.:12.00\n1st Qu.: 8629164\nClass :character\nClass :character\nClass :character\n\n\n\nMode :character\nMedian :2023-08-01\nMedian :15.00\nMedian :10200000\nMode :character\nMode :character\nMode :character\n\n\n\nNA\nMean :2023-08-01\nMean :15.73\nMean :10231955\nNA\nNA\nNA\n\n\n\nNA\n3rd Qu.:2023-11-16\n3rd Qu.:17.50\n3rd Qu.:11319000\nNA\nNA\nNA\n\n\n\nNA\nMax. :2024-03-01\nMax. :34.00\nMax. :14500000\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\n\n\n3.3 Visualization 2 - Exploring how Property Prices is affected by Location & Unit Size\n\nInsights:\n\nProperties in CCR has a higher distribution of prices for both “Condo, Apartment, Resale EC” and “Terraces, Semi-Detached and Detached Houses”, and can be attributed to the proximity to town.\nThere are higher volume of transaction for property in the “Rest of Core Region” and this may be due to the greater supply of units available for purchase.\nThere are no Executive Condominium in the CCR, and unit size in Condo have a wider spread than apartment regardless of region (CCR, RCR, OCR).\nDetached house has the widest spread of unit size, even in CCR where land is limited. This contributes to the highest price of $62 million. Terrace houses size are on average smaller than Semi-detached houses regardless of region.\n\n\n3.3.1 - Price distribution of units sold based on Planning Area\nSteps taken:\n\nGrouped into 2 major markets of\n(1) Apartment & Condominium (with Resale Executive Condominium) and\n(2) Terrace, Semi-detached Houses and Detached Houses.\n\nNote: Newly launched executive Condominium has been excluded as they prices are influenced by government subsidies and supply is restricted to newer estates and launches are infrequent.\n\nUsing ggridges plot the density of units transacted for each group based on the respective Planning Area after segmenting by Region Type (CCR, OCR and RCR).\nFor clearer depiction, the plots are sorted by median price for each Planning Area.\nTo minimize distortion due to outlines, the scale is adjusted either manually or by percentile for each subset of data (by Property Type, by Region Type).\n\n\n\nCode\n#Segment into group 1\napart_c_vis &lt;- subset(realis_vis,  realis_vis$`Property Type` == c(\"Apartment\",\"Condominium\"))\n\nresale_ec_vis &lt;- subset(realis_vis, (realis_vis$`Property Type`== \"Executive Condominium\" & realis_vis$`Type of Sale` == \"Resale\"))\n                        \napt_c_resale_ec &lt;- rbind(apart_c_vis, resale_ec_vis)\n\n# Setting Limits\nxupper &lt;- quantile(apt_c_resale_ec$`Transacted Price ($)`, 0.99)\n\n#Segment into region\napt_c_resale_ec_ccr &lt;- subset(apt_c_resale_ec, apt_c_resale_ec$`Region_type`== \"CCR\")\n\n#assign color \nquan_col &lt;- c(\"1\" = \"#ccffcc\", \"2\" = \"#C0C0C0\", \"3\" = \"#C0C0C0\", \"4\" = \"#FF9999\")\n\n\n# 1. Calculate median transaction price for each planning area\nmedian_prices_ccr &lt;- apt_c_resale_ec_ccr %&gt;%\n  group_by(`Planning Area`) %&gt;%\n  summarize(median_price_ccr = median(`Transacted Price ($)`)) %&gt;%\n  arrange(desc(median_price_ccr))\n\n# 2. Reorder levels of the 'Planning Area' factor based on median prices\napt_c_resale_ec_ccr$`Planning Area` &lt;- factor(apt_c_resale_ec_ccr$`Planning Area`, levels = median_prices_ccr$`Planning Area`)\n\n# 3. Plot the data with the reordered factor levels\nquan_ccr_grp1 &lt;- ggplot(data = apt_c_resale_ec_ccr,\n                       aes(x = `Transacted Price ($)`, \n                           y = `Planning Area`,\n                           fill = factor(stat(quantile))\n                       )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE\n  ) +\n  labs(title = \"Transacted Price by Planning Area\", y = \"CCR\") + \n  scale_fill_manual(name = \"Quartiles\", values = quan_col) +\n  theme_ridges() + \n  xlim(0, xupper) + theme(legend.position = \"none\",plot.margin = margin(5,5,5,5,\"mm\"), panel.background = element_rect(fill = \"white\"), plot.background = element_rect(fill = \"#99CCFF\"),axis.title.x = element_blank())\n\n## Repeat for the other 2 regions\napt_c_resale_ec_rcr &lt;- subset(apt_c_resale_ec, apt_c_resale_ec$`Region_type`== \"RCR\")\n\nmedian_prices_rcr &lt;- apt_c_resale_ec_rcr %&gt;%\n  group_by(`Planning Area`) %&gt;%\n  summarize(median_price_rcr = median(`Transacted Price ($)`)) %&gt;%\n  arrange(desc(median_price_rcr))\n\napt_c_resale_ec_rcr$`Planning Area` &lt;- factor(apt_c_resale_ec_rcr$`Planning Area`, levels = median_prices_rcr$`Planning Area`)\n\n#apt_c_resale_ec_rcr &lt;- apt_c_resale_ec_rcr[complete.cases(apt_c_resale_ec_rcr$`Planning Area`), ]\n\nquan_rcr_grp1 &lt;- ggplot(data = apt_c_resale_ec_rcr,\n                       aes(x = `Transacted Price ($)`, \n                           y = `Planning Area`,\n                           fill = factor(stat(quantile))\n                       )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE\n  ) +\n  labs(y = \"RCR\") +\n  scale_fill_manual(name = \"Quartiles\", values = quan_col) +\n  theme_ridges() + \n  xlim(0, xupper) + theme(legend.position = \"none\", plot.margin = margin(10,10,10,10,\"mm\"), panel.background = element_rect(fill = \"white\"), plot.background = element_rect(fill = \"#99CCFF\"),axis.title.x = element_blank())\n\napt_c_resale_ec_ocr &lt;- subset(apt_c_resale_ec, apt_c_resale_ec$`Region_type`== \"OCR\")\n\nmedian_prices_ocr &lt;- apt_c_resale_ec_ocr %&gt;%\n  group_by(`Planning Area`) %&gt;%\n  summarize(median_price_ocr = median(`Transacted Price ($)`)) %&gt;%\n  arrange(desc(median_price_ocr))\n\napt_c_resale_ec_ocr$`Planning Area` &lt;- factor(apt_c_resale_ec_ocr$`Planning Area`, levels = median_prices_ocr$`Planning Area`)\n\n#apt_c_resale_ec_ocr &lt;- apt_c_resale_ec_ocr[complete.cases(apt_c_resale_ec_ocr$`Planning Area`), ]\n\nquan_ocr_grp1 &lt;- ggplot(data = apt_c_resale_ec_ocr,\n                       aes(x = `Transacted Price ($)`, \n                           y = `Planning Area`,\n                           fill = factor(stat(quantile))\n                       )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE\n  ) +\n  labs(y = \"OCR\") + \n  scale_fill_manual(name = \"Quartiles\", values = quan_col) +\n  theme_ridges() + \n  xlim(0, xupper) + theme(legend.position = \"none\", plot.margin = margin(10,10,10,10,\"mm\"), panel.background = element_rect(fill = \"white\"), plot.background = element_rect(fill = \"#99CCFF\"))\n\n## Repeat for Group 2 \n#Repeat for Terrace, Semi-Detached and Detached Houses\nt_sd_d_vis &lt;- subset(realis_vis,  realis_vis$`Property Type` == c(\"Terrace House\", \"Semi-Detached House\", \"Detached House\"))\n\nxupper2 &lt;- quantile(t_sd_d_vis$`Transacted Price ($)`, 0.990)\n\nt_sd_d_ccr &lt;- subset(t_sd_d_vis, t_sd_d_vis$`Region_type`== \"CCR\")\n\nmedian_prices_ccr2 &lt;- t_sd_d_ccr %&gt;%\n  group_by(`Planning Area`) %&gt;%\n  summarize(median_price_ccr2 = median(`Transacted Price ($)`)) %&gt;%\n  arrange(desc(median_price_ccr2))\n\n# 2. Reorder levels of the 'Planning Area' factor based on median prices\nt_sd_d_ccr$`Planning Area` &lt;- factor(t_sd_d_ccr$`Planning Area`, levels = median_prices_ccr2$`Planning Area`)\n\n# 3. Plot the data with the reordered factor levels\nquan_ccr_grp2 &lt;- ggplot(data = t_sd_d_ccr,\n                       aes(x = `Transacted Price ($)`, \n                           y = `Planning Area`,\n                           fill = factor(stat(quantile))\n                       )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE\n  ) + labs(title = \"Transacted Price by Planning Area\", y = \"CCR\") +\n  scale_fill_manual(name = \"Quartiles\", values = quan_col) +\n  theme_ridges() + \n  xlim(0, xupper2*2) + theme(legend.position = \"none\",plot.margin = margin(5,5,5,5,\"mm\"), panel.background = element_rect(fill = \"white\"), plot.background = element_rect(fill = \"#FFCC99\"), axis.title.x = element_blank())\n\n## Repeat for the other 2 regions\nt_sd_d_rcr &lt;- subset(t_sd_d_vis, t_sd_d_vis$`Region_type`== \"RCR\")\n\nmedian_prices_rcr2 &lt;- t_sd_d_rcr %&gt;%\n  group_by(`Planning Area`) %&gt;%\n  summarize(median_price_rcr2 = median(`Transacted Price ($)`)) %&gt;%\n  arrange(desc(median_price_rcr2))\n\nt_sd_d_rcr$`Planning Area` &lt;- factor(t_sd_d_rcr$`Planning Area`, levels = median_prices_rcr2$`Planning Area`)\n\n#apt_c_resale_ec_rcr &lt;- apt_c_resale_ec_rcr[complete.cases(apt_c_resale_ec_rcr$`Planning Area`), ]\n\nquan_rcr_grp2 &lt;- ggplot(data = t_sd_d_rcr,\n                       aes(x = `Transacted Price ($)`, \n                           y = `Planning Area`,\n                           fill = factor(stat(quantile))\n                       )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE\n  ) + labs(y = \"RCR\") +\n  scale_fill_manual(name = \"Quartiles\", values = quan_col) +\n  theme_ridges() + \n  xlim(0, xupper2) + theme(legend.position = \"none\", plot.margin = margin(10,10,10,10,\"mm\"), panel.background = element_rect(fill = \"white\"), plot.background = element_rect(fill = \"#FFCC99\"),axis.title.x = element_blank())\n\nt_sd_d_ocr &lt;- subset(t_sd_d_vis, t_sd_d_vis$`Region_type`== \"OCR\")\n\nmedian_prices_ocr2 &lt;- t_sd_d_ocr %&gt;%\n  group_by(`Planning Area`) %&gt;%\n  summarize(median_price_ocr2 = median(`Transacted Price ($)`)) %&gt;%\n  arrange(desc(median_price_ocr2))\n\nt_sd_d_ocr$`Planning Area` &lt;- factor(t_sd_d_ocr$`Planning Area`, levels = median_prices_ocr2$`Planning Area`)\n\n#apt_c_resale_ec_ocr &lt;- apt_c_resale_ec_ocr[complete.cases(apt_c_resale_ec_ocr$`Planning Area`), ]\n\nquan_ocr_grp2 &lt;- ggplot(data = t_sd_d_ocr,\n                       aes(x = `Transacted Price ($)`, \n                           y = `Planning Area`,\n                           fill = factor(stat(quantile))\n                       )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE\n  ) + labs( y = \"OCR\") +\n  scale_fill_manual(name = \"Quartiles\", values = quan_col) +\n  theme_ridges() + \n  xlim(0, 15000000) + theme(legend.position = \"none\", plot.margin = margin(10,10,10,10,\"mm\"), panel.background = element_rect(fill = \"white\"), plot.background = element_rect(fill = \"#FFCC99\"))\n\n\n\nCCR - Condo, EC, AptRCR - Condo, EC, AptOCR - Condo, EC, AptCCR - Terrace, Semi-D, DetachedRCR - Terrace, Semi-D, DetachedOCR - Terrace, Semi-D, Detached\n\n\n\n\nCode\nquan_ccr_grp1\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nquan_rcr_grp1\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nquan_ocr_grp1\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nquan_ccr_grp2\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nquan_rcr_grp2\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nquan_ocr_grp2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.3.2 - Unit Size distribution across the Property Type\nSteps taken:\n\nScatter Plot for preliminary analysis for any correlation between Transacted Price ($) and Area (SQFT)\nFurther breakdown into violin plots to identify the most common Area (SQFT) for each property type.\n\n\n\nCode\n# Scatter Plot to identify any correlation\nsize_plot &lt;- ggplot(data= realis_vis, \n                    aes(x= `Area (SQFT)` , \n                        y= `Transacted Price ($)`, \n                        color = `Property Type`)) + \n  geom_point() + \n  facet_grid(\"Region_type\", scale = \"free\") + \n  scale_color_manual(values = prop_col)+ \n  geom_smooth(linewidth=0.5)\n\n# Identifying Quartiles for Unit Size for Condo, EC, Apartment\napart_c_ec_vis &lt;- subset(realis_vis,  realis_vis$`Property Type` == c(\"Apartment\",\"Condominium\", \"Executive Condominium\"))\n\nquartiles_df &lt;- apart_c_ec_vis %&gt;% \n  group_by(`Property Type`) %&gt;%\n  summarise(\n    Q1 = quantile(`Area (SQFT)`, 0.25),\n    Q2 = quantile(`Area (SQFT)`, 0.5), # Median\n    Q3 = quantile(`Area (SQFT)`, 0.75)\n  )\n\n# Violin Plot for Condo, EC, Apt\nproperty_types &lt;- unique(apart_c_ec_vis$`Property Type`)\nproperty_type_positions &lt;- setNames(seq_along(property_types), property_types)\n\nquartiles_df$Position &lt;- with(quartiles_df, property_type_positions[as.character(`Property Type`)])\n\nsize_dist_grp1 &lt;- ggplot(apart_c_ec_vis, aes(x = `Property Type`, y = `Area (SQFT)`, fill = `Property Type`)) +\n  geom_violin(trim = FALSE) +\n  theme_light() +\n  facet_grid(\"Region_type\") +\n  scale_fill_manual(values = prop_col) +\n  labs(title = \"Violin Plot of Unit Size per house type\",\n       x = \"Property Type\",\n       y = \"Area (SQFT)\") +\n  coord_cartesian(ylim = c(0, 6000)) +\n  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +\n  geom_segment(data = quartiles_df, aes(x = Position - 0.4, xend = Position + 0.4, y = Q1, yend = Q1), \n               linetype = \"dashed\", color = \"darkgreen\", linewidth = 0.1) +\n  geom_segment(data = quartiles_df, aes(x = Position - 0.4, xend = Position + 0.4, y = Q2, yend = Q2), \n               linetype = \"solid\", color = \"black\", linewidth = 0.3) +\n  geom_segment(data = quartiles_df, aes(x = Position - 0.4, xend = Position + 0.4, y = Q3, yend = Q3), \n               linetype = \"dashed\", color = \"red\", linewidth = 0.1)\n\nt_sd_d_vis &lt;- subset(realis_vis,  realis_vis$`Property Type` == c(\"Terrace House\", \"Semi-Detached House\", \"Detached House\"))\n\nquartiles_2_df &lt;- t_sd_d_vis %&gt;% \n  group_by(`Property Type`) %&gt;%\n  summarise(\n    Q1 = quantile(`Area (SQFT)`, 0.25),\n    Q2 = quantile(`Area (SQFT)`, 0.5),\n    Q3 = quantile(`Area (SQFT)`, 0.75)\n  )\n\nproperty_types &lt;- unique(t_sd_d_vis$`Property Type`)\nproperty_type_positions &lt;- setNames(seq_along(property_types), property_types)\n\n# Identifying Quartiles for Unit Size for Terrace, Semi-D, Detached\nquartiles_2_df$Position &lt;- with(quartiles_2_df, property_type_positions[as.character(`Property Type`)])\n\n\n# Violin Plot for Terrace, Semi-D, Detached\nsize_dist_grp2 &lt;- ggplot(t_sd_d_vis, aes(x = `Property Type`, y = `Area (SQFT)`, fill = `Property Type`)) +\n  geom_violin(trim = FALSE) +\n   scale_fill_manual(values = prop_col) + \n  theme_light() + facet_grid(\"Region_type\") + \n  labs(title = \"Violin Plot of Unit Size per house type\",\n       x = \"Property Type\",\n       y = \"Area (SQFT)\") + \n  coord_cartesian(ylim = c(0,20000)) +\n  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +\n  geom_segment(data = quartiles_2_df, aes(x = Position - 0.4, xend = Position + 0.4, y = Q1, yend = Q1), \n               linetype = \"dashed\", color = \"darkgreen\", size = 0.1) +\n  geom_segment(data = quartiles_2_df, aes(x = Position - 0.4, xend = Position + 0.4, y = Q2, yend = Q2), \n               linetype = \"solid\", color = \"black\", size = 0.3) +\n  geom_segment(data = quartiles_2_df, aes(x = Position - 0.4, xend = Position + 0.4, y = Q3, yend = Q3), \n               linetype = \"dashed\", color = \"red\", size = 0.1)\n\n\n\nScatter Plot (Price vs Area)Violin Plot - Apt, EC, CondoSummary - Apt, EC, CondoViolin Plot - Terrace, Semi-D, DetachedSummary - Terrace, Semi-D, Detached\n\n\n\n\nCode\nsize_plot\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nsize_dist_grp1\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nkable(quartiles_df, caption = \"Breakdown of Unit Size by Quartiles (25%, 50%, 75%)\")\n\n\n\nBreakdown of Unit Size by Quartiles (25%, 50%, 75%)\n\n\nProperty Type\nQ1\nQ2\nQ3\nPosition\n\n\n\n\nApartment\n656.60\n807.30\n1119.46\n3\n\n\nCondominium\n731.95\n1022.58\n1302.44\n1\n\n\nExecutive Condominium\n968.76\n1065.64\n1227.10\n2\n\n\n\n\n\n\n\n\n\nCode\nsize_dist_grp2\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nkable(quartiles_2_df, caption = \"Breakdown of Unit Size by Quartiles (25%, 50%, 75%)\")\n\n\n\nBreakdown of Unit Size by Quartiles (25%, 50%, 75%)\n\n\nProperty Type\nQ1\nQ2\nQ3\nPosition\n\n\n\n\nDetached House\n4857.79\n6125.79\n8401.30\n3\n\n\nSemi-Detached House\n3202.29\n3685.59\n4201.19\n2\n\n\nTerrace House\n1701.79\n1989.19\n2638.26\n1\n\n\n\n\n\n\n\n\n\n\n\n3.4 Visualization 3 - Exploring Private Residential Sub markets\n\n\nInsights:\n\nMarine Parade, Bukit Timah and Ang Mo Kio (Including Lentor) has the most number of units sold from new launches. Large developments contribute substantially to the transaction during the period.\nPrice PSF varies greatly depending on the location of new launch, visibly linked to the region. E.g., Much higher $3218 PSF in Novena (CCR) vs $1300 PSF in Yishun (OCR).\nFor Marine Parade, excluding Grand Dunman and Tembusu Grand, the remaining $3396 PSF is attributed to Freehold Detached Unit sold.\nMost of the units that hit record prices belong to either new Condo and Apartment launches in CCR, or Semi-Detached and Detached houses in RCR and OCR.\nSemi-Detached and Detached of freehold status or built before 2000s are in high demand, possibly due to potential buy-back and redevelopment.\n\n\n\n3.4.1 - New Large Launches\nSteps taken:\n\nTo understand where are the hot location for new condo launches, the Number of Units sold was summed per Planning Area and the median price PSF was calculated.\nSubsequently, a bar chart was created to visualise the number of sales per planning region.\nTo highlight the contribution of the large new project launches to total sales per region, top 5 projects with highest units sold was highlighted within the bar chart.\nTo understand the “median price PSF” for each region, a dot plot was included in the secondary axis.\n\n\n\nCode\n# Suppose we're interested in highlighting these key projects:\nkey_projects &lt;- c(\"THE RESERVE RESIDENCES\", \"GRAND DUNMAN\", \"LENTOR HILLS RESIDENCES\", \"LENTOR MANSION\", \"TEMBUSU GRAND\")\n\n# Create a new column to identify key projects\nlarge_new_launch$key_project_indicator &lt;- ifelse(large_new_launch$`Project Name` %in% key_projects, large_new_launch$`Project Name`, \"Other\")\n\n# Create a summary of total sales by Planning Area and key project indicator\nsales_summary &lt;- large_new_launch %&gt;%\n  group_by(`Planning Area`, key_project_indicator) %&gt;%\n  summarize(total_units_sold = sum(total_sale),\n            median_psf = median(as.numeric(`Unit_Price_PSF`)))\n\nsales_summary$`Planning Area` &lt;- fct_reorder(sales_summary$`Planning Area`, sales_summary$total_units_sold, .desc = FALSE)\n\n# Bar Chart for Sales Summary of New Launches\nnew_launch_plot &lt;- ggplot(sales_summary, \n                          aes(x = `Planning Area`, y = total_units_sold, \n                              fill = key_project_indicator)) +\n  geom_col() + \n  geom_point(aes(y = median_psf *600000/3000), color = \"Black\") + \n  geom_text(aes(y = median_psf * 600000/3000, \n                label = median_psf), color = \"Black\",\n            size = 2, \n            nudge_y = 35000,nudge_x = 0.1, check_overlap = TRUE) +  \n  scale_y_continuous(sec.axis = sec_axis(~.*3000/600000)) + \n  coord_flip() +  # Flip the coordinates to make it a horizontal bar chart\n  scale_fill_manual(values = c(\"THE RESERVE RESIDENCES\" = \"#595B3C\", \n                               \"GRAND DUNMAN\" = \"#B67450\", \n                               \"LENTOR HILLS RESIDENCES\" = \"#D9D1C4\",\n                               \"LENTOR MANSION\" = \"#000000\",\n                               \"TEMBUSU GRAND\" = \"#A59D86\", \n                               \"Other\" = \"grey\")) +\n  labs(title = \"Breakdown of Large New Launches by Location\", x = \"Planning Area\", y = \"Total Units Sold\", fill = \"Project Name\") + theme(legend.position = \"none\")\n\n# Incorporate legend of color for selected projects\ntop_5_img &lt;- readPNG(\"images/Top 5.png\")\nimg_grob &lt;- rasterGrob(top_5_img, interpolate = TRUE)\nnew_launch_plot_2 &lt;- new_launch_plot + img_grob +\n  plot_layout(ncol = 2)\n\n\n\n\n3.3.2 - Luxury property (Top 2.5% of prices)\nSteps Taken:\n\nIdentify the transactions that are of high value (Top 2.5%)\nAs properties of high value are typically influenced by their remaining lifespan or freehold status, a new variable of age was created to categorise units based on the remaining lifespan.\nPlot a bar chart to show the distribution of luxury units by Property Type and color coded by Age.\nPlot a scatter plot with best fit line to demonstrate relationship of Transacted Price to Unit size across the various Region Type\n\n\n\nCode\nunits_per_reg_type &lt;- ind_high_val %&gt;%\n  group_by(`Region_type`, `Property Type`) %&gt;%\n  mutate(total_units = sum(`Number of Units`)) %&gt;%\n  ungroup()\n\n# Convert to category\nunits_per_reg_type &lt;- units_per_reg_type %&gt;% \n  mutate(age = case_when(\n    `Completion Date` == \"Uncompleted\" ~ \"Building\",\n    `Completion Date` == is.na(`Completion Date`) ~ \"Freehold / 999 Leasehold\",\n    (as.numeric(`Completion Date`) &gt;= 1950 &  as.numeric(`Completion Date`) &lt;= 1999) ~ \"Before 2000s\", \n    (as.numeric(`Completion Date`) &gt;= 2000 & as.numeric(`Completion Date`) &lt;= 2024) ~ \"After 2000s\"))\n\n\n# Arranging \nprop_order &lt;- c(\"Detached House\", \"Semi-Detached House\",\"Terrace House\", \"Condominium\", \"Apartment\", \"Executive Condominium\")\n\nunits_per_reg_type$`Property Type` &lt;- factor(units_per_reg_type$`Property Type`, levels = prop_order)\n\nreg_order &lt;- c(\"CCR\", \"RCR\", \"OCR\")\n\nunits_per_reg_type$`Region_type` &lt;- factor(units_per_reg_type$`Region_type`, levels = reg_order)\n\n\nage_order &lt;- c(\"Freehold / 999 Leasehold\", \"Before 2000s\", \"After 2000s\", \"Building\")\n\nunits_per_reg_type$`age` &lt;- factor(units_per_reg_type$`age`, levels = age_order)\n\n# Plot distribution of luxury property by property type and age\nage_col = c(\"Freehold / 999 Leasehold\" = \"#000000\", \n            \"Before 2000s\" = \"#7F5825\", \n            \"After 2000s\" = \"#F6B35C\" , \n            \"Building\" = \"#FAD7AA\")\n\ndist_luxury &lt;- ggplot(units_per_reg_type, aes(x = `Property Type`, y = `total_units`, fill = age)) +\n  geom_col() +\n  facet_grid(\"Region_type ~ .\", scales = \"free_y\") +\n  scale_fill_manual(values = age_col) +\n  labs(title = \"Number of Luxury Units per Property Type across Regions\", \n       x = \"Property Type\", \n       y = \"Number of Units Sold\") +\n  scale_x_discrete(labels = function(x) str_wrap(x, width = 5)) \n\n# Plot scatter plot of luxury property by price and unit size\nind_high_val$`Property Type` &lt;- factor(ind_high_val$`Property Type`, levels = prop_order)\n\nind_high_val$`Region_type` &lt;- factor(ind_high_val$`Region_type`, levels = reg_order)\n\nluxury_plot &lt;- ggplot(data=ind_high_val, \n                      aes(x= `Area (SQFT)` , \n                          y= `Transacted Price ($)`, \n                          col = `Property Type`)) + \n  geom_point() + \n  scale_color_manual(values = prop_col) +\n  facet_grid(\"Region_type\", \n             scale = \"free\")+ geom_smooth(linewidth=0.5) + \n  labs(title = \"Price vs Area (SQFT) for Luxury Property\")\n\n\n\nSummary of New LaunchesBreakdown of Large New Launches by LocationSummary of Luxury PropertiesNumber of Luxury Property Unit by RegionPrice vs Area (SQFT) of Luxury Property by Region\n\n\n\n\nCode\nkable(sales_summary)\n\n\n\n\n\nPlanning Area\nkey_project_indicator\ntotal_units_sold\nmedian_psf\n\n\n\n\nAng Mo Kio\nLENTOR HILLS RESIDENCES\n237169\n2107.0\n\n\nAng Mo Kio\nLENTOR MANSION\n167281\n2269.0\n\n\nAng Mo Kio\nOther\n34225\n2117.0\n\n\nBedok\nOther\n36540\n2085.0\n\n\nBukit Batok\nOther\n247789\n1502.0\n\n\nBukit Panjang\nOther\n130954\n2059.0\n\n\nBukit Timah\nOther\n76369\n2776.0\n\n\nBukit Timah\nTHE RESERVE RESIDENCES\n461041\n2474.0\n\n\nClementi\nOther\n1098\n1801.0\n\n\nGeylang\nOther\n108900\n2737.5\n\n\nHougang\nOther\n486\n2159.0\n\n\nJurong East\nOther\n120564\n2408.0\n\n\nMarine Parade\nGRAND DUNMAN\n410881\n2523.0\n\n\nMarine Parade\nOther\n486\n3396.0\n\n\nMarine Parade\nTEMBUSU GRAND\n151321\n2461.0\n\n\nNovena\nOther\n17256\n3218.0\n\n\nOutram\nOther\n21756\n2665.0\n\n\nQueenstown\nOther\n69962\n2517.0\n\n\nTampines\nOther\n36864\n1391.0\n\n\nYishun\nOther\n51984\n1300.5\n\n\n\n\n\n\n\n\n\nCode\nnew_launch_plot_2\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nkable(units_per_reg_type)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProject Name\nTransacted Price (\\()| Area (SQFT)| Unit Price (\\) PSF)\nSale Date\nAddress\nType of Sale\nType of Area\nArea (SQM)\nUnit Price ($ PSM)\nNett Price($)\nProperty Type\nNumber of Units\nTenure\nCompletion Date\nPurchaser Address Indicator\nPostal Code\nPostal District\nPostal Sector\nPlanning Region\nPlanning Area\nRegion_type\nyears\nstart_date\nend_date\nremaining_years\nyears_left\ntotal_units\nage\n\n\n\n\n\n\nFRANKEL ESTATE\n6765000\n3962.23\n1707\n2023-01-03\n72A FRANKEL AVENUE\nResale\nLand\n368.10\n18378\n-\nSemi-Detached House\n1\nFreehold\n1958\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nN.A.\n12600000\n5346.48\n2357\n2023-01-03\n8 PADANG CHANCERY\nResale\nLand\n496.70\n25367\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n278535\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nMIDTOWN MODERN\n14000000\n3272.26\n4278\n2023-01-04\n18 TAN QUEE LAN STREET #30-17\nNew Sale\nStrata\n304.00\n46053\n-\nApartment\n1\n99 yrs from 10/12/2019\nUncompleted\nPrivate\n188105\n7\n18\nCentral Region\nDowntown Core\nCCR\n99\n2019-12-10\n2118-12-10\n94\n94\n84\nBuilding\n\n\nSEA VIEW PARK\n6350000\n3399.27\n1868\n2023-01-05\n26 JALAN SEAVIEW\nResale\nLand\n315.80\n20108\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n438340\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nREGENCY PARK\n7700000\n3649.00\n2110\n2023-01-05\n9 NATHAN ROAD #17-04\nResale\nStrata\n339.00\n22714\n-\nCondominium\n1\nFreehold\n1990\nPrivate\n248730\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBefore 2000s\n\n\nTOMLINSON HEIGHTS\n10500000\n2744.82\n3825\n2023-01-05\n31 TOMLINSON ROAD #13-01\nResale\nStrata\n255.00\n41176\n-\nCondominium\n1\nFreehold\n2014\nPrivate\n247855\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\n3 ORCHARD BY-THE-PARK\n6400000\n1776.06\n3603\n2023-01-05\n3 ORCHARD BOULEVARD #05-02\nResale\nStrata\n165.00\n38788\n-\nCondominium\n1\nFreehold\n2017\nPrivate\n248653\n10\n24\nCentral Region\nOrchard\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nHILLTOPS\n6619000\n1550.02\n4270\n2023-01-06\n101 CAIRNHILL CIRCLE #16-15\nResale\nStrata\n144.00\n45965\n-\nCondominium\n1\nFreehold\n2011\nPrivate\n229809\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nKLIMT CAIRNHILL\n7720240\n2055.92\n3755\n2023-01-07\n71 CAIRNHILL ROAD #33-01\nNew Sale\nStrata\n191.00\n40420\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nCHIP HOCK GARDENS\n10500000\n3148.47\n3335\n2023-01-09\n18 JALAN HAROM SETANGKAI\nResale\nLand\n292.50\n35897\n-\nSemi-Detached House\n1\nFreehold\n2014\nPrivate\n258810\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nKLIMT CAIRNHILL\n9950000\n2368.08\n4202\n2023-01-09\n71 CAIRNHILL ROAD #31-03\nNew Sale\nStrata\n220.00\n45227\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nONE HOLLAND VILLAGE RESIDENCES\n7028000\n2088.22\n3366\n2023-01-10\n5 HOLLAND VILLAGE WAY #25-18\nNew Sale\nStrata\n194.00\n36227\n-\nApartment\n1\n99 yrs from 13/08/2018\nUncompleted\nPrivate\n275754\n10\n27\nCentral Region\nQueenstown\nCCR\n99\n2018-08-13\n2117-08-13\n93\n93\n84\nBuilding\n\n\nKLIMT CAIRNHILL\n9750000\n2368.08\n4117\n2023-01-10\n71 CAIRNHILL ROAD #33-03\nNew Sale\nStrata\n220.00\n44318\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nKLIMT CAIRNHILL\n9800000\n2368.08\n4138\n2023-01-11\n71 CAIRNHILL ROAD #29-03\nNew Sale\nStrata\n220.00\n44545\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nKLIMT CAIRNHILL\n7780000\n2055.92\n3784\n2023-01-12\n71 CAIRNHILL ROAD #34-01\nNew Sale\nStrata\n191.00\n40733\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nMOUNT SINAI\n7200000\n2514.47\n2863\n2023-01-12\n17A MOUNT SINAI CRESCENT\nResale\nLand\n233.60\n30822\n-\nSemi-Detached House\n1\n999 yrs from 22/09/1885\n2022\nPrivate\n277088\n10\n27\nCentral Region\nBukit Timah\nCCR\n999\n1885-09-22\n2884-09-22\n860\n860\n80\nAfter 2000s\n\n\nSEMBAWANG SPRINGS ESTATE\n6580000\n6517.60\n1010\n2023-01-12\n42 JALAN MALU-MALU\nResale\nLand\n605.50\n10867\n-\nDetached House\n1\n999 yrs from 26/03/1885\n2003\nPrivate\n769356\n27\n76\nNorth Region\nSembawang\nOCR\n999\n1885-03-26\n2884-03-26\n860\n860\n45\nAfter 2000s\n\n\nSERANGOON GARDEN ESTATE\n6380000\n2809.40\n2271\n2023-01-13\n78 BRAEMAR DRIVE\nResale\nLand\n261.00\n24444\n-\nTerrace House\n1\n999 yrs from 01/01/1955\n2020\nPrivate\n554920\n19\n55\nNorth East Region\nSerangoon\nOCR\n999\n1955-01-01\n2954-01-01\n930\n930\n8\nAfter 2000s\n\n\nKIM LIN PARK\n15050000\n4867.48\n3092\n2023-01-16\n28 JALAN KELAWAR\nResale\nLand\n452.20\n33282\n-\nDetached House\n1\nFreehold\n1999\nPrivate\n249264\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nAIRVIEW PARK\n7750000\n3150.73\n2460\n2023-01-16\n59C YUK TONG AVENUE\nNew Sale\nLand\n292.71\n26477\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nPrivate\n596332\n21\n59\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nBuilding\n\n\nORCHID VILLAGE\n12000000\n3555.35\n3375\n2023-01-16\n6B VANDA DRIVE\nNew Sale\nLand\n330.30\n36331\n-\nSemi-Detached House\n1\nFreehold\n2023\nPrivate\n287811\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nN.A.\n7100000\n6538.05\n1086\n2023-01-17\n305 JOO CHIAT PLACE\nResale\nLand\n607.40\n11689\n-\nSemi-Detached House\n1\nFreehold\n1982\nPrivate\n278535\n15\n42\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nKLIMT CAIRNHILL\n9700000\n2368.08\n4096\n2023-01-18\n71 CAIRNHILL ROAD #30-03\nNew Sale\nStrata\n220.00\n44091\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nN.A.\n11100000\n10279.62\n1080\n2023-01-18\n22 LIM AH PIN ROAD\nResale\nLand\n955.00\n11623\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n19\n54\nNorth East Region\nHougang\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nNA\n\n\nMONDO MANSION BUILDING\n6280000\n5489.64\n1144\n2023-01-18\n543,543A,545,545A UPPER SERANGOON ROAD\nResale\nStrata\n510.00\n12314\n-\nApartment\n4\nFreehold\n1976\nPrivate\n534553\n19\n53\nNorth East Region\nSerangoon\nOCR\nNA\nNA\nNA\nNA\nFreehold\n5\nBefore 2000s\n\n\nBOULEVARD VUE\n15500000\n4424.00\n3504\n2023-01-18\n11 CUSCADEN WALK #06-01\nResale\nStrata\n411.00\n37713\n-\nCondominium\n1\nFreehold\n2013\nPrivate\n249697\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n7450000\n4182.89\n1781\n2023-01-18\n18 SALLIM ROAD\nSub Sale\nLand\n388.60\n19171\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nPrivate\n278535\n14\n38\nCentral Region\nGeylang\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBuilding\n\n\nKLIMT CAIRNHILL\n7680000\n2055.92\n3736\n2023-01-19\n71 CAIRNHILL ROAD #32-01\nNew Sale\nStrata\n191.00\n40209\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nMARTIN NO 38\n7500000\n3659.76\n2049\n2023-01-19\n38 MARTIN ROAD #15-05\nResale\nStrata\n340.00\n22059\n-\nApartment\n1\nFreehold\n2011\nPrivate\n239059\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nEDEN RESIDENCES CAPITOL\n10966600\n3056.98\n3587\n2023-01-19\n11 STAMFORD ROAD #06-04\nResale\nStrata\n284.00\n38615\n-\nApartment\n1\n99 yrs from 24/01/2011\n2016\nPrivate\n178884\n6\n17\nCentral Region\nDowntown Core\nCCR\n99\n2011-01-24\n2110-01-24\n85\n85\n84\nAfter 2000s\n\n\nDALVEY HAUS\n16280000\n4660.81\n3493\n2023-01-19\n101 DALVEY ROAD #01-01\nNew Sale\nStrata\n433.00\n37598\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n259514\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nN.A.\n55500000\n25680.75\n2161\n2023-01-19\n61 WILKINSON ROAD\nResale\nLand\n2385.80\n23263\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nKLIMT CAIRNHILL\n7680000\n2055.92\n3736\n2023-01-20\n71 CAIRNHILL ROAD #31-01\nNew Sale\nStrata\n191.00\n40209\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nKLIMT CAIRNHILL\n7680000\n2055.92\n3736\n2023-01-20\n71 CAIRNHILL ROAD #30-01\nNew Sale\nStrata\n191.00\n40209\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nKLIMT CAIRNHILL\n7680000\n2055.92\n3736\n2023-01-20\n71 CAIRNHILL ROAD #29-01\nNew Sale\nStrata\n191.00\n40209\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nN.A.\n6539400\n2418.67\n2704\n2023-01-20\n6A HAIG LANE\nNew Sale\nLand\n224.70\n29103\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nSELETAR HILLS ESTATE\n6900000\n3506.91\n1968\n2023-01-25\n71 JALAN REDOP\nResale\nLand\n325.80\n21179\n-\nSemi-Detached House\n1\n999 yrs from 01/01/1879\n-\nPrivate\n807079\n28\n80\nNorth East Region\nSerangoon\nOCR\n999\n1879-01-01\n2878-01-01\n854\n854\n40\nNA\n\n\nEDEN PARK\n11000000\n5224.85\n2105\n2023-01-25\n11A REDWOOD AVENUE\nResale\nLand\n485.40\n22662\n-\nDetached House\n1\nFreehold\n-\nPrivate\n276721\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nKLIMT CAIRNHILL\n7720000\n2055.92\n3755\n2023-01-26\n71 CAIRNHILL ROAD #28-01\nNew Sale\nStrata\n191.00\n40419\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nN.A.\n10200000\n10640.21\n959\n2023-01-26\n20 LORONG J TELOK KURAU\nResale\nLand\n988.50\n10319\n-\nDetached House\n1\nFreehold\n1979\nPrivate\n278535\n15\n42\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nFOUR SEASONS PARK\n7250000\n2260.44\n3207\n2023-01-26\n10 CUSCADEN WALK #10-03\nResale\nStrata\n210.00\n34524\n-\nCondominium\n1\nFreehold\n1994\nPrivate\n249693\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBefore 2000s\n\n\nGREEN HILL ESTATE\n7268000\n5998.78\n1212\n2023-01-26\n7 CHESTNUT CLOSE\nResale\nLand\n557.30\n13041\n-\nDetached House\n1\nFreehold\n-\nPrivate\n678501\n23\n67\nWest Region\nBukit Panjang\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nNA\n\n\nBAN GUAN PARK\n8250000\n3589.79\n2298\n2023-01-26\n44 GREENLEAF DRIVE\nResale\nLand\n333.50\n24738\n-\nSemi-Detached House\n1\nFreehold\n2000\nPrivate\n279251\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nONE TREE HILL COLLECTION\n8388000\n2233.53\n3755\n2023-01-26\n62 JALAN ARNAP\nResale\nLand\n207.50\n40424\n-\nSemi-Detached House\n1\nFreehold\n2021\nPrivate\n249374\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nARDMORE THREE\n6950000\n1743.77\n3986\n2023-01-27\n3 ARDMORE PARK #35-03\nResale\nStrata\n162.00\n42901\n-\nCondominium\n1\nFreehold\n2014\nPrivate\n259950\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nKLIMT CAIRNHILL\n7700000\n2055.92\n3745\n2023-01-28\n71 CAIRNHILL ROAD #27-01\nNew Sale\nStrata\n191.00\n40314\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nN.A.\n12800000\n5292.66\n2418\n2023-01-30\n2 LUTHERAN ROAD\nResale\nLand\n491.70\n26032\n-\nDetached House\n1\nFreehold\n2005\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nLEEDON RESIDENCE\n7200000\n2658.71\n2708\n2023-01-30\n12 LEEDON HEIGHTS #09-14\nResale\nStrata\n247.00\n29150\n-\nCondominium\n1\nFreehold\n2015\nPrivate\n266220\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nRIVERGATE\n6230000\n2077.45\n2999\n2023-01-31\n97 ROBERTSON QUAY #27-08\nResale\nStrata\n193.00\n32280\n-\nApartment\n1\nFreehold\n2009\nPrivate\n238255\n9\n23\nCentral Region\nSingapore River\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nN.A.\n7530000\n3588.72\n2098\n2023-01-31\n4H SWANAGE ROAD\nResale\nLand\n333.40\n22585\n-\nTerrace House\n1\nFreehold\n1981\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nBefore 2000s\n\n\nKLIMT CAIRNHILL\n7700000\n2055.92\n3745\n2023-01-31\n71 CAIRNHILL ROAD #26-01\nNew Sale\nStrata\n191.00\n40314\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nSEMBAWANG SPRINGS ESTATE\n7330000\n5714.61\n1283\n2023-01-31\n9 JALAN SHAER\nResale\nLand\n530.90\n13807\n-\nDetached House\n1\nFreehold\n2016\nPrivate\n769356\n27\n76\nNorth Region\nSembawang\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nAfter 2000s\n\n\nSKYLINE @ ORCHARD BOULEVARD\n20234000\n3767.40\n5371\n2023-02-01\n23 ANGULLIA PARK #31-01\nResale\nStrata\n350.00\n57811\n-\nApartment\n1\nFreehold\n2015\nPrivate\n239975\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nDRAYCOTT EIGHT\n8680000\n4014.97\n2162\n2023-02-01\n10 DRAYCOTT PARK #24-08\nResale\nStrata\n373.00\n23271\n-\nCondominium\n1\n99 yrs from 24/10/1997\n2005\nPrivate\n259403\n10\n25\nCentral Region\nNewton\nCCR\n99\n1997-10-24\n2096-10-24\n72\n72\n170\nAfter 2000s\n\n\nPATERSON SUITES\n11850000\n4843.80\n2446\n2023-02-01\n55 PATERSON ROAD #21-03\nResale\nStrata\n450.00\n26333\n-\nCondominium\n1\nFreehold\n2010\nPrivate\n238550\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n9200000\n4492.89\n2048\n2023-02-03\n26 PUAY HEE AVENUE\nNew Sale\nLand\n417.40\n22041\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n13\n34\nCentral Region\nToa Payoh\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nKLIMT CAIRNHILL\n6960000\n2055.92\n3385\n2023-02-04\n71 CAIRNHILL ROAD #07-01\nNew Sale\nStrata\n191.00\n36440\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nKLIMT CAIRNHILL\n7500000\n2055.92\n3648\n2023-02-05\n71 CAIRNHILL ROAD #17-01\nNew Sale\nStrata\n191.00\n39267\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nN.A.\n15000000\n5472.42\n2741\n2023-02-06\n2B EAST COAST TERRACE\nResale\nLand\n508.40\n29504\n-\nDetached House\n1\nFreehold\n2022\nPrivate\n278535\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nMARTIN NO 38\n9218808\n4391.71\n2099\n2023-02-06\n38 MARTIN ROAD #15-08\nResale\nStrata\n408.00\n22595\n-\nApartment\n1\nFreehold\n2011\nPrivate\n239059\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nTHE JARDINE RESIDENCES\n6499000\n2680.24\n2425\n2023-02-06\n295 LORONG CHUAN\nNew Sale\nLand\n249.00\n26100\n-\nTerrace House\n1\nFreehold\nUncompleted\nN.A\n556780\n19\n55\nNorth East Region\nSerangoon\nOCR\nNA\nNA\nNA\nNA\nFreehold\n8\nBuilding\n\n\nDUKE’S GARDEN\n9300000\n3778.16\n2462\n2023-02-07\n12A PRINCESS OF WALES ROAD\nResale\nLand\n351.00\n26496\n-\nSemi-Detached House\n1\n999 yrs from 27/12/1875\n1980\nPrivate\n266912\n10\n26\nCentral Region\nBukit Timah\nCCR\n999\n1875-12-27\n2874-12-27\n851\n851\n80\nBefore 2000s\n\n\nKLIMT CAIRNHILL\n7650000\n2055.92\n3721\n2023-02-07\n71 CAIRNHILL ROAD #23-01\nNew Sale\nStrata\n191.00\n40052\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nGRANGE INFINITE\n7180000\n2701.76\n2658\n2023-02-07\n27 GRANGE ROAD #25-02\nResale\nStrata\n251.00\n28606\n-\nCondominium\n1\nFreehold\n2011\nPrivate\n239700\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n16000000\n4710.97\n3396\n2023-02-07\n91 GOODMAN ROAD\nNew Sale\nLand\n437.66\n36558\n-\nDetached House\n1\nFreehold\nUncompleted\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBuilding\n\n\nARDMORE II\n6280000\n2023.63\n3103\n2023-02-08\n1 ARDMORE PARK #08-02\nResale\nStrata\n188.00\n33404\n-\nCondominium\n1\nFreehold\n2010\nPrivate\n259962\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nEDEN PARK\n10000000\n5506.86\n1816\n2023-02-08\n22 CYPRESS AVENUE\nResale\nLand\n511.60\n19547\n-\nDetached House\n1\nFreehold\n1994\nPrivate\n276721\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nEDEN RESIDENCES CAPITOL\n10700000\n3067.74\n3488\n2023-02-10\n11 STAMFORD ROAD #05-04\nResale\nStrata\n285.00\n37544\n-\nApartment\n1\n99 yrs from 24/01/2011\n2016\nPrivate\n178884\n6\n17\nCentral Region\nDowntown Core\nCCR\n99\n2011-01-24\n2110-01-24\n85\n85\n84\nAfter 2000s\n\n\nPARK NOVA\n6258000\n1431.61\n4371\n2023-02-10\n18 TOMLINSON ROAD #08-02\nNew Sale\nStrata\n133.00\n47053\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n247858\n10\n24\nCentral Region\nOrchard\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nKLIMT CAIRNHILL\n7680000\n2055.92\n3736\n2023-02-12\n71 CAIRNHILL ROAD #25-01\nNew Sale\nStrata\n191.00\n40209\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nBOTANIC @ CLUNY PARK\n9000000\n6157.01\n1462\n2023-02-13\n67 CLUNY PARK ROAD\nSub Sale\nStrata\n572.00\n15734\n-\nDetached House\n1\nFreehold\nUncompleted\nPrivate\n257497\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBuilding\n\n\nBRIGHTHILL RESIDENCES\n7600000\n3831.98\n1983\n2023-02-13\n11C BRIGHT HILL CRESCENT\nNew Sale\nLand\n356.00\n21348\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nN.A\n579578\n20\n57\nCentral Region\nBishan\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBuilding\n\n\nLEEDON RESIDENCE\n7350000\n2647.94\n2776\n2023-02-14\n6 LEEDON HEIGHTS #09-06\nResale\nStrata\n246.00\n29878\n-\nCondominium\n1\nFreehold\n2015\nPrivate\n266220\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nTHE AVENIR\n6736000\n2066.69\n3259\n2023-02-14\n10 RIVER VALLEY CLOSE #04-10\nNew Sale\nStrata\n192.00\n35083\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n238432\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nLES MAISONS NASSIM\n36000000\n6286.18\n5727\n2023-02-14\n14B NASSIM ROAD #04-02\nNew Sale\nStrata\n584.00\n61644\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n257470\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nKLIMT CAIRNHILL\n27500000\n5920.20\n4645\n2023-02-14\n71 CAIRNHILL ROAD #35-01\nNew Sale\nStrata\n550.00\n50000\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nLANDED HOUSING DEVELOPMENT\n9578800\n2488.64\n3849\n2023-02-14\n27 MOUNT ROSIE ROAD\nNew Sale\nStrata\n231.20\n41431\n-\nTerrace House\n1\nFreehold\nUncompleted\nPrivate\n308942\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n15\nBuilding\n\n\nLANDED HOUSING DEVELOPMENT\n7480000\n2174.33\n3440\n2023-02-14\n10 BO SENG AVENUE\nNew Sale\nLand\n202.00\n37030\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nN.A\n308942\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBuilding\n\n\nN.A.\n9700000\n5471.34\n1773\n2023-02-14\n10 BOSCOMBE ROAD\nResale\nLand\n508.30\n19083\n-\nDetached House\n1\nFreehold\n1964\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nTHE VERMONT ON CAIRNHILL\n7900000\n3466.01\n2279\n2023-02-14\n12 CAIRNHILL RISE #19-01\nResale\nStrata\n322.00\n24534\n-\nApartment\n1\nFreehold\n2013\nPrivate\n229747\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nN.A.\n8000000\n4999.88\n1600\n2023-02-15\n29A JALAN SENANG\nResale\nLand\n464.50\n17223\n-\nDetached House\n1\nFreehold\n2003\nPrivate\n278535\n14\n41\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nN.A.\n17080000\n5054.77\n3379\n2023-02-15\n132 CORONATION ROAD\nResale\nLand\n469.60\n36371\n-\nDetached House\n1\n999 yrs from 27/12/1875\n-\nHDB\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\n999\n1875-12-27\n2874-12-27\n851\n851\n78\nNA\n\n\nFRANKEL ESTATE\n8800000\n3962.23\n2221\n2023-02-16\n43 DUNBAR WALK\nResale\nLand\n368.10\n23907\n-\nSemi-Detached House\n1\nFreehold\n2013\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nAfter 2000s\n\n\nFABER HILLS\n8000000\n6105.34\n1310\n2023-02-16\n18 FABER GROVE\nResale\nLand\n567.20\n14104\n-\nSemi-Detached House\n1\nFreehold\n1977\nPrivate\n128951\n5\n12\nWest Region\nClementi\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nSEASCAPE\n6280000\n2970.86\n2114\n2023-02-17\n59 COVE WAY #05-19\nResale\nStrata\n276.00\n22754\n-\nCondominium\n1\n99 yrs from 09/06/2007\n2011\nPrivate\n098309\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2007-06-09\n2106-06-09\n82\n82\n170\nAfter 2000s\n\n\nSKYLINE 360 @ SAINT THOMAS WALK\n10200000\n3928.86\n2596\n2023-02-17\n68 ST. THOMAS WALK #31-01\nResale\nStrata\n365.00\n27945\n-\nCondominium\n1\nFreehold\n2012\nPrivate\n238142\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n12800000\n7209.73\n1775\n2023-02-17\n26 SUNSET PLACE\nResale\nLand\n669.80\n19110\n-\nDetached House\n1\nFreehold\n1991\nPrivate\n278535\n21\n59\nWest Region\nClementi\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nBefore 2000s\n\n\nN.A.\n7855000\n3176.46\n2473\n2023-02-20\n2 PRINCE OF WALES ROAD\nResale\nLand\n295.10\n26618\n-\nSemi-Detached House\n1\nFreehold\n2000\nHDB\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nYEW LIAN PARK\n8700000\n5798.57\n1500\n2023-02-20\n87 TAMAN PERMATA\nResale\nLand\n538.70\n16150\n-\nDetached House\n1\nFreehold\n2006\nPrivate\n575144\n20\n57\nCentral Region\nBishan\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nARDMORE PARK\n11100000\n2884.75\n3848\n2023-02-20\n11 ARDMORE PARK #19-04\nResale\nStrata\n268.00\n41418\n-\nCondominium\n1\nFreehold\n2001\nPrivate\n259957\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nSOUTH BEACH RESIDENCES\n8630000\n1915.99\n4504\n2023-02-20\n28 BEACH ROAD #38-06\nResale\nStrata\n178.00\n48483\n-\nApartment\n1\n99 yrs from 10/12/2007\n2016\nPrivate\n189762\n7\n18\nCentral Region\nDowntown Core\nCCR\n99\n2007-12-10\n2106-12-10\n82\n82\n84\nAfter 2000s\n\n\nBUCKLEY CLASSIQUE\n6480000\n3562.88\n1819\n2023-02-20\n11 BUCKLEY ROAD #05-11\nResale\nStrata\n331.00\n19577\n-\nCondominium\n1\nFreehold\n2014\nPrivate\n309767\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n7900000\n3356.22\n2354\n2023-02-21\n99 CORONATION ROAD WEST\nResale\nLand\n311.80\n25337\n-\nSemi-Detached House\n1\nFreehold\n-\nHDB\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nST REGIS RESIDENCES SINGAPORE\n6320000\n2594.12\n2436\n2023-02-23\n33 TANGLIN ROAD #07-05\nResale\nStrata\n241.00\n26224\n-\nApartment\n1\n999 yrs from 24/11/1995\n2008\nPrivate\n247913\n10\n24\nCentral Region\nOrchard\nCCR\n999\n1995-11-24\n2994-11-24\n971\n971\n84\nAfter 2000s\n\n\nLEONIE TOWERS\n6300000\n3250.73\n1938\n2023-02-24\n28 LEONIE HILL #22-28\nResale\nStrata\n302.00\n20861\n-\nApartment\n1\nFreehold\n1976\nPrivate\n239222\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBefore 2000s\n\n\nN.A.\n26500000\n29201.66\n907\n2023-02-24\n100B ENG NEO AVENUE\nResale\nLand\n2712.90\n9768\n-\nDetached House\n1\n99 yrs from 26/02/2008\n2011\nPrivate\n278535\n11\n28\nCentral Region\nBukit Timah\nCCR\n99\n2008-02-26\n2107-02-26\n82\n82\n78\nAfter 2000s\n\n\nUNIT 8\n6700000\n4004.21\n1673\n2023-02-24\n71 HOLLAND ROAD #01-02\nResale\nStrata\n372.00\n18011\n-\nApartment\n1\nFreehold\n1984\nPrivate\n258869\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBefore 2000s\n\n\nREFLECTIONS AT KEPPEL BAY\n8194000\n3756.64\n2181\n2023-02-24\n17 KEPPEL BAY VIEW #01-58\nResale\nStrata\n349.00\n23479\n-\nCondominium\n1\n99 yrs from 15/03/2006\n2011\nPrivate\n098419\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2006-03-15\n2105-03-15\n80\n80\n170\nAfter 2000s\n\n\nCORAL ISLAND\n36500000\n13434.55\n2717\n2023-02-25\n22 CORAL ISLAND\nResale\nLand\n1248.10\n29244\n-\nDetached House\n1\n99 yrs from 27/02/2005\n2007\nPrivate\n098552\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2005-02-27\n2104-02-27\n79\n79\n78\nAfter 2000s\n\n\nSERENE PARK\n8700000\n4486.44\n1939\n2023-02-27\n32 TAMARIND ROAD\nResale\nLand\n416.80\n20873\n-\nDetached House\n1\nFreehold\n2019\nPrivate\n806041\n28\n80\nNorth East Region\nSerangoon\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nAfter 2000s\n\n\nN.A.\n20500000\n10459.38\n1960\n2023-02-27\n4 JALAN KAMPONG CHANTEK\nResale\nLand\n971.70\n21097\n-\nDetached House\n1\nFreehold\n2020\nPrivate\n278535\n21\n58\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nAfter 2000s\n\n\nNASSIM PARK RESIDENCES\n20500000\n4284.07\n4785\n2023-02-27\n21 NASSIM ROAD #02-21\nResale\nStrata\n398.00\n51508\n-\nCondominium\n1\nFreehold\n2011\nPrivate\n258462\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nCORALS AT KEPPEL BAY\n7190000\n2680.24\n2683\n2023-02-27\n3 KEPPEL BAY DRIVE #05-05\nResale\nStrata\n249.00\n28876\n-\nCondominium\n1\n99 yrs from 26/02/2007\n2016\nPrivate\n098013\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2007-02-26\n2106-02-26\n81\n81\n170\nAfter 2000s\n\n\nTHE ORCHARD RESIDENCES\n6700000\n2174.33\n3081\n2023-02-27\n238 ORCHARD BOULEVARD #35-08\nResale\nStrata\n202.00\n33168\n-\nApartment\n1\n99 yrs from 13/03/2006\n2010\nPrivate\n237973\n9\n23\nCentral Region\nOrchard\nCCR\n99\n2006-03-13\n2105-03-13\n80\n80\n84\nAfter 2000s\n\n\nMING TECK PARK\n11300000\n7580.01\n1491\n2023-02-27\n9 MING TECK PARK\nResale\nLand\n704.20\n16047\n-\nDetached House\n1\n999 yrs from 01/09/1876\n-\nPrivate\n276612\n10\n27\nCentral Region\nBukit Timah\nCCR\n999\n1876-09-01\n2875-09-01\n851\n851\n78\nNA\n\n\nCLEMENTI PARK\n12800000\n6025.69\n2124\n2023-02-28\n5 SUNSET SQUARE\nResale\nLand\n559.80\n22865\n-\nDetached House\n1\nFreehold\n2010\nPrivate\n597159\n21\n59\nWest Region\nClementi\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nAfter 2000s\n\n\nKLIMT CAIRNHILL\n7530000\n2055.92\n3663\n2023-02-28\n71 CAIRNHILL ROAD #21-01\nNew Sale\nStrata\n191.00\n39424\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nREIGNWOOD HAMILTON SCOTTS\n8500000\n2755.58\n3085\n2023-02-28\n37 SCOTTS ROAD #02-01\nResale\nStrata\n256.00\n33203\n-\nApartment\n1\nFreehold\n2012\nPrivate\n228229\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nFRANKEL ESTATE\n6300000\n3371.93\n1868\n2023-02-28\n111B SIGLAP ROAD\nNew Sale\nLand\n313.26\n20111\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nHDB\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBuilding\n\n\nVAUGHAN GARDEN\n6300000\n6646.77\n948\n2023-02-28\n16 VAUGHAN ROAD\nResale\nLand\n617.50\n10202\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n358101\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nSENTOSA COVE\n17388888\n7868.48\n2210\n2023-02-28\n104 COVE DRIVE\nResale\nLand\n731.00\n23788\n-\nDetached House\n1\n99 yrs from 24/07/2007\n2011\nPrivate\n098220\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2007-07-24\n2106-07-24\n82\n82\n78\nAfter 2000s\n\n\nBRADDELL HEIGHTS ESTATE\n19000000\n15701.45\n1210\n2023-03-01\n20 CLIFTON VALE\nResale\nLand\n1458.70\n13025\n-\nDetached House\n1\nFreehold\n-\nPrivate\n357708\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nSEMBAWANG HILLS ESTATE\n7600000\n2862.15\n2655\n2023-03-01\n27 OLD UPPER THOMSON ROAD\nResale\nLand\n265.90\n28582\n-\nSemi-Detached House\n1\nFreehold\n-\nHDB\n575848\n20\n57\nNorth East Region\nAng Mo Kio\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nNASSIM 9\n9500000\n2755.58\n3448\n2023-03-01\n9 NASSIM ROAD #03-02\nResale\nStrata\n256.00\n37109\n-\nApartment\n1\nFreehold\n2002\nPrivate\n258376\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nN.A.\n9250000\n8119.29\n1139\n2023-03-01\n6 ROSYTH AVENUE\nResale\nLand\n754.30\n12263\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n19\n54\nNorth East Region\nHougang\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nNA\n\n\nFRANKEL ESTATE\n6900000\n4067.72\n1696\n2023-03-02\n22 ETTRICK TERRACE\nResale\nLand\n377.90\n18259\n-\nDetached House\n1\nFreehold\n1955\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nHILLVIEW GARDEN ESTATE\n11200000\n10044.96\n1115\n2023-03-02\n76 JALAN DERMAWAN\nResale\nLand\n933.20\n12002\n-\nDetached House\n1\nFreehold\n-\nPrivate\n668606\n23\n66\nWest Region\nBukit Batok\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nNA\n\n\nCAPITOL PARK\n18000000\n7945.98\n2265\n2023-03-02\n15 JALAN SEJARAH\nResale\nLand\n738.20\n24384\n-\nDetached House\n1\nFreehold\n1975\nPrivate\n297893\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nLEEDON RESIDENCE\n9500000\n3745.87\n2536\n2023-03-02\n24 LEEDON HEIGHTS #12-33\nResale\nStrata\n348.00\n27299\n-\nCondominium\n1\nFreehold\n2015\nPrivate\n266220\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nSENTOSA COVE\n14000000\n7857.72\n1782\n2023-03-02\n102 COVE DRIVE\nResale\nLand\n730.00\n19178\n-\nDetached House\n1\n99 yrs from 10/09/2007\n2011\nPrivate\n098220\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2007-09-10\n2106-09-10\n82\n82\n78\nAfter 2000s\n\n\nHOCK SENG PARK\n9100000\n3050.52\n2983\n2023-03-02\n34 JALAN JAMBU AYER\nNew Sale\nLand\n283.40\n32110\n-\nSemi-Detached House\n1\nFreehold\n2020\nPrivate\n588686\n21\n58\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nAfter 2000s\n\n\nKLIMT CAIRNHILL\n7000000\n2055.92\n3405\n2023-03-03\n71 CAIRNHILL ROAD #09-01\nNew Sale\nStrata\n191.00\n36649\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nSEASCAPE\n6380000\n2970.86\n2148\n2023-03-03\n59 COVE WAY #02-19\nResale\nStrata\n276.00\n23116\n-\nCondominium\n1\n99 yrs from 09/06/2007\n2011\nPrivate\n098309\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2007-06-09\n2106-06-09\n82\n82\n170\nAfter 2000s\n\n\nN.A.\n6500000\n2877.22\n2259\n2023-03-03\n4 HOOT KIAM ROAD\nResale\nLand\n267.30\n24317\n-\nTerrace House\n1\nFreehold\n-\nHDB\n278535\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n15\nNA\n\n\nN.A.\n15700000\n4798.59\n3272\n2023-03-03\n11 JALAN MERLIMAU\nNew Sale\nLand\n445.80\n35218\n-\nDetached House\n1\nFreehold\n-\nHDB\n278535\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nN.A.\n18500000\n8761.90\n2111\n2023-03-03\n18 LAKESHORE VIEW\nResale\nLand\n814.00\n22727\n-\nDetached House\n1\n99 yrs from 09/05/2006\n2010\nPrivate\n278535\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2006-05-09\n2105-05-09\n81\n81\n78\nAfter 2000s\n\n\nEDEN PARK\n14688000\n5224.85\n2811\n2023-03-03\n11 REDWOOD AVENUE\nResale\nLand\n485.40\n30260\n-\nDetached House\n1\nFreehold\n2009\nHDB\n276721\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nN.A.\n11100000\n7992.27\n1389\n2023-03-03\n61 LORONG H TELOK KURAU\nResale\nLand\n742.50\n14949\n-\nDetached House\n1\nFreehold\n2001\nPrivate\n278535\n15\n42\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nN.A.\n18500000\n7576.78\n2442\n2023-03-03\n74 OCEAN DRIVE\nResale\nLand\n703.90\n26282\n-\nDetached House\n1\n99 yrs from 05/12/2005\n2008\nPrivate\n278535\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2005-12-05\n2104-12-05\n80\n80\n78\nAfter 2000s\n\n\nONE CHANCERY\n8450000\n2610.27\n3237\n2023-03-03\n1C CHANCERY LANE\nNew Sale\nLand\n242.50\n34845\n-\nTerrace House\n1\n999 yrs from 17/12/1883\n-\nPrivate\n309489\n11\n30\nCentral Region\nNovena\nCCR\n999\n1883-12-17\n2882-12-17\n859\n859\n15\nNA\n\n\nN.A.\n14500000\n5322.80\n2724\n2023-03-06\n18B FORT ROAD\nResale\nLand\n494.50\n29323\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nREFLECTIONS AT KEPPEL BAY\n17000000\n6835.14\n2487\n2023-03-06\n21 KEPPEL BAY VIEW #06-67\nResale\nStrata\n635.00\n26772\n-\nCondominium\n1\n99 yrs from 15/03/2006\n2011\nPrivate\n098419\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2006-03-15\n2105-03-15\n80\n80\n170\nAfter 2000s\n\n\nREFLECTIONS AT KEPPEL BAY\n8000000\n3390.66\n2359\n2023-03-06\n9 KEPPEL BAY VIEW #04-39\nResale\nStrata\n315.00\n25397\n-\nCondominium\n1\n99 yrs from 15/03/2006\n2011\nPrivate\n098419\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2006-03-15\n2105-03-15\n80\n80\n170\nAfter 2000s\n\n\nN.A.\n6550000\n4521.96\n1448\n2023-03-06\n231 TEMBELING ROAD\nResale\nLand\n420.10\n15592\n-\nSemi-Detached House\n1\nFreehold\n1986\nPrivate\n278535\n15\n42\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nORCHID VILLAGE\n21000000\n9463.71\n2219\n2023-03-06\n21 VANDA CRESCENT\nResale\nLand\n879.20\n23885\n-\nDetached House\n1\nFreehold\n2015\nPrivate\n287811\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nTHOMSON RIDGE\n7208888\n5290.51\n1363\n2023-03-06\n100 THOMSON RIDGE\nResale\nLand\n491.50\n14667\n-\nDetached House\n1\nFreehold\n-\nPrivate\n574671\n20\n57\nCentral Region\nBishan\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nONE CHANCERY\n7358000\n1651.20\n4456\n2023-03-06\n1B CHANCERY LANE\nNew Sale\nLand\n153.40\n47966\n-\nTerrace House\n1\n999 yrs from 17/12/1883\n-\nPrivate\n309489\n11\n30\nCentral Region\nNovena\nCCR\n999\n1883-12-17\n2882-12-17\n859\n859\n15\nNA\n\n\nTHE TATE RESIDENCES\n7080000\n2195.86\n3224\n2023-03-06\n21 CLAYMORE ROAD #19-01\nResale\nStrata\n204.00\n34706\n-\nCondominium\n1\nFreehold\n2009\nPrivate\n229545\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nREGENCY PARK\n6477000\n3175.38\n2040\n2023-03-06\n9 NATHAN ROAD #15-03\nResale\nStrata\n295.00\n21956\n-\nCondominium\n1\nFreehold\n1990\nPrivate\n248730\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBefore 2000s\n\n\nBRADDELL HEIGHTS ESTATE\n7500000\n5608.04\n1337\n2023-03-06\n23A DUNSFOLD DRIVE\nResale\nLand\n521.00\n14395\n-\nDetached House\n1\nFreehold\n1999\nPrivate\n357708\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nWEST SEA GARDENS\n7020000\n3769.55\n1862\n2023-03-06\n33 JALAN PELEPAH\nResale\nLand\n350.20\n20046\n-\nSemi-Detached House\n1\nFreehold\n-\nHDB\n119431\n5\n11\nCentral Region\nQueenstown\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nWATTEN ESTATE\n15380000\n4472.01\n3439\n2023-03-06\n42A WATTEN ESTATE ROAD\nSub Sale\nLand\n415.46\n37019\n-\nDetached House\n1\nFreehold\nUncompleted\nPrivate\n287121\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBuilding\n\n\nKLIMT CAIRNHILL\n7500000\n2055.92\n3648\n2023-03-07\n71 CAIRNHILL ROAD #19-01\nNew Sale\nStrata\n191.00\n39267\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nKLIMT CAIRNHILL\n7500000\n2055.92\n3648\n2023-03-07\n71 CAIRNHILL ROAD #20-01\nNew Sale\nStrata\n191.00\n39267\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nBINJAI PARK\n28300000\n15515.23\n1824\n2023-03-07\n38 BINJAI PARK\nResale\nLand\n1441.40\n19634\n-\nDetached House\n1\nFreehold\n-\nPrivate\n589820\n21\n58\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nNA\n\n\nFRANKEL ESTATE\n11800000\n7621.99\n1548\n2023-03-07\n574 CHANGI ROAD\nResale\nLand\n708.10\n16664\n-\nDetached House\n1\nFreehold\n-\nPrivate\n459901\n14\n41\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nN.A.\n6680000\n2589.82\n2579\n2023-03-07\n30E LORONG STANGEE\nResale\nLand\n240.60\n27764\n-\nTerrace House\n1\nFreehold\n2020\nPrivate\n278535\n15\n42\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nAfter 2000s\n\n\nN.A.\n18063500\n13951.22\n1295\n2023-03-07\n64 SUNSET VIEW\nResale\nLand\n1296.10\n13937\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n21\n59\nWest Region\nClementi\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nNA\n\n\nN.A.\n18000000\n7611.22\n2365\n2023-03-07\n37 POOLE ROAD\nResale\nLand\n707.10\n25456\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nCORALS AT KEPPEL BAY\n10000000\n4725.40\n2116\n2023-03-07\n11 KEPPEL BAY DRIVE #08-18\nResale\nStrata\n439.00\n22779\n-\nCondominium\n1\n99 yrs from 26/02/2007\n2016\nPrivate\n098013\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2007-02-26\n2106-02-26\n81\n81\n170\nAfter 2000s\n\n\nKLIMT CAIRNHILL\n6930000\n2055.92\n3371\n2023-03-08\n71 CAIRNHILL ROAD #06-01\nNew Sale\nStrata\n191.00\n36283\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nHENRY PARK\n8550000\n4150.60\n2060\n2023-03-08\n22 GROVE DRIVE\nResale\nLand\n385.60\n22173\n-\nSemi-Detached House\n1\nFreehold\n1977\nPrivate\n279049\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nKLIMT CAIRNHILL\n7500000\n2055.92\n3648\n2023-03-09\n71 CAIRNHILL ROAD #18-01\nNew Sale\nStrata\n191.00\n39267\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nN.A.\n14880000\n5688.77\n2616\n2023-03-10\n83A KHEAM HOCK ROAD\nResale\nLand\n528.50\n28155\n-\nDetached House\n1\nFreehold\n2015\nPrivate\n278535\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nNASSIM 9\n10300000\n3250.73\n3169\n2023-03-10\n9 NASSIM ROAD #01-01\nResale\nStrata\n302.00\n34106\n-\nApartment\n1\nFreehold\n2002\nPrivate\n258376\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nPARK INFINIA AT WEE NAM\n6628000\n3315.31\n1999\n2023-03-10\n2A LINCOLN ROAD #29-08\nResale\nStrata\n308.00\n21519\n-\nCondominium\n1\nFreehold\n2008\nPrivate\n308364\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n26000000\n12749.96\n2039\n2023-03-13\n49 SIXTH AVENUE\nResale\nLand\n1184.50\n21950\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nCORALS AT KEPPEL BAY\n7340200\n2647.94\n2772\n2023-03-13\n3 KEPPEL BAY DRIVE #06-07\nResale\nStrata\n246.00\n29838\n-\nCondominium\n1\n99 yrs from 26/02/2007\n2016\nPrivate\n098013\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2007-02-26\n2106-02-26\n81\n81\n170\nAfter 2000s\n\n\nKLIMT CAIRNHILL\n7600000\n2055.92\n3697\n2023-03-14\n71 CAIRNHILL ROAD #22-01\nNew Sale\nStrata\n191.00\n39791\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nOPERA ESTATE\n8700000\n5999.85\n1450\n2023-03-14\n11 AIDA STREET\nResale\nLand\n557.40\n15608\n-\nDetached House\n1\nFreehold\n-\nPrivate\n454847\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nLUCKY PARK\n6700000\n4513.35\n1484\n2023-03-17\n1 LEMON AVENUE\nResale\nLand\n419.30\n15979\n-\nTerrace House\n1\nFreehold\n1975\nPrivate\n277765\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n15\nBefore 2000s\n\n\nEMERALD HILL CONSERVATION AREA\n18000000\n3126.94\n5756\n2023-03-20\n28 CAIRNHILL ROAD\nResale\nLand\n290.50\n61962\n-\nTerrace House\n1\nFreehold\n-\nPrivate\n228270\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n15\nNA\n\n\nCORALS AT KEPPEL BAY\n6560000\n2583.36\n2539\n2023-03-20\n3 KEPPEL BAY DRIVE #03-05\nResale\nStrata\n240.00\n27333\n-\nCondominium\n1\n99 yrs from 26/02/2007\n2016\nPrivate\n098013\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2007-02-26\n2106-02-26\n81\n81\n170\nAfter 2000s\n\n\nCORALS AT KEPPEL BAY\n9000000\n3100.03\n2903\n2023-03-20\n7 KEPPEL BAY DRIVE #04-12\nResale\nStrata\n288.00\n31250\n-\nCondominium\n1\n99 yrs from 26/02/2007\n2016\nPrivate\n098013\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2007-02-26\n2106-02-26\n81\n81\n170\nAfter 2000s\n\n\nKLIMT CAIRNHILL\n7170000\n2055.92\n3487\n2023-03-21\n71 CAIRNHILL ROAD #10-01\nNew Sale\nStrata\n191.00\n37539\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nN.A.\n61080008\n32148.84\n1900\n2023-03-21\n14,14A,10,10A,12 DYSON ROADHILL ROAD\nResale\nLand\n2986.70\n20451\n-\nDetached House\n3\nFreehold\n-\nPrivate\n278535\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nSPRING WATERS VILLAS\n6800000\n3519.83\n1932\n2023-03-21\n27 JALAN MATA AYER\nNew Sale\nLand\n327.00\n20795\n-\nSemi-Detached House\n1\n953 yrs from 01/06/1931\nUncompleted\nPrivate\n759109\n27\n75\nNorth Region\nMandai\nOCR\n953\n1931-06-01\n2884-06-01\n860\n860\n40\nBuilding\n\n\nHONG KONG PARK\n9200000\n4720.01\n1949\n2023-03-22\n63 SIAN TUAN AVENUE\nResale\nLand\n438.50\n20981\n-\nSemi-Detached House\n1\n999 yrs from 07/05/1879\n-\nPrivate\n588324\n21\n58\nCentral Region\nBukit Timah\nOCR\n999\n1879-05-07\n2878-05-07\n854\n854\n40\nNA\n\n\nDUNEARN ESTATE\n14500000\n4367.60\n3320\n2023-03-23\n2A CAMBORNE ROAD\nNew Sale\nLand\n405.76\n35735\n-\nDetached House\n1\nFreehold\nUncompleted\nHDB\n297633\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBuilding\n\n\nGRANGE RESIDENCES\n8580000\n2583.36\n3321\n2023-03-23\n93 GRANGE ROAD #10-06\nResale\nStrata\n240.00\n35750\n-\nCondominium\n1\nFreehold\n2004\nPrivate\n249613\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nWATTEN ESTATE\n10800000\n4002.06\n2699\n2023-03-27\n16 WATTEN PARK\nResale\nLand\n371.80\n29048\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n287121\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nHOLLAND GREEN\n6300000\n4329.28\n1455\n2023-03-27\n19 HOLLAND GREEN\nResale\nLand\n402.20\n15664\n-\nDetached House\n1\n99 yrs from 13/02/1995\n1998\nPrivate\n276142\n10\n27\nCentral Region\nBukit Timah\nCCR\n99\n1995-02-13\n2094-02-13\n69\n69\n78\nBefore 2000s\n\n\nNASSIM PARK RESIDENCES\n22000000\n4822.27\n4562\n2023-03-27\n21 NASSIM ROAD #01-20\nResale\nStrata\n448.00\n49107\n-\nCondominium\n1\nFreehold\n2011\nPrivate\n258462\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nWOOLLERTON PARK\n24400000\n8645.64\n2822\n2023-03-27\n16 WOOLLERTON DRIVE\nResale\nLand\n803.20\n30378\n-\nDetached House\n1\nFreehold\n-\nPrivate\n257530\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nCHUAN GARDEN\n6280000\n6124.72\n1025\n2023-03-28\n39 CHUAN GARDEN\nResale\nLand\n569.00\n11037\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n558557\n19\n55\nNorth East Region\nSerangoon\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nNA\n\n\nKLIMT CAIRNHILL\n7420000\n2055.92\n3609\n2023-03-29\n71 CAIRNHILL ROAD #16-01\nNew Sale\nStrata\n191.00\n38848\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nARDMORE II\n6600000\n2023.63\n3261\n2023-03-29\n1 ARDMORE PARK #14-02\nResale\nStrata\n188.00\n35106\n-\nCondominium\n1\nFreehold\n2010\nHDB\n259962\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nSEMBAWANG HILLS ESTATE\n6900000\n3319.62\n2079\n2023-03-30\n36 JALAN KURAS\nResale\nLand\n308.40\n22374\n-\nTerrace House\n1\nFreehold\n-\nPrivate\n575848\n20\n57\nNorth East Region\nAng Mo Kio\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nNA\n\n\nSELETAR HILLS ESTATE\n7300000\n3692.05\n1977\n2023-03-31\n54 JALAN JARAK\nResale\nLand\n343.00\n21283\n-\nSemi-Detached House\n1\n999 yrs from 01/01/1879\n-\nPrivate\n807079\n28\n80\nNorth East Region\nSerangoon\nOCR\n999\n1879-01-01\n2878-01-01\n854\n854\n40\nNA\n\n\nGRANGE RESIDENCES\n8400000\n2669.47\n3147\n2023-03-31\n91 GRANGE ROAD #05-03\nResale\nStrata\n248.00\n33871\n-\nCondominium\n1\nFreehold\n2004\nPrivate\n249613\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n8000000\n6310.93\n1268\n2023-03-31\n1 SENNETT LANE\nResale\nLand\n586.30\n13645\n-\nDetached House\n1\nFreehold\n2016\nPrivate\n278535\n16\n46\nEast Region\nBedok\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nAfter 2000s\n\n\nKLIMT CAIRNHILL\n7320000\n2055.92\n3560\n2023-04-01\n71 CAIRNHILL ROAD #15-01\nNew Sale\nStrata\n191.00\n38325\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nSHAMROCK PARK\n6500000\n2171.10\n2994\n2023-04-03\n53C NAMLY GARDEN\nResale\nLand\n201.70\n32226\n-\nSemi-Detached House\n1\nFreehold\n1996\nPrivate\n267130\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nCANNINGHILL PIERS\n8744000\n2787.88\n3136\n2023-04-03\n1 CLARKE QUAY #29-01\nNew Sale\nStrata\n259.00\n33761\n-\nApartment\n1\n99 yrs from 17/09/2021\nUncompleted\nPrivate\n179882\n6\n17\nCentral Region\nSingapore River\nCCR\n99\n2021-09-17\n2120-09-17\n96\n96\n84\nBuilding\n\n\nN.A.\n8100000\n4915.92\n1648\n2023-04-04\n2 SUNSET DRIVE\nResale\nLand\n456.70\n17736\n-\nDetached House\n1\nFreehold\n2013\nPrivate\n278535\n21\n59\nWest Region\nClementi\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nAfter 2000s\n\n\nTHE MORNINGSIDE\n6280000\n3519.83\n1784\n2023-04-04\n1 JALAN KUALA #24-03\nResale\nStrata\n327.00\n19205\n-\nApartment\n1\nFreehold\n1992\nPrivate\n239639\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBefore 2000s\n\n\nTHE AVENIR\n6858000\n2066.69\n3318\n2023-04-04\n10 RIVER VALLEY CLOSE #03-10\nNew Sale\nStrata\n192.00\n35719\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n238432\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nDALVEY HAUS\n8333400\n1937.52\n4301\n2023-04-04\n101 DALVEY ROAD #04-07\nNew Sale\nStrata\n180.00\n46297\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n259514\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nPARADISE ISLAND\n14500000\n8632.73\n1680\n2023-04-05\n10 PARADISE ISLAND\nResale\nLand\n802.00\n18080\n-\nDetached House\n1\n99 yrs from 07/11/2005\n2009\nPrivate\n098475\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2005-11-07\n2104-11-07\n80\n80\n78\nAfter 2000s\n\n\nHILLCREST PARK\n15750000\n6981.53\n2256\n2023-04-06\n20 GREENVIEW CRESCENT\nResale\nLand\n648.60\n24283\n-\nDetached House\n1\nFreehold\n-\nPrivate\n289035\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nYONG AN PARK\n8100000\n3433.72\n2359\n2023-04-06\n327 RIVER VALLEY ROAD #10-03\nResale\nStrata\n319.00\n25392\n-\nCondominium\n1\nFreehold\n1986\nPrivate\n238357\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBefore 2000s\n\n\nST REGIS RESIDENCES SINGAPORE\n13500000\n6060.13\n2228\n2023-04-06\n33 TANGLIN ROAD #21-05\nResale\nStrata\n563.00\n23979\n-\nApartment\n1\n999 yrs from 24/11/1995\n2008\nHDB\n247913\n10\n24\nCentral Region\nOrchard\nCCR\n999\n1995-11-24\n2994-11-24\n971\n971\n84\nAfter 2000s\n\n\nN.A.\n6680000\n2006.41\n3329\n2023-04-06\n11 JALAN BULOH PERINDU\nResale\nLand\n186.40\n35837\n-\nTerrace House\n1\nFreehold\n2022\nHDB\n278535\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nAfter 2000s\n\n\nPARC STEVENS\n7850000\n3466.01\n2265\n2023-04-10\n25 STEVENS DRIVE #01-02\nResale\nStrata\n322.00\n24379\n-\nCondominium\n1\nFreehold\n2000\nPrivate\n257922\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nSCULPTURA ARDMORE\n18000000\n3584.41\n5022\n2023-04-10\n8 ARDMORE PARK #23-01\nResale\nStrata\n333.00\n54054\n-\nCondominium\n1\nFreehold\n2014\nPrivate\n259963\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nSERANGOON GARDEN ESTATE\n6300000\n6448.71\n977\n2023-04-10\n75 PORTCHESTER AVENUE\nResale\nLand\n599.10\n10516\n-\nDetached House\n1\n999 yrs from 01/01/1955\n-\nPrivate\n554920\n19\n55\nNorth East Region\nSerangoon\nOCR\n999\n1955-01-01\n2954-01-01\n930\n930\n45\nNA\n\n\nORANGE GROVE RESIDENCES\n6428888\n2927.81\n2196\n2023-04-10\n37 ORANGE GROVE ROAD #05-11\nResale\nStrata\n272.00\n23636\n-\nCondominium\n1\nFreehold\n2009\nPrivate\n258361\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n32800000\n14210.63\n2308\n2023-04-11\n11 JALAN HARUM\nResale\nLand\n1320.20\n24845\n-\nDetached House\n1\nFreehold\n1977\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nKLIMT CAIRNHILL\n7600000\n2055.92\n3697\n2023-04-11\n71 CAIRNHILL ROAD #24-01\nNew Sale\nStrata\n191.00\n39791\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nCYAN\n9200000\n2949.34\n3119\n2023-04-11\n6 KENG CHIN ROAD #24-01\nResale\nStrata\n274.00\n33577\n-\nCondominium\n1\nFreehold\n2014\nPrivate\n258710\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nTERRA HILL\n8200000\n3035.45\n2701\n2023-04-12\n20 YEW SIANG ROAD #05-25\nNew Sale\nStrata\n282.00\n29078\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n118993\n5\n11\nCentral Region\nQueenstown\nRCR\nNA\nNA\nNA\nNA\nFreehold\n13\nBuilding\n\n\nBISHOPSGATE RESIDENCES\n24900000\n6372.29\n3908\n2023-04-12\n1 BISHOPSGATE #01-10\nResale\nStrata\n592.00\n42061\n-\nSemi-Detached House\n1\nFreehold\n2012\nPrivate\n247676\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nMARINA COLLECTION\n7000000\n3788.93\n1847\n2023-04-12\n13 COVE DRIVE #04-12\nResale\nStrata\n352.00\n19886\n-\nCondominium\n1\n99 yrs from 03/01/2007\n2011\nPrivate\n098327\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2007-01-03\n2106-01-03\n81\n81\n170\nAfter 2000s\n\n\nBOULEVARD 88\n14000000\n2798.64\n5002\n2023-04-13\n88 ORCHARD BOULEVARD #18-05\nSub Sale\nStrata\n260.00\n53846\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n248655\n10\n24\nCentral Region\nOrchard\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nTHE LADYHILL\n7280000\n2411.14\n3019\n2023-04-13\n1 LADY HILL ROAD #02-01\nResale\nStrata\n224.00\n32500\n-\nCondominium\n1\nFreehold\n2002\nPrivate\n258670\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nTHE LADYHILL\n7580000\n3519.83\n2154\n2023-04-13\n1 LADY HILL ROAD #01-13\nResale\nStrata\n327.00\n23180\n-\nCondominium\n1\nFreehold\n2002\nPrivate\n258670\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nARDMORE PARK\n13008888\n2884.75\n4510\n2023-04-14\n15 ARDMORE PARK #04-03\nResale\nStrata\n268.00\n48541\n-\nCondominium\n1\nFreehold\n2001\nPrivate\n259957\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nFRANKEL ESTATE\n7850000\n4513.35\n1739\n2023-04-14\n121 SIGLAP ROAD\nResale\nLand\n419.30\n18722\n-\nDetached House\n1\nFreehold\n2016\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nFULTON HILL\n7000000\n5087.07\n1376\n2023-04-14\n2 FULTON ROAD\nResale\nLand\n472.60\n14812\n-\nTerrace House\n1\nFreehold\n1981\nPrivate\n578886\n20\n57\nCentral Region\nBishan\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nBefore 2000s\n\n\nN.A.\n14380000\n5758.74\n2497\n2023-04-15\n5 ROBIN WALK\nResale\nLand\n535.00\n26879\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n278535\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nALBA\n7600000\n1905.23\n3989\n2023-04-17\n8 CAIRNHILL RISE #15-02\nResale\nStrata\n177.00\n42938\n-\nApartment\n1\nFreehold\n2015\nPrivate\n229743\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nN.A.\n13888000\n11053.55\n1256\n2023-04-17\n4 SUNSET WALK\nResale\nLand\n1026.90\n13524\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n21\n59\nWest Region\nClementi\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nNA\n\n\nSELETAR HILLS ESTATE\n7280000\n6905.11\n1054\n2023-04-18\n1 JALAN JARAK\nResale\nLand\n641.50\n11348\n-\nSemi-Detached House\n1\n999 yrs from 01/01/1879\n2009\nPrivate\n807079\n28\n80\nNorth East Region\nSerangoon\nOCR\n999\n1879-01-01\n2878-01-01\n854\n854\n40\nAfter 2000s\n\n\nKLIMT CAIRNHILL\n7370000\n2055.92\n3585\n2023-04-18\n71 CAIRNHILL ROAD #11-01\nNew Sale\nStrata\n191.00\n38586\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nN.A.\n24000000\n10491.67\n2288\n2023-04-18\n2B PATERSON HILL\nResale\nLand\n974.70\n24623\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nGRAMERCY PARK\n8000000\n2206.62\n3625\n2023-04-18\n57 GRANGE ROAD #15-08\nResale\nStrata\n205.00\n39024\n-\nCondominium\n1\nFreehold\n2016\nPrivate\n249569\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nCORALS AT KEPPEL BAY\n7056000\n2647.94\n2665\n2023-04-18\n3 KEPPEL BAY DRIVE #03-06\nResale\nStrata\n246.00\n28683\n-\nCondominium\n1\n99 yrs from 26/02/2007\n2016\nPrivate\n098013\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2007-02-26\n2106-02-26\n81\n81\n170\nAfter 2000s\n\n\nFORTUNA GARDENS\n6488888\n2784.65\n2330\n2023-04-19\n46 DA SILVA LANE\nResale\nLand\n258.70\n25083\n-\nTerrace House\n1\n999 yrs from 19/02/1883\n-\nPrivate\n549775\n19\n54\nNorth East Region\nHougang\nOCR\n999\n1883-02-19\n2882-02-19\n858\n858\n8\nNA\n\n\nSEMBAWANG HILLS ESTATE\n6450000\n3630.70\n1777\n2023-04-19\n17 JALAN SAPPAN\nResale\nLand\n337.30\n19122\n-\nSemi-Detached House\n1\nFreehold\n2006\nPrivate\n575848\n20\n57\nNorth East Region\nAng Mo Kio\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nAfter 2000s\n\n\nSEAVIEW PARK\n7050000\n3233.51\n2180\n2023-04-19\n43 JALAN SEAVIEW\nResale\nLand\n300.40\n23469\n-\nSemi-Detached House\n1\nFreehold\n-\nHDB\n438260\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nGOODWOOD RESIDENCE\n6800000\n2604.89\n2610\n2023-04-19\n263 BUKIT TIMAH ROAD #02-09\nResale\nStrata\n242.00\n28099\n-\nCondominium\n1\nFreehold\n2013\nPrivate\n259704\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n15585000\n5195.14\n3000\n2023-04-19\n10B DYSON ROAD\nNew Sale\nLand\n482.64\n32291\n-\nDetached House\n1\nFreehold\nUncompleted\nPrivate\n278535\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBuilding\n\n\nREFLECTIONS AT KEPPEL BAY\n7900000\n2938.57\n2688\n2023-04-20\n21 KEPPEL BAY VIEW #02-69\nResale\nStrata\n273.00\n28938\n-\nCondominium\n1\n99 yrs from 15/03/2006\n2011\nPrivate\n098419\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2006-03-15\n2105-03-15\n80\n80\n170\nAfter 2000s\n\n\nCORALS AT KEPPEL BAY\n6985000\n2594.12\n2693\n2023-04-20\n3 KEPPEL BAY DRIVE #04-05\nResale\nStrata\n241.00\n28983\n-\nCondominium\n1\n99 yrs from 26/02/2007\n2016\nPrivate\n098013\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2007-02-26\n2106-02-26\n81\n81\n170\nAfter 2000s\n\n\nN.A.\n14000000\n5273.28\n2655\n2023-04-21\n27A BERRIMA ROAD\nResale\nLand\n489.90\n28577\n-\nDetached House\n1\nFreehold\n2002\nPrivate\n278535\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nN.A.\n7000000\n3294.86\n2125\n2023-04-21\n26 LENGKONG SATU\nResale\nLand\n306.10\n22868\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n278535\n14\n41\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nN.A.\n6350000\n2635.03\n2410\n2023-04-21\n42 LORONG H TELOK KURAU\nResale\nLand\n244.80\n25940\n-\nTerrace House\n1\nFreehold\n1962\nHDB\n278535\n15\n42\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nBefore 2000s\n\n\nEDEN PARK\n7200000\n3176.46\n2267\n2023-04-25\n23 FIR AVENUE\nResale\nLand\n295.10\n24399\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n276721\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nKLIMT CAIRNHILL\n7400000\n2055.92\n3599\n2023-04-25\n71 CAIRNHILL ROAD #13-01\nNew Sale\nStrata\n191.00\n38743\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nEDEN RESIDENCES CAPITOL\n10685262\n3003.16\n3558\n2023-04-25\n11 STAMFORD ROAD #09-03\nResale\nStrata\n279.00\n38298\n-\nApartment\n1\n99 yrs from 24/01/2011\n2016\nPrivate\n178884\n6\n17\nCentral Region\nDowntown Core\nCCR\n99\n2011-01-24\n2110-01-24\n85\n85\n84\nAfter 2000s\n\n\nCHIP HOCK GARDENS\n18500000\n8038.56\n2301\n2023-04-25\n19 JALAN HAROM SETANGKAI\nResale\nLand\n746.80\n24772\n-\nDetached House\n1\nFreehold\n-\nPrivate\n258810\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nN.A.\n8070000\n3373.44\n2392\n2023-04-25\n17 LORONG MARZUKI\nNew Sale\nLand\n313.40\n25750\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nPrivate\n278535\n14\n41\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBuilding\n\n\nDALVEY HAUS\n7400000\n1937.52\n3819\n2023-04-26\n101 DALVEY ROAD #02-07\nNew Sale\nStrata\n180.00\n41111\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n259514\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nN.A.\n32200000\n14123.44\n2280\n2023-05-02\n29,29A BARKER ROAD\nResale\nLand\n1312.10\n24541\n-\nDetached House\n2\nFreehold\n1997\nPrivate\n278535\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nCORALS AT KEPPEL BAY\n11600000\n4854.56\n2390\n2023-05-03\n9 KEPPEL BAY DRIVE #07-15\nResale\nStrata\n451.00\n25721\n-\nCondominium\n1\n99 yrs from 26/02/2007\n2016\nPrivate\n098013\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2007-02-26\n2106-02-26\n81\n81\n170\nAfter 2000s\n\n\nSERANGOON GARDEN ESTATE\n6800000\n4533.80\n1500\n2023-05-03\n48 MEDWAY DRIVE\nResale\nLand\n421.20\n16144\n-\nDetached House\n1\n999 yrs from 01/01/1954\n-\nPrivate\n554920\n19\n55\nNorth East Region\nSerangoon\nOCR\n999\n1954-01-01\n2953-01-01\n929\n929\n45\nNA\n\n\nNEW FUTURA\n12500000\n2691.00\n4645\n2023-05-03\n18 LEONIE HILL ROAD #24-05\nResale\nStrata\n250.00\n50000\n-\nCondominium\n1\nFreehold\n2017\nPrivate\n239198\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nSHAN YAO GARDEN\n7800000\n5965.41\n1308\n2023-05-03\n70 YUK TONG AVENUE\nResale\nLand\n554.20\n14074\n-\nSemi-Detached House\n1\nFreehold\n1983\nPrivate\n596371\n21\n59\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nBefore 2000s\n\n\nCORALS AT KEPPEL BAY\n9600000\n3444.48\n2787\n2023-05-04\n7 KEPPEL BAY DRIVE #01-11\nResale\nStrata\n320.00\n30000\n-\nCondominium\n1\n99 yrs from 26/02/2007\n2016\nPrivate\n098013\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2007-02-26\n2106-02-26\n81\n81\n170\nAfter 2000s\n\n\nYONG AN PARK\n14080000\n7717.79\n1824\n2023-05-05\n325 RIVER VALLEY ROAD #01-06\nResale\nStrata\n717.00\n19637\n-\nCondominium\n1\nFreehold\n1986\nPrivate\n238357\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBefore 2000s\n\n\nN.A.\n10680000\n4798.59\n2226\n2023-05-05\n18 PARKSTONE ROAD\nResale\nLand\n445.80\n23957\n-\nDetached House\n1\nFreehold\n2010\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nMARINA ONE RESIDENCES\n18800000\n8697.31\n2162\n2023-05-05\n21 MARINA WAY #33-15\nResale\nStrata\n808.00\n23267\n-\nApartment\n1\n99 yrs from 01/07/2011\n2017\nPrivate\n018978\n1\n01\nCentral Region\nDowntown Core\nCCR\n99\n2011-07-01\n2110-07-01\n86\n86\n84\nAfter 2000s\n\n\nN.A.\n9800000\n3897.64\n2514\n2023-05-05\n41 CORONATION DRIVE\nResale\nLand\n362.10\n27064\n-\nSemi-Detached House\n1\n999 yrs from 27/12/1875\n1986\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\n999\n1875-12-27\n2874-12-27\n851\n851\n80\nBefore 2000s\n\n\nKLIMT CAIRNHILL\n9750000\n2368.08\n4117\n2023-05-08\n71 CAIRNHILL ROAD #34-03\nNew Sale\nStrata\n220.00\n44318\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nKLIMT CAIRNHILL\n9700000\n2368.08\n4096\n2023-05-08\n71 CAIRNHILL ROAD #32-03\nNew Sale\nStrata\n220.00\n44091\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\n3 ORCHARD BY-THE-PARK\n10000000\n2583.36\n3871\n2023-05-08\n3 ORCHARD BOULEVARD #05-01\nResale\nStrata\n240.00\n41667\n-\nCondominium\n1\nFreehold\n2017\nPrivate\n248653\n10\n24\nCentral Region\nOrchard\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nSHAMROCK PARK\n10880000\n4738.31\n2296\n2023-05-08\n63 NAMLY DRIVE\nResale\nLand\n440.20\n24716\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n267130\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nLES MAISONS NASSIM\n45000000\n8632.73\n5213\n2023-05-10\n14B NASSIM ROAD #01-02\nNew Sale\nStrata\n802.00\n56110\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n257470\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nCHIP BEE GARDENS\n8800128\n5223.77\n1685\n2023-05-12\n147 HOLLAND ROAD\nResale\nLand\n485.30\n18133\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278467\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nSHAMROCK PARK\n10038000\n4624.21\n2171\n2023-05-12\n61 NAMLY DRIVE\nResale\nLand\n429.60\n23366\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n267130\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nTHE PEAK\n7800000\n5543.46\n1407\n2023-05-12\n35 PEPYS ROAD #B1-01\nResale\nStrata\n515.00\n15146\n-\nCondominium\n1\nFreehold\n1988\nPrivate\n118455\n5\n11\nCentral Region\nQueenstown\nRCR\nNA\nNA\nNA\nNA\nFreehold\n9\nBefore 2000s\n\n\nN.A.\n20000000\n8818.95\n2268\n2023-05-12\n6 COVE WAY\nResale\nLand\n819.30\n24411\n-\nDetached House\n1\n99 yrs from 08/08/2007\n2011\nPrivate\n278535\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2007-08-08\n2106-08-08\n82\n82\n78\nAfter 2000s\n\n\nNOUVEL 18\n7696000\n2475.72\n3109\n2023-05-15\n18 ANDERSON ROAD #03-03\nResale\nStrata\n230.00\n33461\n-\nCondominium\n1\nFreehold\n2014\nPrivate\n259977\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nCLIVEDEN AT GRANGE\n8100000\n2841.70\n2850\n2023-05-15\n102 GRANGE ROAD #07-03\nResale\nStrata\n264.00\n30682\n-\nCondominium\n1\nFreehold\n2011\nHDB\n249592\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nPATERSON RESIDENCE\n8500000\n4058.03\n2095\n2023-05-16\n79 PATERSON ROAD\nResale\nStrata\n377.00\n22546\n-\nCondominium\n1\nFreehold\n2008\nPrivate\n238549\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nCORALS AT KEPPEL BAY\n6800000\n2723.29\n2497\n2023-05-17\n3 KEPPEL BAY DRIVE #04-06\nResale\nStrata\n253.00\n26877\n-\nCondominium\n1\n99 yrs from 26/02/2007\n2016\nPrivate\n098013\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2007-02-26\n2106-02-26\n81\n81\n170\nAfter 2000s\n\n\nSHAMROCK PARK\n7600000\n3459.55\n2197\n2023-05-17\n131 NAMLY AVENUE\nResale\nLand\n321.40\n23647\n-\nSemi-Detached House\n1\nFreehold\n1972\nPrivate\n267130\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nSCOTTS HIGHPARK\n12680000\n4111.85\n3084\n2023-05-18\n45 SCOTTS ROAD #24-03\nResale\nStrata\n382.00\n33194\n-\nCondominium\n1\nFreehold\n2009\nPrivate\n228239\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nFRANKEL ESTATE\n8400000\n6641.39\n1265\n2023-05-19\n23 FRANKEL AVENUE\nResale\nLand\n617.00\n13614\n-\nDetached House\n1\nFreehold\n1956\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nBAN GUAN PARK\n7600000\n3643.61\n2086\n2023-05-19\n18 GREENLEAF PLACE\nResale\nLand\n338.50\n22452\n-\nSemi-Detached House\n1\nFreehold\n1968\nHDB\n279251\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nBISHOPSGATE RESIDENCES\n10700000\n2938.57\n3641\n2023-05-22\n1 BISHOPSGATE #02-03\nResale\nStrata\n273.00\n39194\n-\nCondominium\n1\nFreehold\n2012\nPrivate\n247676\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nTHE LADYHILL\n6800000\n2271.20\n2994\n2023-05-23\n1 LADY HILL ROAD #03-04\nResale\nStrata\n211.00\n32227\n-\nCondominium\n1\nFreehold\n2002\nPrivate\n258670\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n15000000\n6693.06\n2241\n2023-05-24\n78 BRANKSOME ROAD\nResale\nLand\n621.80\n24124\n-\nDetached House\n1\nFreehold\n1992\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nAALTO\n13200000\n5608.04\n2354\n2023-05-24\n193 MEYER ROAD #26-06\nResale\nStrata\n521.00\n25336\n-\nCondominium\n1\nFreehold\n2010\nPrivate\n437981\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n9\nAfter 2000s\n\n\nLUCKY PARK\n9300000\n3823.37\n2432\n2023-05-24\n15 LANTANA AVENUE\nResale\nLand\n355.20\n26182\n-\nSemi-Detached House\n1\nFreehold\n1975\nPrivate\n277765\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nN.A.\n15800000\n7014.90\n2252\n2023-05-25\n15 RAMSGATE ROAD\nResale\nLand\n651.70\n24244\n-\nDetached House\n1\nFreehold\n1972\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nBRADDELL HEIGHTS ESTATE\n19700000\n13572.33\n1451\n2023-05-26\n7 CLIFTON VALE\nResale\nLand\n1260.90\n15624\n-\nDetached House\n1\nFreehold\n-\nPrivate\n357708\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nARDMORE PARK\n12900000\n2884.75\n4472\n2023-05-29\n11 ARDMORE PARK #26-02\nResale\nStrata\n268.00\n48134\n-\nCondominium\n1\nFreehold\n2001\nPrivate\n259957\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nCAPE ROYALE\n10858500\n4768.45\n2277\n2023-05-29\n13 COVE WAY #18-04\nResale\nStrata\n443.00\n24511\n-\nCondominium\n1\n99 yrs from 07/04/2008\n2013\nPrivate\n098208\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2008-04-07\n2107-04-07\n82\n82\n170\nAfter 2000s\n\n\nHUA GUAN GARDENS\n13800000\n5110.75\n2700\n2023-05-29\n9 HUA GUAN CRESCENT\nResale\nLand\n474.80\n29065\n-\nSemi-Detached House\n1\n999 yrs from 04/12/1883\n1985\nPrivate\n589035\n21\n58\nCentral Region\nBukit Timah\nOCR\n999\n1883-12-04\n2882-12-04\n859\n859\n40\nBefore 2000s\n\n\nARDMORE THREE\n7700000\n1776.06\n4335\n2023-05-29\n3 ARDMORE PARK #35-02\nResale\nStrata\n165.00\n46667\n-\nCondominium\n1\nFreehold\n2014\nPrivate\n259950\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nCAPITOL PARK\n42000000\n16395.72\n2562\n2023-05-30\n6 JALAN ASUHAN\nResale\nLand\n1523.20\n27574\n-\nDetached House\n1\nFreehold\n2008\nPrivate\n297893\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nGRANGE RESIDENCES\n8880000\n2669.47\n3327\n2023-05-31\n91 GRANGE ROAD #08-04\nResale\nStrata\n248.00\n35806\n-\nCondominium\n1\nFreehold\n2004\nPrivate\n249613\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n6500000\n1876.38\n3464\n2023-05-31\n189 HAIG ROAD\nResale\nLand\n174.32\n37288\n-\nTerrace House\n1\nFreehold\n2023\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nAfter 2000s\n\n\nFOUR SEASONS PARK\n7480000\n2260.44\n3309\n2023-06-01\n10 CUSCADEN WALK #16-01\nResale\nStrata\n210.00\n35619\n-\nCondominium\n1\nFreehold\n1994\nPrivate\n249693\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBefore 2000s\n\n\nARDMORE II\n6600000\n2023.63\n3261\n2023-06-01\n1 ARDMORE PARK #23-01\nResale\nStrata\n188.00\n35106\n-\nCondominium\n1\nFreehold\n2010\nPrivate\n259962\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n9000000\n4398.17\n2046\n2023-06-05\n57 BRANKSOME ROAD\nResale\nLand\n408.60\n22026\n-\nDetached House\n1\nFreehold\n2007\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nPASIR RIS BEACH PARK\n8400000\n4330.36\n1940\n2023-06-06\n26B PASIR RIS WAY\nNew Sale\nLand\n402.30\n20880\n-\nDetached House\n1\n999 yrs from 10/02/1874\nUncompleted\nPrivate\n518653\n18\n51\nEast Region\nPasir Ris\nOCR\n999\n1874-02-10\n2873-02-10\n849\n849\n45\nBuilding\n\n\nN.A.\n16300000\n14376.40\n1134\n2023-06-07\n26 KEW DRIVE\nResale\nLand\n1335.60\n12204\n-\nDetached House\n1\nFreehold\n1985\nPrivate\n278535\n16\n46\nEast Region\nBedok\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nBefore 2000s\n\n\nFRANKEL ESTATE\n18500000\n11050.32\n1674\n2023-06-07\n22 LA SALLE STREET\nResale\nLand\n1026.60\n18021\n-\nDetached House\n1\nFreehold\n2015\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nGOODWOOD RESIDENCE\n7150000\n2497.25\n2863\n2023-06-09\n263 BUKIT TIMAH ROAD #04-09\nResale\nStrata\n232.00\n30819\n-\nCondominium\n1\nFreehold\n2013\nPrivate\n259704\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nSHAMROCK PARK\n9000000\n3812.61\n2361\n2023-06-12\n26 NAMLY PLACE\nResale\nLand\n354.20\n25409\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n267130\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nTHE LADYHILL\n7500000\n3261.49\n2300\n2023-06-13\n1 LADY HILL ROAD #01-14\nResale\nStrata\n303.00\n24752\n-\nCondominium\n1\nFreehold\n2002\nPrivate\n258670\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nHILLCREST PARK\n7608000\n2899.82\n2624\n2023-06-15\n42 GREENWOOD AVENUE\nResale\nLand\n269.40\n28241\n-\nSemi-Detached House\n1\nFreehold\n2006\nPrivate\n289035\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nFABER HILLS\n7500000\n6055.83\n1238\n2023-06-19\n74 FABER HEIGHTS\nResale\nLand\n562.60\n13331\n-\nSemi-Detached House\n1\nFreehold\n1977\nPrivate\n128951\n5\n12\nWest Region\nClementi\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nBAN GUAN PARK\n7600000\n3588.72\n2118\n2023-06-20\n15 GREENLEAF VIEW\nResale\nLand\n333.40\n22795\n-\nSemi-Detached House\n1\nFreehold\n1968\nPrivate\n279251\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nN.A.\n11650000\n5393.84\n2160\n2023-06-20\n5 AVON ROAD\nResale\nLand\n501.10\n23249\n-\nDetached House\n1\nFreehold\n1997\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nHENRY PARK\n10900000\n5320.65\n2049\n2023-06-22\n8 GROVE DRIVE\nResale\nLand\n494.30\n22051\n-\nSemi-Detached House\n1\n999 yrs from 06/07/1885\n1977\nPrivate\n279049\n10\n27\nCentral Region\nBukit Timah\nCCR\n999\n1885-07-06\n2884-07-06\n860\n860\n80\nBefore 2000s\n\n\nRAFFLES PARK\n24000000\n11314.04\n2121\n2023-06-22\n33 LINDEN DRIVE\nResale\nLand\n1051.10\n22833\n-\nDetached House\n1\nFreehold\n2019\nPrivate\n288706\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nTHE MARQ ON PATERSON HILL\n13000000\n3089.27\n4208\n2023-06-22\n8A PATERSON HILL #08-03\nResale\nStrata\n287.00\n45296\n-\nCondominium\n1\nFreehold\n2011\nPrivate\n238568\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nFRANKEL ESTATE\n6550000\n3559.76\n1840\n2023-06-23\n111A SIGLAP ROAD\nNew Sale\nLand\n330.71\n19806\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBuilding\n\n\nN.A.\n7150000\n4434.77\n1612\n2023-06-23\n33 JALAN KUANG\nResale\nLand\n412.00\n17354\n-\nDetached House\n1\nFreehold\n2008\nPrivate\n278535\n16\n48\nEast Region\nTampines\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nAfter 2000s\n\n\nHONG KONG PARK\n20300000\n9591.80\n2116\n2023-06-26\n23 HUA GUAN AVENUE\nResale\nLand\n891.10\n22781\n-\nDetached House\n1\n999 yrs from 07/05/1879\n-\nPrivate\n588324\n21\n58\nCentral Region\nBukit Timah\nOCR\n999\n1879-05-07\n2878-05-07\n854\n854\n45\nNA\n\n\nN.A.\n10600000\n6746.88\n1571\n2023-06-26\n1,1A,1B,1C ENBLOC JALAN ULU SIGLAP\nResale\nStrata\n626.80\n16911\n-\nApartment\n4\nFreehold\n1985\nPrivate\n278535\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n13\nBefore 2000s\n\n\nMCMAHON PARK\n13488000\n6025.69\n2238\n2023-06-27\n11 JALAN JELITA\nResale\nLand\n559.80\n24094\n-\nDetached House\n1\n999 yrs from 21/06/1877\n1967\nPrivate\n276316\n10\n27\nCentral Region\nBukit Timah\nCCR\n999\n1877-06-21\n2876-06-21\n852\n852\n78\nBefore 2000s\n\n\nLES MAISONS NASSIM\n32748700\n6178.54\n5300\n2023-06-27\n14A NASSIM ROAD #02-01\nNew Sale\nStrata\n574.00\n57053\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n257470\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nLES MAISONS NASSIM\n30764600\n6092.42\n5050\n2023-06-27\n14A NASSIM ROAD #01-01\nNew Sale\nStrata\n566.00\n54354\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n257470\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nN.A.\n16600000\n7865.25\n2111\n2023-06-29\n12 CHANCERY LANE\nResale\nLand\n730.70\n22718\n-\nDetached House\n1\nFreehold\n1984\nPrivate\n278535\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nOEI TIONG HAM PARK\n22800000\n8726.37\n2613\n2023-06-30\n8 JALAN HARUM\nResale\nLand\n810.70\n28124\n-\nDetached House\n1\nFreehold\n-\nPrivate\n268481\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nOAK VILLAS\n11600000\n4449.84\n2607\n2023-06-30\n1 OAK AVENUE\nResale\nLand\n413.40\n28060\n-\nDetached House\n1\nFreehold\n2003\nPrivate\n276762\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nCAIRNHILL NINE\n7500000\n3186.14\n2354\n2023-07-05\n9 CAIRNHILL ROAD #30-12\nResale\nStrata\n296.00\n25338\n-\nApartment\n1\n99 yrs from 12/05/2014\n2016\nPrivate\n229723\n9\n22\nCentral Region\nOrchard\nCCR\n99\n2014-05-12\n2113-05-12\n89\n89\n84\nAfter 2000s\n\n\nN.A.\n7000000\n6835.14\n1024\n2023-07-06\n8 JALAN SINGA\nResale\nLand\n635.00\n11024\n-\nDetached House\n1\nFreehold\n1989\nPrivate\n278535\n14\n41\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nBELLE VUE RESIDENCES\n6500000\n3831.98\n1696\n2023-07-07\n31 OXLEY WALK #05-32\nResale\nStrata\n356.00\n18258\n-\nCondominium\n1\nFreehold\n2010\nPrivate\n238591\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nHONG KONG PARK\n10000000\n4586.54\n2180\n2023-07-07\n50 SIAN TUAN AVENUE\nResale\nLand\n426.10\n23469\n-\nSemi-Detached House\n1\n999 yrs from 07/05/1879\n-\nPrivate\n588324\n21\n58\nCentral Region\nBukit Timah\nOCR\n999\n1879-05-07\n2878-05-07\n854\n854\n40\nNA\n\n\nHENRY PARK\n9100000\n4324.98\n2104\n2023-07-07\n56 GROVE DRIVE\nResale\nLand\n401.80\n22648\n-\nSemi-Detached House\n1\nFreehold\n1977\nPrivate\n279049\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nFRANKEL ESTATE\n7450000\n3286.25\n2267\n2023-07-07\n19 ETTRICK TERRACE\nResale\nLand\n305.30\n24402\n-\nSemi-Detached House\n1\nFreehold\n1997\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nONE PEARL BANK\n6800000\n2626.42\n2589\n2023-07-08\n1 PEARL BANK #38-06\nNew Sale\nStrata\n244.00\n27869\n-\nApartment\n1\n99 yrs from 01/03/2019\nUncompleted\nPrivate\n169016\n3\n16\nCentral Region\nOutram\nRCR\n99\n2019-03-01\n2118-03-01\n93\n93\n13\nBuilding\n\n\nONE PEARL BANK\n7500000\n2777.11\n2701\n2023-07-09\n1 PEARL BANK #38-02\nNew Sale\nStrata\n258.00\n29070\n-\nApartment\n1\n99 yrs from 01/03/2019\nUncompleted\nPrivate\n169016\n3\n16\nCentral Region\nOutram\nRCR\n99\n2019-03-01\n2118-03-01\n93\n93\n13\nBuilding\n\n\nWING ON LIFE GARDEN\n8430000\n3498.30\n2410\n2023-07-10\n335 BUKIT TIMAH ROAD #10-03\nResale\nStrata\n325.00\n25938\n-\nApartment\n1\nFreehold\n1982\nPrivate\n259718\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBefore 2000s\n\n\nCALDECOTT HILL ESTATE\n22250000\n10930.84\n2036\n2023-07-10\n2A CALDECOTT CLOSE\nResale\nLand\nNA\n21910\n-\nDetached House\n1\nFreehold\n-\nPrivate\n299120\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nTHE GRANGE\n7200000\n2281.97\n3155\n2023-07-10\n1 GRANGE GARDEN #11-05\nResale\nStrata\n212.00\n33962\n-\nCondominium\n1\nFreehold\n2008\nPrivate\n249631\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nSERANGOON GARDEN ESTATE\n6980000\n4206.57\n1659\n2023-07-10\n75 CROWHURST DRIVE\nResale\nLand\n390.80\n17861\n-\nSemi-Detached House\n1\n999 yrs from 01/01/1954\n-\nPrivate\n554920\n19\n55\nNorth East Region\nSerangoon\nOCR\n999\n1954-01-01\n2953-01-01\n929\n929\n40\nNA\n\n\nONE PEARL BANK\n7880000\n2691.00\n2928\n2023-07-11\n1 PEARL BANK #38-18\nNew Sale\nStrata\n250.00\n31520\n-\nApartment\n1\n99 yrs from 01/03/2019\nUncompleted\nPrivate\n169016\n3\n16\nCentral Region\nOutram\nRCR\n99\n2019-03-01\n2118-03-01\n93\n93\n13\nBuilding\n\n\nSERANGOON GARDEN ESTATE\n6980000\n4358.34\n1602\n2023-07-12\n38 CROWHURST DRIVE\nResale\nLand\n404.90\n17239\n-\nSemi-Detached House\n1\n999 yrs from 01/01/1953\n1999\nPrivate\n554920\n19\n55\nNorth East Region\nSerangoon\nOCR\n999\n1953-01-01\n2952-01-01\n928\n928\n40\nBefore 2000s\n\n\nN.A.\n6550000\n2783.57\n2353\n2023-07-13\n7 JALAN SIANTAN\nResale\nLand\n258.60\n25329\n-\nTerrace House\n1\nFreehold\n1982\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n15\nBefore 2000s\n\n\nDUCHESS GARDEN\n10700000\n5803.95\n1844\n2023-07-14\n79 DUCHESS AVENUE\nResale\nLand\n539.20\n19844\n-\nSemi-Detached House\n1\n999 yrs from 27/12/1875\n1975\nPrivate\n269135\n10\n26\nCentral Region\nBukit Timah\nCCR\n999\n1875-12-27\n2874-12-27\n851\n851\n80\nBefore 2000s\n\n\nGALLOP GREEN\n7225000\n2992.39\n2414\n2023-07-14\n17 WOOLLERTON PARK #02-17\nResale\nStrata\n278.00\n25989\n-\nCondominium\n1\nFreehold\n2002\nPrivate\n257536\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nSEASCAPE\n6374500\n2852.46\n2235\n2023-07-14\n57 COVE WAY #07-07\nResale\nStrata\n265.00\n24055\n-\nCondominium\n1\n99 yrs from 09/06/2007\n2011\nPrivate\n098309\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2007-06-09\n2106-06-09\n82\n82\n170\nAfter 2000s\n\n\nBAN GUAN PARK\n8000000\n3588.72\n2229\n2023-07-14\n11 GREENLEAF VIEW\nResale\nLand\n333.40\n23995\n-\nSemi-Detached House\n1\nFreehold\n1991\nPrivate\n279251\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nARDMORE PARK\n12800000\n2884.75\n4437\n2023-07-17\n15 ARDMORE PARK #10-03\nResale\nStrata\n268.00\n47761\n-\nCondominium\n1\nFreehold\n2001\nPrivate\n259957\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nGOLDWOOD GARDENS\n8250000\n7841.57\n1052\n2023-07-17\n577 SEMBAWANG PLACE\nResale\nLand\n728.50\n11325\n-\nDetached House\n1\nFreehold\n1986\nPrivate\n758423\n27\n75\nNorth Region\nSembawang\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nBefore 2000s\n\n\nN.A.\n6300000\n4919.15\n1281\n2023-07-20\n20A PHILLIPS AVENUE\nResale\nLand\n457.00\n13786\n-\nSemi-Detached House\n1\n999 yrs from 01/01/1886\n1978\nPrivate\n278535\n19\n54\nNorth East Region\nHougang\nOCR\n999\n1886-01-01\n2885-01-01\n861\n861\n40\nBefore 2000s\n\n\nSHELFORD VIEW\n7500000\n5134.43\n1461\n2023-07-20\n26 SHELFORD ROAD #05-03\nResale\nStrata\n477.00\n15723\n-\nCondominium\n1\nFreehold\n1983\nPrivate\n288420\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBefore 2000s\n\n\nWATTEN ESTATE\n15600000\n9415.27\n1657\n2023-07-20\n42 WATTEN ESTATE ROAD\nSub Sale\nLand\n874.70\n17835\n-\nDetached House\n1\nFreehold\nUncompleted\nPrivate\n287121\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBuilding\n\n\nCANNINGHILL PIERS\n8648000\n2787.88\n3102\n2023-07-21\n1 CLARKE QUAY #26-01\nNew Sale\nStrata\n259.00\n33390\n-\nApartment\n1\n99 yrs from 17/09/2021\nUncompleted\nPrivate\n179882\n6\n17\nCentral Region\nSingapore River\nCCR\n99\n2021-09-17\n2120-09-17\n96\n96\n84\nBuilding\n\n\nTENGGIRIA\n6350000\n3016.07\n2105\n2023-07-21\n23 JALAN TENGGIRI\nResale\nLand\n280.20\n22662\n-\nTerrace House\n1\nFreehold\n-\nHDB\n428269\n15\n42\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nNA\n\n\nMCMAHON PARK\n7300000\n3750.18\n1947\n2023-07-24\n34 JALAN JELITA\nResale\nLand\n348.40\n20953\n-\nSemi-Detached House\n1\n999 yrs from 21/06/1877\n-\nPrivate\n276316\n10\n27\nCentral Region\nBukit Timah\nCCR\n999\n1877-06-21\n2876-06-21\n852\n852\n80\nNA\n\n\nN.A.\n8800000\n4937.45\n1782\n2023-07-24\n17A POOLE ROAD\nResale\nLand\n458.70\n19185\n-\nSemi-Detached House\n1\nFreehold\n1964\nHDB\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nHILLCREST PARK\n6880000\n2555.37\n2692\n2023-07-24\n182 HILLCREST ROAD\nResale\nLand\n237.40\n28981\n-\nTerrace House\n1\nFreehold\n1972\nPrivate\n289035\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n15\nBefore 2000s\n\n\nENG AUN PARK\n7778888\n2361.62\n3294\n2023-07-24\n8 JALAN NOVENA SELATAN\nNew Sale\nLand\n219.40\n35455\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nPrivate\n308563\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBuilding\n\n\nBAN GUAN PARK\n8800000\n3359.44\n2619\n2023-07-24\n17 GREENLEAF PLACE\nResale\nLand\n312.10\n28196\n-\nSemi-Detached House\n1\nFreehold\n1987\nPrivate\n279251\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nEDEN PARK\n8480000\n3209.82\n2642\n2023-07-25\n22 FIR AVENUE\nResale\nLand\n298.20\n28437\n-\nSemi-Detached House\n1\nFreehold\n1991\nPrivate\n276721\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nN.A.\n11750000\n2109.74\n5569\n2023-07-26\n288 RIVER VALLEY ROAD\nResale\nLand\n196.00\n59949\n-\nApartment\n1\nFreehold\n-\nPrivate\n278535\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nNA\n\n\nPEBBLE BAY\n9000000\n6113.95\n1472\n2023-07-26\n130 TANJONG RHU ROAD #17-16\nResale\nStrata\n568.00\n15845\n-\nCondominium\n1\n99 yrs from 09/03/1994\n1997\nPrivate\n436918\n15\n43\nCentral Region\nKallang\nRCR\n99\n1994-03-09\n2093-03-09\n68\n68\n9\nBefore 2000s\n\n\nN.A.\n8600000\n3746.95\n2295\n2023-07-26\n16 LORONG MARICAN\nNew Sale\nLand\n348.10\n24706\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nPrivate\n278535\n14\n41\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBuilding\n\n\nN.A.\n11500000\n2070.99\n5553\n2023-07-26\n286 RIVER VALLEY ROAD\nResale\nLand\n192.40\n59771\n-\nApartment\n1\nFreehold\n-\nPrivate\n278535\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nNA\n\n\nN.A.\n15000000\n8098.83\n1852\n2023-07-27\n23 LIM TAI SEE WALK\nResale\nLand\n752.40\n19936\n-\nDetached House\n1\nFreehold\n1989\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nN.A.\n8000000\n3658.68\n2187\n2023-07-28\n4,6 LORONG 12 GEYLANG\nResale\nLand\n339.90\n23536\n-\nSemi-Detached House\n2\nFreehold\n-\nPrivate\n278535\n14\n39\nCentral Region\nGeylang\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nWEST SEA GARDENS\n6700000\n3781.39\n1772\n2023-07-28\n31 JALAN PELEPAH\nResale\nLand\n351.30\n19072\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n119431\n5\n11\nCentral Region\nQueenstown\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nN.A.\n6400000\n7464.83\n857\n2023-07-28\n93 SENNETT TERRACE\nResale\nLand\n693.50\n9229\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n278535\n16\n46\nEast Region\nBedok\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nNA\n\n\nBEVERLY HILL\n18000000\n7556.33\n2382\n2023-07-28\n61 GRANGE ROAD #23-01\nResale\nStrata\n702.00\n25641\n-\nCondominium\n1\nFreehold\n1983\nPrivate\n249570\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBefore 2000s\n\n\nN.A.\n6880000\n3438.02\n2001\n2023-07-28\n60C MEYER ROAD\nResale\nLand\n319.40\n21540\n-\nSemi-Detached House\n1\nFreehold\n1992\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nN.A.\n8600000\n6125.79\n1404\n2023-07-28\n17 SEA AVENUE\nResale\nLand\n569.10\n15112\n-\nDetached House\n1\nFreehold\n1951\nPrivate\n278535\n15\n42\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nHOCK SENG PARK\n7500000\n3954.69\n1896\n2023-07-31\n36 JALAN JAMBU AYER\nResale\nLand\n367.40\n20414\n-\nSemi-Detached House\n1\nFreehold\n1967\nPrivate\n588686\n21\n58\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nBefore 2000s\n\n\nMCMAHON PARK\n10380000\n3547.81\n2926\n2023-07-31\n14 JALAN ISTIMEWA\nResale\nLand\n329.60\n31493\n-\nSemi-Detached House\n1\n999 yrs from 21/06/1877\n1967\nPrivate\n276316\n10\n27\nCentral Region\nBukit Timah\nCCR\n999\n1877-06-21\n2876-06-21\n852\n852\n80\nBefore 2000s\n\n\nKIMNAN PARK\n8200000\n3532.74\n2321\n2023-07-31\n93 JALAN SELAMAT\nResale\nLand\n328.20\n24985\n-\nTerrace House\n1\nFreehold\n1983\nPrivate\n416477\n14\n41\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nBefore 2000s\n\n\nAMBER SKYE\n7500000\n5059.08\n1482\n2023-07-31\n8 AMBER ROAD #01-03\nResale\nStrata\n470.00\n15957\n-\nApartment\n1\nFreehold\n2017\nPrivate\n439853\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n13\nAfter 2000s\n\n\nFABER HILLS\n6500000\n4073.10\n1596\n2023-07-31\n35 FABER WALK\nResale\nLand\n378.40\n17178\n-\nSemi-Detached House\n1\nFreehold\n1977\nPrivate\n128951\n5\n12\nWest Region\nClementi\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nN.A.\n10388000\n4326.05\n2401\n2023-08-01\n33 STEVENS CLOSE\nResale\nLand\n401.90\n25847\n-\nSemi-Detached House\n1\nFreehold\n1984\nPrivate\n278535\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nOPERA ESTATE\n9950000\n6004.16\n1657\n2023-08-03\n11 CARMEN STREET\nResale\nLand\n557.80\n17838\n-\nDetached House\n1\nFreehold\n-\nPrivate\n454847\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\n3 ORCHARD BY-THE-PARK\n11000000\n2830.93\n3886\n2023-08-03\n3 ORCHARD BOULEVARD #02-01\nResale\nStrata\n263.00\n41825\n-\nCondominium\n1\nFreehold\n2017\nPrivate\n248653\n10\n24\nCentral Region\nOrchard\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nBRADDELL HEIGHTS ESTATE\n10500000\n4429.39\n2371\n2023-08-03\n1B COTSWOLD CLOSE\nResale\nLand\n411.50\n25516\n-\nDetached House\n1\nFreehold\n2022\nPrivate\n357708\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nLANDED HOUSING DEVELOPMENT\n8000000\n2346.55\n3409\n2023-08-03\n6 BO SENG AVENUE\nNew Sale\nLand\n218.00\n36697\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nN.A\n308942\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBuilding\n\n\nCAPITOL PARK\n8800000\n4269.00\n2061\n2023-08-04\n34 JALAN SEJARAH\nResale\nLand\n396.60\n22189\n-\nSemi-Detached House\n1\nFreehold\n1968\nPrivate\n297893\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nN.A.\n9680000\n3332.53\n2905\n2023-08-04\n16 ROBIN CLOSE\nResale\nLand\n309.60\n31266\n-\nSemi-Detached House\n1\nFreehold\n1999\nPrivate\n278535\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nLANDED HOUSING DEVELOPMENT\n7580000\n2271.20\n3337\n2023-08-07\n4 BO SENG AVENUE\nNew Sale\nLand\n211.00\n35924\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nN.A\n308942\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBuilding\n\n\nHONG KONG PARK\n9900000\n5546.69\n1785\n2023-08-08\n93 HUA GUAN AVENUE\nResale\nLand\n515.30\n19212\n-\nSemi-Detached House\n1\n999 yrs from 07/05/1879\n-\nPrivate\n588324\n21\n58\nCentral Region\nBukit Timah\nOCR\n999\n1879-05-07\n2878-05-07\n854\n854\n40\nNA\n\n\nBAN GUAN PARK\n13054800\n3955.77\n3300\n2023-08-08\n6 GREENLEAF LANE\nResale\nLand\n367.50\n35523\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n279251\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nTHE OLIV\n7600000\n3336.84\n2278\n2023-08-08\n11C BALMORAL ROAD #05-01\nResale\nStrata\n310.00\n24516\n-\nApartment\n1\nFreehold\n2013\nPrivate\n259798\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nN.A.\n11538000\n9982.53\n1156\n2023-08-10\n13 SIMON PLACE\nResale\nLand\n927.40\n12441\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n19\n54\nNorth East Region\nHougang\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nNA\n\n\nPASIR RIS BEACH PARK\n6600000\n5248.53\n1257\n2023-08-10\n32 PASIR RIS AVENUE\nResale\nLand\n487.60\n13536\n-\nSemi-Detached House\n1\n999 yrs from 10/02/1874\n1976\nPrivate\n518653\n18\n51\nEast Region\nPasir Ris\nOCR\n999\n1874-02-10\n2873-02-10\n849\n849\n40\nBefore 2000s\n\n\nFABER HILLS\n6850000\n4780.29\n1433\n2023-08-14\n11 FABER GROVE\nResale\nLand\n444.10\n15424\n-\nSemi-Detached House\n1\nFreehold\n1977\nPrivate\n128951\n5\n12\nWest Region\nClementi\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nN.A.\n9000000\n4789.98\n1879\n2023-08-14\n12D SIME ROAD\nResale\nLand\n445.00\n20225\n-\nSemi-Detached House\n1\nFreehold\n1981\nPrivate\n278535\n11\n28\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nTHE TRIZON\n11000000\n7082.71\n1553\n2023-08-14\n2 RIDGEWOOD CLOSE #23-03\nResale\nStrata\n658.00\n16717\n-\nCondominium\n1\nFreehold\n2012\nPrivate\n276698\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n8900000\n4271.16\n2084\n2023-08-15\n30 GOODMAN ROAD\nResale\nLand\n396.80\n22429\n-\nSemi-Detached House\n1\nFreehold\n1992\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nTHOMSON RISE ESTATE\n9500000\n5600.51\n1696\n2023-08-16\n15A JALAN BERJAYA\nResale\nLand\n520.30\n18259\n-\nDetached House\n1\nFreehold\n-\nPrivate\n578519\n20\n57\nCentral Region\nBishan\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nHOLLAND GARDENS\n11230000\n3923.48\n2862\n2023-08-16\n25 MOONBEAM VIEW\nResale\nLand\n364.50\n30809\n-\nSemi-Detached House\n1\n999 yrs from 06/10/1885\n2023\nPrivate\n277279\n10\n27\nCentral Region\nBukit Timah\nCCR\n999\n1885-10-06\n2884-10-06\n860\n860\n80\nAfter 2000s\n\n\nCALDECOTT HILL ESTATE\n22000000\n11082.61\n1985\n2023-08-16\n11 CALDECOTT CLOSE\nResale\nLand\nNA\n21368\n-\nDetached House\n1\nFreehold\n1997\nPrivate\n299120\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nN.A.\n9360000\n6690.90\n1399\n2023-08-17\n106 TOH YI DRIVE\nResale\nLand\n621.60\n15058\n-\nSemi-Detached House\n1\nFreehold\n1979\nHDB\n278535\n21\n59\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nBefore 2000s\n\n\nPARK NOVA\n6646000\n1431.61\n4642\n2023-08-17\n18 TOMLINSON ROAD #13-02\nNew Sale\nStrata\n133.00\n49970\n-\nApartment\n1\nFreehold\nUncompleted\nPrivate\n247858\n10\n24\nCentral Region\nOrchard\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\nWATTEN ESTATE\n10500888\n4503.66\n2332\n2023-08-17\n54 WATTEN ESTATE ROAD\nResale\nLand\n418.40\n25098\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n287121\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nCANNINGHILL PIERS\n8616000\n2787.88\n3091\n2023-08-21\n1 CLARKE QUAY #25-01\nNew Sale\nStrata\n259.00\n33266\n-\nApartment\n1\n99 yrs from 17/09/2021\nUncompleted\nPrivate\n179882\n6\n17\nCentral Region\nSingapore River\nCCR\n99\n2021-09-17\n2120-09-17\n96\n96\n84\nBuilding\n\n\nN.A.\n7650000\n5430.44\n1409\n2023-08-21\n27A BRIGHTON CRESCENT\nResale\nLand\n504.50\n15164\n-\nDetached House\n1\nFreehold\n2007\nPrivate\n278535\n19\n55\nNorth East Region\nSerangoon\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nAfter 2000s\n\n\nBAN GUAN PARK\n10000000\n4643.59\n2154\n2023-08-21\n54 GREENLEAF VIEW\nResale\nLand\n431.40\n23180\n-\nSemi-Detached House\n1\nFreehold\n1993\nPrivate\n279251\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nCLEMENTI PARK\n12380000\n5910.51\n2095\n2023-08-22\n52 SUNSET VIEW\nResale\nLand\n549.10\n22546\n-\nDetached House\n1\nFreehold\n-\nPrivate\n597159\n21\n59\nWest Region\nClementi\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nNA\n\n\nGRANGE INFINITE\n7250000\n2680.24\n2705\n2023-08-25\n27 GRANGE ROAD #18-02\nResale\nStrata\n249.00\n29116\n-\nCondominium\n1\nFreehold\n2011\nPrivate\n239700\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nENG AUN PARK\n7585800\n2484.33\n3053\n2023-08-25\n6 JALAN NOVENA SELATAN\nNew Sale\nLand\n230.80\n32867\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nPrivate\n308563\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBuilding\n\n\nRAFFLES PARK\n25300000\n11070.77\n2285\n2023-08-25\n17 CASSIA DRIVE\nResale\nLand\nNA\n24599\n-\nDetached House\n1\nFreehold\n1998\nPrivate\n288706\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nAALTO\n6300000\n2443.43\n2578\n2023-08-28\n193 MEYER ROAD #24-08\nResale\nStrata\n227.00\n27753\n-\nCondominium\n1\nFreehold\n2010\nPrivate\n437981\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n9\nAfter 2000s\n\n\nN.A.\n10500000\n4416.47\n2377\n2023-08-28\n1D MAYFIELD AVENUE\nResale\nLand\n410.30\n25591\n-\nDetached House\n1\nFreehold\n2024\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nBRADDELL HEIGHTS ESTATE\n20300000\n14274.14\n1422\n2023-08-29\n15 LYNWOOD GROVE\nResale\nLand\nNA\n15308\n-\nDetached House\n1\nFreehold\n-\nPrivate\n357708\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nTHE CONTINUUM\n6406000\n2260.44\n2834\n2023-08-29\n2 THIAM SIEW AVENUE #18-25\nNew Sale\nStrata\n210.00\n30505\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n436841\n15\n43\nCentral Region\nGeylang\nRCR\nNA\nNA\nNA\nNA\nFreehold\n13\nBuilding\n\n\nBISHOPSGATE RESIDENCES\n10698888\n2949.34\n3628\n2023-08-30\n1 BISHOPSGATE #01-03\nResale\nStrata\n274.00\n39047\n-\nCondominium\n1\nFreehold\n2012\nPrivate\n247676\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nBISHOPSGATE RESIDENCES\n9398888\n2432.66\n3864\n2023-08-30\n1 BISHOPSGATE #03-04\nResale\nStrata\n226.00\n41588\n-\nCondominium\n1\nFreehold\n2012\nPrivate\n247676\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n8300000\n5350.78\n1551\n2023-08-30\n9 STIRLING ROAD\nResale\nLand\n497.10\n16697\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n3\n14\nCentral Region\nQueenstown\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nHOLLAND GARDENS\n8000000\n3982.68\n2009\n2023-08-30\n10 MOONBEAM DRIVE\nResale\nLand\n370.00\n21622\n-\nSemi-Detached House\n1\n999 yrs from 06/10/1885\n-\nPrivate\n277279\n10\n27\nCentral Region\nBukit Timah\nCCR\n999\n1885-10-06\n2884-10-06\n860\n860\n80\nNA\n\n\nWATTEN ESTATE\n10750000\n4709.25\n2283\n2023-08-31\n58 WATTEN VIEW\nResale\nLand\n437.50\n24571\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n287121\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nSPRINGWOOD\n6338000\n2946.11\n2151\n2023-09-01\n7 SPRINGWOOD HEIGHT\nResale\nLand\n273.70\n23157\n-\nTerrace House\n1\nFreehold\n1990\nPrivate\n117995\n5\n11\nCentral Region\nQueenstown\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nBefore 2000s\n\n\nN.A.\n8600000\n4291.61\n2004\n2023-09-01\n12F BROADRICK ROAD\nResale\nLand\n398.70\n21570\n-\nSemi-Detached House\n1\nFreehold\n1989\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nHILLCREST PARK\n9150000\n3219.51\n2842\n2023-09-04\n165 HILLCREST ROAD\nResale\nLand\n299.10\n30592\n-\nSemi-Detached House\n1\nFreehold\n2012\nPrivate\n289035\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nN.A.\n9430000\n4438.00\n2125\n2023-09-04\n41 SUNSET VIEW\nResale\nLand\n412.30\n22872\n-\nDetached House\n1\nFreehold\n2015\nPrivate\n278535\n21\n59\nWest Region\nClementi\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nAfter 2000s\n\n\nNASSIM PARK RESIDENCES\n14000000\n3476.77\n4027\n2023-09-05\n17 NASSIM ROAD #04-09\nResale\nStrata\n323.00\n43344\n-\nCondominium\n1\nFreehold\n2011\nPrivate\n258462\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nDUKE’S GARDEN\n12200000\n3773.86\n3233\n2023-09-05\n18A PRINCESS OF WALES ROAD\nResale\nLand\n350.60\n34797\n-\nSemi-Detached House\n1\n999 yrs from 27/12/1875\n2017\nPrivate\n266912\n10\n26\nCentral Region\nBukit Timah\nCCR\n999\n1875-12-27\n2874-12-27\n851\n851\n80\nAfter 2000s\n\n\nTAI YUAN GARDEN\n8300000\n6277.56\n1322\n2023-09-06\n8 TAI YUAN HEIGHTS\nResale\nLand\n583.20\n14232\n-\nDetached House\n1\nFreehold\n1979\nPrivate\n555180\n19\n55\nNorth East Region\nSerangoon\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nBefore 2000s\n\n\nDUNEARN ESTATE\n18000888\n4857.79\n3706\n2023-09-07\n18A DALKEITH ROAD\nResale\nLand\n451.30\n39887\n-\nDetached House\n1\nFreehold\n-\nPrivate\n297633\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nSERANGOON GARDEN ESTATE\n8300000\n4797.51\n1730\n2023-09-07\n11 RIPLEY CRESCENT\nResale\nLand\n445.70\n18622\n-\nDetached House\n1\n999 yrs from 01/01/1953\n2002\nPrivate\n554920\n19\n55\nNorth East Region\nSerangoon\nOCR\n999\n1953-01-01\n2952-01-01\n928\n928\n45\nAfter 2000s\n\n\nEMERALD HILL CONSERVATION AREA\n8800000\n1932.14\n4555\n2023-09-08\n53 EMERALD HILL ROAD\nResale\nLand\n179.50\n49025\n-\nTerrace House\n1\nFreehold\n-\nPrivate\n228270\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n15\nNA\n\n\nHILLCREST PARK\n11580000\n3630.70\n3189\n2023-09-08\n177E HILLCREST ROAD\nResale\nLand\n337.30\n34331\n-\nSemi-Detached House\n1\nFreehold\n2023\nPrivate\n289035\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nN.A.\n8080000\n4062.33\n1989\n2023-09-08\n16A LORNIE ROAD\nResale\nLand\n377.40\n21410\n-\nSemi-Detached House\n1\nFreehold\n1990\nPrivate\n278535\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nEMERALD HILL CONSERVATION AREA\n11000000\n2360.55\n4660\n2023-09-08\n30 SAUNDERS ROAD\nResale\nLand\n219.30\n50160\n-\nTerrace House\n1\nFreehold\n-\nPrivate\n228270\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n15\nNA\n\n\nSPRINGLEAF GREEN\n7070000\n4406.78\n1604\n2023-09-11\n66 SPRINGLEAF CRESCENT\nResale\nLand\n409.40\n17269\n-\nDetached House\n1\nFreehold\n2005\nPrivate\n786381\n26\n78\nNorth Region\nYishun\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nAfter 2000s\n\n\nEMERALD HILL CONSERVATION AREA\n6500000\n2746.97\n2366\n2023-09-11\n108 EMERALD HILL ROAD\nResale\nStrata\n255.20\n25470\n-\nApartment\n1\n9999 yrs from 01/01/1958\n-\nPrivate\n228270\n9\n22\nCentral Region\nNewton\nCCR\n9999\n1958-01-01\n11957-01-01\n9939\n9939\n84\nNA\n\n\nYUNNAN GARDENS\n7000000\n6564.96\n1066\n2023-09-12\n6 YUNNAN WALK 1\nResale\nLand\n609.90\n11477\n-\nDetached House\n1\nFreehold\n1997\nPrivate\n638016\n22\n63\nWest Region\nJurong West\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nBefore 2000s\n\n\nJERVOISVILLE\n21020000\n11642.34\n1805\n2023-09-13\n37 JERVOIS ROAD\nResale\nLand\nNA\n19434\n-\nDetached House\n1\nFreehold\n1989\nPrivate\n249020\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nN.A.\n6500000\n2413.29\n2693\n2023-09-14\n8 JALAN LAPANG\nResale\nLand\n224.20\n28992\n-\nTerrace House\n1\nFreehold\n-\nPrivate\n278535\n14\n41\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nNA\n\n\nDALVEY HAUS\n7000000\n2163.56\n3235\n2023-09-15\n101 DALVEY ROAD #01-05\nNew Sale\nStrata\n201.00\n34826\n-\nCondominium\n1\nFreehold\n2023\nN.A\n259514\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nHILLCREST PARK\n10530000\n6184.99\n1703\n2023-09-16\n45A GREENMEAD AVENUE\nResale\nLand\n574.60\n18326\n-\nDetached House\n1\nFreehold\n-\nPrivate\n289035\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nTHE CASCADIA\n7260000\n4714.63\n1540\n2023-09-20\n927 BUKIT TIMAH ROAD #10-15\nResale\nStrata\n438.00\n16575\n-\nCondominium\n1\nFreehold\n2010\nPrivate\n589640\n21\n58\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n1\nAfter 2000s\n\n\nMING TECK PARK\n8528000\n3346.53\n2548\n2023-09-22\n79 MING TECK PARK\nResale\nLand\n310.90\n27430\n-\nSemi-Detached House\n1\n999 yrs from 01/09/1876\n-\nPrivate\n276612\n10\n27\nCentral Region\nBukit Timah\nCCR\n999\n1876-09-01\n2875-09-01\n851\n851\n80\nNA\n\n\nSHAMROCK PARK\n14500000\n6567.12\n2208\n2023-09-22\n25 NAMLY CRESCENT\nResale\nLand\n610.10\n23767\n-\nDetached House\n1\nFreehold\n-\nPrivate\n267130\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nN.A.\n7250000\n6345.38\n1143\n2023-09-25\n20 HAPPY AVENUE CENTRAL\nResale\nLand\n589.50\n12299\n-\nSemi-Detached House\n1\nFreehold\n1958\nPrivate\n278535\n13\n36\nCentral Region\nGeylang\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nN.A.\n6700000\n2691.00\n2490\n2023-09-26\n139 JOO CHIAT TERRACE\nResale\nLand\n250.00\n26800\n-\nTerrace House\n1\nFreehold\n1972\nPrivate\n278535\n15\n42\nCentral Region\nGeylang\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nBefore 2000s\n\n\nN.A.\n12280000\n4905.15\n2503\n2023-09-27\n1A BUCKLEY ROAD\nResale\nLand\n455.70\n26948\n-\nSemi-Detached House\n1\nFreehold\n1993\nPrivate\n278535\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nGOODWOOD RESIDENCE\n32000000\n10710.18\n2988\n2023-09-27\n263 BUKIT TIMAH ROAD #12-18\nResale\nStrata\n995.00\n32161\n-\nCondominium\n1\nFreehold\n2013\nPrivate\n259704\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n16100000\n14198.79\n1134\n2023-09-27\n3 PALM ROAD\nResale\nLand\nNA\n12205\n-\nDetached House\n1\nFreehold\n1985\nPrivate\n278535\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nGALLOP GREEN\n7850000\n3229.20\n2431\n2023-09-27\n19 WOOLLERTON PARK #03-21\nResale\nStrata\n300.00\n26167\n-\nCondominium\n1\nFreehold\n2002\nPrivate\n257536\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n8430000\n3904.10\n2159\n2023-09-28\n1A SURIN LANE\nNew Sale\nLand\n362.70\n23242\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nPrivate\n278535\n19\n53\nNorth East Region\nHougang\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nBuilding\n\n\nWATTEN ESTATE\n10300000\n4037.58\n2551\n2023-09-28\n5 WATTEN VIEW\nResale\nLand\n375.10\n27459\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n287121\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nGOODWOOD RESIDENCE\n7280000\n2454.19\n2966\n2023-09-28\n263 BUKIT TIMAH ROAD #07-12\nResale\nStrata\n228.00\n31930\n-\nCondominium\n1\nFreehold\n2013\nPrivate\n259704\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nREGINA HILL\n9400000\n4933.14\n1905\n2023-09-28\n38 JALAN KAKATUA\nResale\nLand\n458.30\n20511\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n598557\n21\n59\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nNA\n\n\nN.A.\n11800000\n7046.11\n1675\n2023-10-02\n104B CORONATION ROAD WEST\nResale\nLand\n654.60\n18026\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nFRANKEL ESTATE\n10300000\n5534.85\n1861\n2023-10-02\n25 FRANKEL AVENUE\nResale\nLand\n514.20\n20031\n-\nDetached House\n1\nFreehold\n1961\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nN.A.\n7680000\n4998.80\n1536\n2023-10-02\n31 JALAN WARINGIN\nResale\nLand\n464.40\n16537\n-\nDetached House\n1\nFreehold\n1994\nPrivate\n278535\n14\n41\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nSHAMROCK PARK\n8000000\n3978.37\n2011\n2023-10-03\n59 NAMLY CRESCENT\nResale\nLand\n369.60\n21645\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n267130\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nCAMELOT BY-THE-WATER\n6710000\n3035.45\n2211\n2023-10-04\n112 TANJONG RHU ROAD #16-01\nResale\nStrata\n282.00\n23794\n-\nCondominium\n1\n99 yrs from 07/06/1996\n2000\nPrivate\n436929\n15\n43\nCentral Region\nKallang\nRCR\n99\n1996-06-07\n2095-06-07\n71\n71\n9\nAfter 2000s\n\n\nTHE AVENIR\n7800000\n2066.69\n3774\n2023-10-04\n10 RIVER VALLEY CLOSE #36-10\nSub Sale\nStrata\n192.00\n40625\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n238432\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nSIGLAP PARK\n6300000\n3322.85\n1896\n2023-10-06\n84 WOO MON CHEW ROAD\nResale\nLand\n308.70\n20408\n-\nDetached House\n1\nFreehold\n2018\nPrivate\n455070\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nUE SQUARE\n6275000\n3089.27\n2031\n2023-10-06\n205 RIVER VALLEY ROAD #18-52\nResale\nStrata\n287.00\n21864\n-\nApartment\n1\n929 yrs from 01/01/1953\n1997\nPrivate\n238274\n9\n23\nCentral Region\nSingapore River\nCCR\n929\n1953-01-01\n2882-01-01\n858\n858\n84\nBefore 2000s\n\n\nFRANKEL ESTATE\n8800000\n3236.73\n2719\n2023-10-06\n9 BURNFOOT TERRACE\nResale\nLand\n300.70\n29265\n-\nSemi-Detached House\n1\nFreehold\n1954\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nN.A.\n7800000\n4318.52\n1806\n2023-10-06\n148G LORONG KISMIS\nResale\nLand\n401.20\n19442\n-\nSemi-Detached House\n1\nFreehold\n2022\nPrivate\n278535\n21\n59\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nAfter 2000s\n\n\nHILLVIEW GARDEN ESTATE\n7540000\n4853.49\n1554\n2023-10-09\n12 JALAN ZAMRUD\nResale\nLand\n450.90\n16722\n-\nTerrace House\n1\nFreehold\n-\nPrivate\n668606\n23\n66\nWest Region\nBukit Batok\nOCR\nNA\nNA\nNA\nNA\nFreehold\n8\nNA\n\n\nN.A.\n13136750\n4777.06\n2750\n2023-10-09\n51A HUA GUAN AVENUE\nResale\nLand\n443.80\n29601\n-\nDetached House\n1\n999 yrs from 07/05/1879\n2019\nPrivate\n278535\n21\n58\nCentral Region\nBukit Timah\nOCR\n999\n1879-05-07\n2878-05-07\n854\n854\n45\nAfter 2000s\n\n\nCAPITOL PARK\n10900000\n4194.73\n2598\n2023-10-09\n1 JALAN UNGGAS\nResale\nLand\n389.70\n27970\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n297893\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nMIDTOWN MODERN\n6425000\n1808.35\n3553\n2023-10-09\n18 TAN QUEE LAN STREET #25-17\nNew Sale\nStrata\n168.00\n38244\n-\nApartment\n1\n99 yrs from 10/12/2019\nUncompleted\nPrivate\n188105\n7\n18\nCentral Region\nDowntown Core\nCCR\n99\n2019-12-10\n2118-12-10\n94\n94\n84\nBuilding\n\n\nN.A.\n13600000\n4773.83\n2849\n2023-10-11\n14 ROBIN LANE\nResale\nLand\n443.50\n30665\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n278535\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nBISHOPSGATE RESIDENCES\n22000000\n6081.66\n3617\n2023-10-16\n1 BISHOPSGATE #01-08\nResale\nStrata\n565.00\n38938\n-\nCondominium\n1\nFreehold\n2012\nPrivate\n247676\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nBOULEVARD 88\n6500000\n1776.06\n3660\n2023-10-16\n86 ORCHARD BOULEVARD #13-01\nSub Sale\nStrata\n165.00\n39394\n-\nApartment\n1\nFreehold\n2023\nPrivate\n248655\n10\n24\nCentral Region\nOrchard\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nAALTO\n6300000\n2443.43\n2578\n2023-10-16\n193 MEYER ROAD #20-08\nResale\nStrata\n227.00\n27753\n-\nCondominium\n1\nFreehold\n2010\nPrivate\n437981\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n9\nAfter 2000s\n\n\nBEAUFORT ON NASSIM\n6860000\n2174.33\n3155\n2023-10-16\n12 NASSIM ROAD #02-06\nResale\nStrata\n202.00\n33960\n-\nCondominium\n1\nFreehold\n2008\nPrivate\n258380\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nHILLCREST PARK\n7600000\n2392.84\n3176\n2023-10-16\n15 GREENWOOD AVENUE\nResale\nLand\n222.30\n34188\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n289035\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nSERANGOON GARDEN ESTATE\n7300000\n4194.73\n1740\n2023-10-17\n79 CROWHURST DRIVE\nResale\nLand\n389.70\n18732\n-\nSemi-Detached House\n1\n999 yrs from 01/01/1955\n1991\nPrivate\n554920\n19\n55\nNorth East Region\nSerangoon\nOCR\n999\n1955-01-01\n2954-01-01\n930\n930\n40\nBefore 2000s\n\n\nONE PEARL BANK\n7100000\n2787.88\n2547\n2023-10-18\n1 PEARL BANK #38-13\nNew Sale\nStrata\n259.00\n27413\n-\nApartment\n1\n99 yrs from 01/03/2019\nUncompleted\nPrivate\n169016\n3\n16\nCentral Region\nOutram\nRCR\n99\n2019-03-01\n2118-03-01\n93\n93\n13\nBuilding\n\n\nN.A.\n9088800\n6189.30\n1468\n2023-10-18\n442A DUNEARN ROAD\nResale\nLand\n575.00\n15807\n-\nSemi-Detached House\n1\nFreehold\n1989\nPrivate\n278535\n11\n28\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nN.A.\n7980000\n4335.74\n1841\n2023-10-18\n159 ENG KONG GARDEN\nResale\nLand\n402.80\n19811\n-\nDetached House\n1\nFreehold\n1997\nPrivate\n278535\n21\n59\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nBefore 2000s\n\n\nMARINA BAY RESIDENCES\n6900000\n2368.08\n2914\n2023-10-18\n18 MARINA BOULEVARD #30-10\nResale\nStrata\n220.00\n31364\n-\nCondominium\n1\n99 yrs from 11/10/2005\n2010\nPrivate\n018980\n1\n01\nCentral Region\nDowntown Core\nCCR\n99\n2005-10-11\n2104-10-11\n80\n80\n170\nAfter 2000s\n\n\nGRANGE RESIDENCES\n8540000\n2669.47\n3199\n2023-10-18\n91 GRANGE ROAD #05-04\nResale\nStrata\n248.00\n34435\n-\nCondominium\n1\nFreehold\n2004\nPrivate\n249613\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n8400000\n4463.83\n1882\n2023-10-20\n59E CHUN TIN ROAD\nResale\nLand\n414.70\n20256\n-\nSemi-Detached House\n1\nFreehold\n1998\nPrivate\n278535\n21\n59\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nBefore 2000s\n\n\nCORAL PARK\n10668000\n5600.51\n1905\n2023-10-20\n84 JALAN PEMIMPIN\nResale\nLand\n520.30\n20504\n-\nDetached House\n1\nFreehold\n1994\nPrivate\n575986\n20\n57\nCentral Region\nBishan\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nDUNEARN ESTATE\n17100000\n6412.11\n2667\n2023-10-20\n4 TREVOSE CRESCENT\nResale\nLand\n595.70\n28706\n-\nDetached House\n1\nFreehold\n-\nPrivate\n297633\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nMEIER SUITES\n6700000\n4165.67\n1608\n2023-10-23\n10 MARGATE ROAD #18-01\nResale\nStrata\n387.00\n17313\n-\nCondominium\n1\nFreehold\n2012\nPrivate\n438051\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n9\nAfter 2000s\n\n\nCAPITOL PARK\n18500000\n11022.34\n1678\n2023-10-25\n1 CHEE HOON AVENUE\nResale\nLand\n1024.00\n18066\n-\nDetached House\n1\nFreehold\n1973\nHDB\n297893\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nAMBER SKYE\n7400000\n5177.48\n1429\n2023-10-26\n8 AMBER ROAD #01-01\nResale\nStrata\n481.00\n15385\n-\nApartment\n1\nFreehold\n2017\nPrivate\n439853\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n13\nAfter 2000s\n\n\nFABER HILLS\n7000000\n4196.88\n1668\n2023-10-26\n8 FABER WALK\nResale\nLand\n389.90\n17953\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n128951\n5\n12\nWest Region\nClementi\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nN.A.\n24800000\n15318.25\n1619\n2023-10-27\n20A KING ALBERT PARK\nResale\nLand\n1423.10\n17427\n-\nDetached House\n1\nFreehold\n1996\nPrivate\n278535\n21\n59\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nBefore 2000s\n\n\nHARVEY VIEW\n8680000\n5286.20\n1642\n2023-10-27\n46 HARVEY CRESCENT\nResale\nLand\n491.10\n17675\n-\nSemi-Detached House\n1\nFreehold\n1991\nPrivate\n489409\n16\n48\nEast Region\nTampines\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nBefore 2000s\n\n\nN.A.\n7528888\n1723.32\n4369\n2023-10-30\n13A GROVE DRIVE\nNew Sale\nLand\n160.10\n47026\n-\nTerrace House\n1\nFreehold\nUncompleted\nPrivate\n278535\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n15\nBuilding\n\n\nWEST COAST GARDENS\n7300000\n4627.44\n1578\n2023-10-31\n2 WEST COAST PARK\nResale\nLand\n429.90\n16981\n-\nDetached House\n1\n956 yrs from 27/05/1928\n1997\nPrivate\n127005\n5\n12\nWest Region\nClementi\nRCR\n956\n1928-05-27\n2884-05-27\n860\n860\n61\nBefore 2000s\n\n\nWATTEN ESTATE\n10268000\n3035.45\n3383\n2023-10-31\n1B PARK VALE\nNew Sale\nLand\n282.00\n36411\n-\nTerrace House\n1\n999 yrs from 01/05/1874\nUncompleted\nPrivate\n287121\n11\n28\nCentral Region\nBukit Timah\nCCR\n999\n1874-05-01\n2873-05-01\n849\n849\n15\nBuilding\n\n\nWEST COAST GARDENS\n6500000\n4477.82\n1452\n2023-11-01\n51 WEST COAST LANE\nResale\nLand\n416.00\n15625\n-\nTerrace House\n1\n956 yrs from 27/05/1928\n1976\nPrivate\n127005\n5\n12\nWest Region\nClementi\nRCR\n956\n1928-05-27\n2884-05-27\n860\n860\n15\nBefore 2000s\n\n\nN.A.\n22000000\n8401.30\n2619\n2023-11-02\n24 LAKESHORE VIEW\nResale\nLand\n780.50\n28187\n-\nDetached House\n1\n99 yrs from 28/11/2005\n2009\nPrivate\n278535\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2005-11-28\n2104-11-28\n80\n80\n78\nAfter 2000s\n\n\n8 NAPIER\n6780000\n2012.87\n3368\n2023-11-02\n8 NAPIER ROAD #08-04\nResale\nStrata\n187.00\n36257\n-\nCondominium\n1\nFreehold\n2010\nPrivate\n258502\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nHOCK SENG PARK\n7650000\n2937.50\n2604\n2023-11-03\n18 JALAN JAMBU AYER\nResale\nLand\n272.90\n28032\n-\nSemi-Detached House\n1\nFreehold\n2008\nPrivate\n588686\n21\n58\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nAfter 2000s\n\n\nYONG AN PARK\n8300000\n3433.72\n2417\n2023-11-03\n329 RIVER VALLEY ROAD #20-03\nResale\nStrata\n319.00\n26019\n-\nCondominium\n1\nFreehold\n1986\nPrivate\n238357\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBefore 2000s\n\n\nSHEPHERD’S HILL ESTATE\n8250000\n5199.01\n1587\n2023-11-03\n7 BARBARY WALK\nResale\nLand\n483.00\n17081\n-\nDetached House\n1\nFreehold\n-\nPrivate\n149003\n3\n14\nCentral Region\nQueenstown\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nSERANGOON GARDEN ESTATE\n6480000\n2942.88\n2202\n2023-11-03\n36 WORTHING ROAD\nResale\nLand\n273.40\n23702\n-\nSemi-Detached House\n1\n999 yrs from 01/01/1955\n-\nPrivate\n554920\n19\n55\nNorth East Region\nSerangoon\nOCR\n999\n1955-01-01\n2954-01-01\n930\n930\n40\nNA\n\n\nDALVEY HAUS\n7500000\n2163.56\n3467\n2023-11-06\n101 DALVEY ROAD #01-06\nNew Sale\nStrata\n201.00\n37313\n-\nCondominium\n1\nFreehold\n2023\nPrivate\n259514\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nHENRY PARK\n8800000\n2394.99\n3674\n2023-11-08\n13 GROVE DRIVE\nNew Sale\nLand\n222.50\n39551\n-\nTerrace House\n1\nFreehold\nUncompleted\nPrivate\n279049\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n15\nBuilding\n\n\nN.A.\n12380000\n4798.59\n2580\n2023-11-08\n442B HOLLAND ROAD\nResale\nLand\n445.80\n27770\n-\nDetached House\n1\nFreehold\n2019\nPrivate\n278535\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nN.A.\n8100000\n6024.61\n1344\n2023-11-08\n13 JALAN TELITI\nResale\nLand\n559.70\n14472\n-\nDetached House\n1\nFreehold\n1987\nPrivate\n278535\n19\n53\nNorth East Region\nHougang\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nBefore 2000s\n\n\nORCHID VILLAGE\n6500000\n4822.27\n1348\n2023-11-08\n27A VANDA CRESCENT\nResale\nStrata\n448.00\n14509\n-\nDetached House\n1\nFreehold\n2009\nPrivate\n287811\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nN.A.\n15500000\n8248.45\n1879\n2023-11-08\n20 BRIGHTON CRESCENT\nResale\nLand\n766.30\n20227\n-\nDetached House\n1\nFreehold\n2019\nPrivate\n278535\n19\n55\nNorth East Region\nSerangoon\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nAfter 2000s\n\n\nCAPITOL PARK\n26700000\n11064.32\n2413\n2023-11-09\n46 CHEE HOON AVENUE\nResale\nLand\n1027.90\n25975\n-\nDetached House\n1\nFreehold\n1958\nPrivate\n297893\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nBOULEVARD 88\n6600000\n1776.06\n3716\n2023-11-09\n86 ORCHARD BOULEVARD #10-01\nSub Sale\nStrata\n165.00\n40000\n-\nApartment\n1\nFreehold\n2023\nPrivate\n248655\n10\n24\nCentral Region\nOrchard\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nN.A.\n11200000\n3923.48\n2855\n2023-11-14\n91 CLUNY PARK ROAD\nResale\nLand\n364.50\n30727\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n278535\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nCLIVEDEN AT GRANGE\n9800000\n2841.70\n3449\n2023-11-14\n106 GRANGE ROAD #20-05\nResale\nStrata\n264.00\n37121\n-\nCondominium\n1\nFreehold\n2011\nPrivate\n249592\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nLANDED HOUSING DEVELOPMENT\n33888000\n10998.66\n3081\n2023-11-14\n31 MOUNT ROSIE ROAD\nNew Sale\nLand\n1021.80\n33165\n-\nDetached House\n1\nFreehold\nUncompleted\nPrivate\n308942\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBuilding\n\n\nTAI HWAN GARDEN\n7000000\n4608.07\n1519\n2023-11-14\n63 TAI HWAN HEIGHTS\nResale\nLand\n428.10\n16351\n-\nDetached House\n1\nFreehold\n1979\nPrivate\n555226\n19\n55\nNorth East Region\nSerangoon\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nBefore 2000s\n\n\nN.A.\n8458200\n5699.54\n1484\n2023-11-15\n72 LANGSAT ROAD\nResale\nLand\n529.50\n15974\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n15\n42\nCentral Region\nGeylang\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nADELPHI PARK ESTATE\n6600000\n2699.61\n2445\n2023-11-15\n36 GARDENIA ROAD\nResale\nLand\n250.80\n26316\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n576162\n20\n57\nCentral Region\nBishan\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nN.A.\n26388888\n14575.53\n1810\n2023-11-15\n20 THIRD AVENUE\nResale\nLand\n1354.10\n19488\n-\nDetached House\n1\nFreehold\n1995\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nGRANGE INFINITE\n7350000\n2680.24\n2742\n2023-11-16\n27 GRANGE ROAD #20-02\nResale\nStrata\n249.00\n29518\n-\nCondominium\n1\nFreehold\n2011\nPrivate\n239700\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nBOTANIKA\n7600000\n2906.28\n2615\n2023-11-16\n50 HOLLAND ROAD #03-06\nResale\nStrata\n270.00\n28148\n-\nApartment\n1\nFreehold\n2008\nPrivate\n258853\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nWATTEN HOUSE\n11745000\n3412.19\n3432\n2023-11-17\n38 SHELFORD ROAD #05-09\nNew Sale\nStrata\n317.00\n36946\n11,712,000\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7564000\n2368.08\n3194\n2023-11-17\n40 SHELFORD ROAD #03-13\nNew Sale\nStrata\n220.00\n34382\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n14245000\n4079.56\n3484\n2023-11-17\n40 SHELFORD ROAD #05-13\nNew Sale\nStrata\n379.00\n37499\n14,212,000\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7729000\n2368.08\n3264\n2023-11-17\n40 SHELFORD ROAD #05-14\nNew Sale\nStrata\n220.00\n35132\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7427000\n2368.08\n3136\n2023-11-17\n46 SHELFORD ROAD #04-26\nNew Sale\nStrata\n220.00\n33759\n-\nCondominium\n1\nFreehold\nUncompleted\nHDB\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nNASSIM JADE\n15200000\n5747.98\n2644\n2023-11-17\n3 NASSIM ROAD #04-07\nResale\nStrata\n534.00\n28464\n-\nCondominium\n1\nFreehold\n1997\nPrivate\n258371\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBefore 2000s\n\n\nSHAMROCK PARK\n25200000\n11086.92\n2273\n2023-11-17\n12 NAMLY HILL\nResale\nLand\n1030.00\n24466\n-\nDetached House\n1\nFreehold\n1998\nPrivate\n267130\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nN.A.\n7800000\n4315.29\n1808\n2023-11-17\n148F LORONG KISMIS\nResale\nLand\n400.90\n19456\n-\nSemi-Detached House\n1\nFreehold\n2022\nPrivate\n278535\n21\n59\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nAfter 2000s\n\n\nWATTEN HOUSE\n7649000\n2368.08\n3230\n2023-11-18\n40 SHELFORD ROAD #04-13\nNew Sale\nStrata\n220.00\n34768\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7649000\n2368.08\n3230\n2023-11-18\n40 SHELFORD ROAD #03-14\nNew Sale\nStrata\n220.00\n34768\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7539000\n2368.08\n3184\n2023-11-18\n40 SHELFORD ROAD #02-14\nNew Sale\nStrata\n220.00\n34268\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7649000\n2368.08\n3230\n2023-11-18\n40 SHELFORD ROAD #04-14\nNew Sale\nStrata\n220.00\n34768\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7619000\n2368.08\n3217\n2023-11-18\n42 SHELFORD ROAD #03-15\nNew Sale\nStrata\n220.00\n34632\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7659000\n2368.08\n3234\n2023-11-18\n42 SHELFORD ROAD #05-15\nNew Sale\nStrata\n220.00\n34814\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7539000\n2368.08\n3184\n2023-11-18\n42 SHELFORD ROAD #02-15\nNew Sale\nStrata\n220.00\n34268\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7619000\n2368.08\n3217\n2023-11-18\n42 SHELFORD ROAD #04-15\nNew Sale\nStrata\n220.00\n34632\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7619000\n2368.08\n3217\n2023-11-18\n42 SHELFORD ROAD #04-16\nNew Sale\nStrata\n220.00\n34632\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7550000\n2368.08\n3188\n2023-11-18\n46 SHELFORD ROAD #05-26\nNew Sale\nStrata\n220.00\n34318\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7569000\n2368.08\n3196\n2023-11-18\n46 SHELFORD ROAD #02-27\nNew Sale\nStrata\n220.00\n34405\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7649000\n2368.08\n3230\n2023-11-18\n46 SHELFORD ROAD #03-27\nNew Sale\nStrata\n220.00\n34768\n-\nCondominium\n1\nFreehold\nUncompleted\nHDB\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7569000\n2368.08\n3196\n2023-11-18\n46 SHELFORD ROAD #01-27\nNew Sale\nStrata\n220.00\n34405\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7649000\n2368.08\n3230\n2023-11-18\n46 SHELFORD ROAD #04-27\nNew Sale\nStrata\n220.00\n34768\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7787000\n2368.08\n3288\n2023-11-18\n48 SHELFORD ROAD #04-28\nNew Sale\nStrata\n220.00\n35395\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7787000\n2368.08\n3288\n2023-11-18\n48 SHELFORD ROAD #03-28\nNew Sale\nStrata\n220.00\n35395\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7749000\n2368.08\n3272\n2023-11-18\n48 SHELFORD ROAD #04-29\nNew Sale\nStrata\n220.00\n35223\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7749000\n2368.08\n3272\n2023-11-18\n48 SHELFORD ROAD #03-29\nNew Sale\nStrata\n220.00\n35223\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7539000\n2368.08\n3184\n2023-11-19\n40 SHELFORD ROAD #02-13\nNew Sale\nStrata\n220.00\n34268\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nTHE AVENIR\n8600000\n2411.14\n3567\n2023-11-20\n10 RIVER VALLEY CLOSE #34-11\nSub Sale\nStrata\n224.00\n38393\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n238432\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nTHE GREENWOOD\n6680000\n2341.17\n2853\n2023-11-20\n1 GREENWOOD LANE\nResale\nLand\n217.50\n30713\n-\nTerrace House\n1\nFreehold\n2007\nPrivate\n286911\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n15\nAfter 2000s\n\n\nWATTEN HOUSE\n7677000\n2368.08\n3242\n2023-11-20\n46 SHELFORD ROAD #03-26\nNew Sale\nStrata\n220.00\n34895\n-\nCondominium\n1\nFreehold\nUncompleted\nHDB\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n14496000\n4079.56\n3545\n2023-11-20\n48 SHELFORD ROAD #05-28\nNew Sale\nStrata\n379.00\n38161\n14,463,000\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7742000\n2368.08\n3269\n2023-11-20\n48 SHELFORD ROAD #05-29\nNew Sale\nStrata\n220.00\n35191\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nN.A.\n15750000\n8174.18\n1927\n2023-11-20\n43 GENTLE ROAD\nResale\nLand\n759.40\n20740\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n278535\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nWATTEN HOUSE\n7706000\n2368.08\n3254\n2023-11-21\n42 SHELFORD ROAD #01-15\nNew Sale\nStrata\n220.00\n35027\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7788000\n2368.08\n3289\n2023-11-21\n42 SHELFORD ROAD #03-16\nNew Sale\nStrata\n220.00\n35400\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nN.A.\n6550000\n2614.58\n2505\n2023-11-21\n4A STILL LANE\nResale\nLand\n242.90\n26966\n-\nTerrace House\n1\nFreehold\n-\nHDB\n278535\n15\n42\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nNA\n\n\nN.A.\n10680000\n3248.58\n3288\n2023-11-22\n16A TAN SIM BOH ROAD\nResale\nLand\n301.80\n35388\n-\nSemi-Detached House\n1\nFreehold\n2023\nPrivate\n278535\n11\n30\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nBAN GUAN PARK\n8680000\n4140.91\n2096\n2023-11-22\n40 GREENLEAF VIEW\nResale\nLand\n384.70\n22563\n-\nSemi-Detached House\n1\nFreehold\n1973\nPrivate\n279251\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nN.A.\n10800000\n6768.40\n1596\n2023-11-22\n243 HOLLAND ROAD\nResale\nLand\n628.80\n17176\n-\nDetached House\n1\nFreehold\n1959\nPrivate\n278535\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nBARTLEY RISE\n7500000\n3604.86\n2081\n2023-11-22\n35 JALAN LABU AYER\nResale\nLand\n334.90\n22395\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n538047\n19\n53\nNorth East Region\nSerangoon\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nNA\n\n\nTHE SOVEREIGN\n6500000\n2637.18\n2465\n2023-11-23\n99 MEYER ROAD #06-01\nResale\nStrata\n245.00\n26531\n-\nCondominium\n1\nFreehold\n1993\nPrivate\n437920\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n9\nBefore 2000s\n\n\nHILLVIEW ESTATE\n6388888\n4474.59\n1428\n2023-11-23\n96 JALAN DERMAWAN\nResale\nLand\n415.70\n15369\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n668622\n23\n66\nWest Region\nBukit Batok\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nNA\n\n\nMIDTOWN MODERN\n6537000\n1808.35\n3615\n2023-11-24\n18 TAN QUEE LAN STREET #26-17\nNew Sale\nStrata\n168.00\n38911\n-\nApartment\n1\n99 yrs from 10/12/2019\nUncompleted\nPrivate\n188105\n7\n18\nCentral Region\nDowntown Core\nCCR\n99\n2019-12-10\n2118-12-10\n94\n94\n84\nBuilding\n\n\n8 NAPIER\n6700000\n2012.87\n3329\n2023-11-24\n8 NAPIER ROAD #06-02\nResale\nStrata\n187.00\n35829\n-\nCondominium\n1\nFreehold\n2010\nPrivate\n258502\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nMCMAHON PARK\n25250000\n12086.90\n2089\n2023-11-24\n6 TAN BOON CHONG AVENUE\nResale\nLand\n1122.90\n22486\n-\nDetached House\n1\nFreehold\n-\nPrivate\n276316\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nSPRING PARK ESTATE\n7500000\n6512.22\n1152\n2023-11-28\n54 JALAN REMIS\nResale\nLand\n605.00\n12397\n-\nDetached House\n1\nFreehold\n-\nHDB\n467251\n16\n46\nEast Region\nBedok\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nNA\n\n\nWATTEN HOUSE\n7706000\n2368.08\n3254\n2023-11-28\n42 SHELFORD ROAD #02-16\nNew Sale\nStrata\n220.00\n35027\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nN.A.\n10028000\n5616.66\n1785\n2023-11-29\n29 SEA AVENUE\nResale\nLand\n521.80\n19218\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n15\n42\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nHOCK SENG PARK\n8850000\n3516.60\n2517\n2023-11-30\n28 JALAN JAMBU MAWAR\nResale\nLand\n326.70\n27089\n-\nSemi-Detached House\n1\n999 yrs from 01/06/1875\n1967\nPrivate\n588686\n21\n58\nCentral Region\nBukit Timah\nOCR\n999\n1875-06-01\n2874-06-01\n850\n850\n40\nBefore 2000s\n\n\nWATTEN ESTATE\n7388888\n4351.89\n1698\n2023-12-01\n638 DUNEARN ROAD\nResale\nLand\n404.30\n18276\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n287121\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nSHAMROCK PARK\n8300000\n3956.85\n2098\n2023-12-04\n18 NAMLY PLACE\nResale\nLand\n367.60\n22579\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n267130\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nEDEN PARK\n11800000\n5224.85\n2258\n2023-12-04\n21 REDWOOD AVENUE\nResale\nLand\n485.40\n24310\n-\nDetached House\n1\nFreehold\n-\nHDB\n276721\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nWATTEN HOUSE\n7595000\n2368.08\n3207\n2023-12-04\n46 SHELFORD ROAD #02-26\nNew Sale\nStrata\n220.00\n34523\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nTHE GLYNDEBOURNE\n7000000\n3562.88\n1965\n2023-12-04\n38 TREVOSE CRESCENT #05-05\nResale\nStrata\n331.00\n21148\n-\nCondominium\n1\nFreehold\n2013\nPrivate\n297722\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nSHEPHERD’S HILL ESTATE\n8480000\n5037.55\n1683\n2023-12-05\n10 SHEPHERDS DRIVE\nResale\nLand\n468.00\n18120\n-\nDetached House\n1\nFreehold\n-\nPrivate\n149003\n3\n14\nCentral Region\nQueenstown\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nKIM LIN PARK\n9500000\n3163.54\n3003\n2023-12-06\n23 JALAN KELAWAR\nResale\nLand\n293.90\n32324\n-\nSemi-Detached House\n1\nFreehold\n1993\nPrivate\n249264\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nWATERFALL GARDENS\n7100000\n3379.90\n2101\n2023-12-07\n12 FARRER ROAD #11-10\nResale\nStrata\n314.00\n22611\n-\nCondominium\n1\nFreehold\n2010\nPrivate\n268820\n10\n26\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n13660000\n6555.28\n2084\n2023-12-07\n2 PEARL ISLAND\nResale\nLand\n609.00\n22430\n-\nDetached House\n1\n99 yrs from 03/03/2008\n2012\nHDB\n278535\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2008-03-03\n2107-03-03\n82\n82\n78\nAfter 2000s\n\n\nN.A.\n8580000\n4049.42\n2119\n2023-12-11\n30 MARYLAND DRIVE\nResale\nLand\n376.20\n22807\n-\nSemi-Detached House\n1\n999 yrs from 01/09/1876\n-\nPrivate\n278535\n10\n27\nCentral Region\nBukit Timah\nCCR\n999\n1876-09-01\n2875-09-01\n851\n851\n80\nNA\n\n\nTHE ORCHARD RESIDENCES\n8300000\n2464.96\n3367\n2023-12-11\n238 ORCHARD BOULEVARD #22-07\nResale\nStrata\n229.00\n36245\n-\nApartment\n1\n99 yrs from 13/03/2006\n2010\nPrivate\n237973\n9\n23\nCentral Region\nOrchard\nCCR\n99\n2006-03-13\n2105-03-13\n80\n80\n84\nAfter 2000s\n\n\nN.A.\n11338000\n5239.92\n2164\n2023-12-12\n26 WAREHAM ROAD\nResale\nLand\n486.80\n23291\n-\nDetached House\n1\nFreehold\n1997\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nCORALS AT KEPPEL BAY\n8400000\n3024.68\n2777\n2023-12-13\n7 KEPPEL BAY DRIVE #02-12\nResale\nStrata\n281.00\n29893\n-\nCondominium\n1\n99 yrs from 26/02/2007\n2016\nPrivate\n098013\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2007-02-26\n2106-02-26\n81\n81\n170\nAfter 2000s\n\n\nFARRER GARDENS\n7820000\n2517.70\n3106\n2023-12-14\n3 QUEEN’S ROAD\nResale\nLand\n233.90\n33433\n-\nSemi-Detached House\n1\nFreehold\n2004\nPrivate\n266734\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nWATTEN HOUSE\n14391000\n4079.56\n3520\n2023-12-14\n46 SHELFORD ROAD #05-27\nNew Sale\nStrata\n379.00\n37884\n14,358,000\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nFABER HILLS\n7100000\n4222.72\n1681\n2023-12-15\n32 FABER AVENUE\nResale\nLand\n392.30\n18098\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n128951\n5\n12\nWest Region\nClementi\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nGREENBANK PARK\n9100000\n4048.34\n2248\n2023-12-15\n16 GREENBANK PARK\nResale\nLand\n376.10\n24196\n-\nSemi-Detached House\n1\nFreehold\n1981\nPrivate\n589377\n21\n58\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nBefore 2000s\n\n\nMIDTOWN MODERN\n6350000\n1808.35\n3511\n2023-12-16\n16 TAN QUEE LAN STREET #25-10\nNew Sale\nStrata\n168.00\n37798\n-\nApartment\n1\n99 yrs from 10/12/2019\nUncompleted\nPrivate\n188105\n7\n18\nCentral Region\nDowntown Core\nCCR\n99\n2019-12-10\n2118-12-10\n94\n94\n84\nBuilding\n\n\nTHE CLAYMORE\n11680000\n3347.60\n3489\n2023-12-20\n27 CLAYMORE ROAD #24-02\nResale\nStrata\n311.00\n37556\n-\nCondominium\n1\nFreehold\n1985\nPrivate\n229544\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBefore 2000s\n\n\nFRANKEL ESTATE\n9180000\n5853.46\n1568\n2023-12-22\n76A DUNBAR WALK\nResale\nLand\n543.80\n16881\n-\nSemi-Detached House\n1\nFreehold\n1957\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nCANNINGHILL PIERS\n8808000\n2787.88\n3159\n2023-12-24\n1 CLARKE QUAY #31-01\nNew Sale\nStrata\n259.00\n34008\n-\nApartment\n1\n99 yrs from 17/09/2021\nUncompleted\nN.A\n179882\n6\n17\nCentral Region\nSingapore River\nCCR\n99\n2021-09-17\n2120-09-17\n96\n96\n84\nBuilding\n\n\nD’LEEDON\n7888888\n4251.78\n1855\n2023-12-27\n11 LEEDON HEIGHTS #35-30\nResale\nStrata\n395.00\n19972\n-\nCondominium\n1\n99 yrs from 08/04/2010\n2014\nPrivate\n267955\n10\n26\nCentral Region\nBukit Timah\nCCR\n99\n2010-04-08\n2109-04-08\n84\n84\n170\nAfter 2000s\n\n\nFOUR SEASONS PARK\n12500000\n3821.22\n3271\n2023-12-28\n12 CUSCADEN WALK #18-01\nResale\nStrata\n355.00\n35211\n-\nCondominium\n1\nFreehold\n1994\nPrivate\n249693\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBefore 2000s\n\n\nST REGIS RESIDENCES SINGAPORE\n7200000\n2755.58\n2613\n2023-12-28\n33 TANGLIN ROAD #10-09\nResale\nStrata\n256.00\n28125\n-\nApartment\n1\n999 yrs from 24/11/1995\n2008\nPrivate\n247913\n10\n24\nCentral Region\nOrchard\nCCR\n999\n1995-11-24\n2994-11-24\n971\n971\n84\nAfter 2000s\n\n\nOXLEY RESIDENCE\n7800000\n3616.70\n2157\n2023-12-28\n51A OXLEY ROAD #04-03\nResale\nStrata\n336.00\n23214\n-\nCondominium\n1\nFreehold\n2014\nPrivate\n238675\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n15000000\n11309.73\n1326\n2023-12-28\n1A EAST COAST TERRACE\nSub Sale\nLand\n1050.70\n14276\n-\nSemi-Detached House\n1\nFreehold\nUncompleted\nPrivate\n278535\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBuilding\n\n\nWATTEN HOUSE\n14157000\n4079.56\n3462\n2023-12-29\n42 SHELFORD ROAD #05-16\nNew Sale\nStrata\n379.00\n37266\n14,124,000\nCondominium\n1\nFreehold\nUncompleted\nN.A\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nORCHID VILLAGE\n13100000\n3667.29\n3572\n2024-01-02\n51 VANDA ROAD\nResale\nLand\n340.70\n38450\n-\nSemi-Detached House\n1\nFreehold\n2022\nPrivate\n287811\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nWATTEN HOUSE\n7706000\n2368.08\n3254\n2024-01-02\n40 SHELFORD ROAD #01-13\nNew Sale\nStrata\n220.00\n35027\n-\nCondominium\n1\nFreehold\nUncompleted\nHDB\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nN.A.\n15000000\n8701.29\n1724\n2024-01-03\n1 EAST COAST TERRACE\nNew Sale\nLand\n808.37\n18556\n-\nDetached House\n1\nFreehold\nUncompleted\nPrivate\n278535\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBuilding\n\n\nFRANKEL ESTATE\n8380000\n4514.42\n1856\n2024-01-05\n111 SIGLAP ROAD\nNew Sale\nLand\n419.40\n19981\n-\nDetached House\n1\nFreehold\nUncompleted\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBuilding\n\n\nN.A.\n26500000\n12870.51\n2059\n2024-01-05\n119 GALLOP PARK ROAD\nResale\nLand\n1195.70\n22163\n-\nDetached House\n1\nFreehold\n1984\nPrivate\n278535\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nN.A.\n13990000\n5880.37\n2379\n2024-01-08\n57 DUCHESS AVENUE\nResale\nLand\n546.30\n25609\n-\nDetached House\n1\n999 yrs from 27/12/1875\n-\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\n999\n1875-12-27\n2874-12-27\n851\n851\n78\nNA\n\n\nN.A.\n6300000\n3059.13\n2059\n2024-01-08\n4 PLANTATION AVENUE\nResale\nLand\n284.20\n22167\n-\nTerrace House\n1\nFreehold\n2021\nPrivate\n278535\n19\n55\nNorth East Region\nSerangoon\nOCR\nNA\nNA\nNA\nNA\nFreehold\n8\nAfter 2000s\n\n\nTHE RITZ-CARLTON RESIDENCES SINGAPORE CAIRNHILL\n16500000\n3056.98\n5397\n2024-01-09\n65 CAIRNHILL ROAD #33-01\nResale\nStrata\n284.00\n58099\n-\nApartment\n1\nFreehold\n2011\nPrivate\n229721\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nTHE RITZ-CARLTON RESIDENCES SINGAPORE CAIRNHILL\n16500000\n3056.98\n5397\n2024-01-09\n65 CAIRNHILL ROAD #33-02\nResale\nStrata\n284.00\n58099\n-\nApartment\n1\nFreehold\n2011\nPrivate\n229721\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nAfter 2000s\n\n\nMAYFLOWER GARDENS\n6980000\n4084.94\n1709\n2024-01-09\n25 MAYFLOWER CRESCENT\nResale\nLand\n379.50\n18393\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n568552\n20\n56\nNorth East Region\nAng Mo Kio\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nTHE RESERVE RESIDENCES\n8098520\n2809.40\n2883\n2024-01-10\n13 JALAN ANAK BUKIT #32-102\nNew Sale\nStrata\n261.00\n31029\n-\nApartment\n1\n99 yrs from 29/11/2021\nUncompleted\nN.A\n589605\n21\n58\nCentral Region\nBukit Timah\nOCR\n99\n2021-11-29\n2120-11-29\n96\n96\n5\nBuilding\n\n\nSELETAR HILLS ESTATE\n8800000\n8302.27\n1060\n2024-01-11\n69 NERAM ROAD\nResale\nLand\n771.30\n11409\n-\nDetached House\n1\n999 yrs from 01/01/1879\n-\nPrivate\n807079\n28\n80\nNorth East Region\nSerangoon\nOCR\n999\n1879-01-01\n2878-01-01\n854\n854\n45\nNA\n\n\nWATTEN HOUSE\n12236000\n3412.19\n3576\n2024-01-12\n44 SHELFORD ROAD #05-21\nNew Sale\nStrata\n317.00\n38495\n12,203,000\nCondominium\n1\nFreehold\nUncompleted\nN.A\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nN.A.\n13400000\n6447.64\n2078\n2024-01-12\n112 ARTHUR ROAD\nResale\nLand\n599.00\n22371\n-\nDetached House\n1\nFreehold\n1962\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nN.A.\n11500000\n6016.00\n1912\n2024-01-15\n46 CORONATION ROAD\nResale\nLand\n558.90\n20576\n-\nSemi-Detached House\n1\nFreehold\n1994\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nTHE LADYHILL\n8700000\n3810.46\n2283\n2024-01-15\n1 LADY HILL ROAD #04-08\nResale\nStrata\n354.00\n24576\n-\nCondominium\n1\nFreehold\n2002\nPrivate\n258670\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nDUNEARN ESTATE\n17500000\n5012.79\n3491\n2024-01-16\n3B HARLYN ROAD\nResale\nLand\n465.70\n37578\n-\nDetached House\n1\nFreehold\n2015\nPrivate\n297633\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nFRANKEL ESTATE\n6300000\n3827.68\n1646\n2024-01-17\n80 FRANKEL AVENUE\nResale\nLand\n355.60\n17717\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nFRANKEL ESTATE\n9500000\n5634.95\n1686\n2024-01-18\n1 SIGLAP HILL\nResale\nLand\n523.50\n18147\n-\nDetached House\n1\nFreehold\n1956\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nMEYERHOUSE\n9280000\n2970.86\n3124\n2024-01-20\n128 MEYER ROAD #04-09\nResale\nStrata\n276.00\n33623\n-\nCondominium\n1\nFreehold\n2022\nPrivate\n437938\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n9\nAfter 2000s\n\n\nORCHID VILLAGE\n12000000\n7033.20\n1706\n2024-01-22\n4 VANDA DRIVE\nResale\nLand\n653.40\n18365\n-\nDetached House\n1\nFreehold\n2023\nPrivate\n287811\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nGRANGE RESIDENCES\n8500000\n2583.36\n3290\n2024-01-22\n93 GRANGE ROAD #14-06\nResale\nStrata\n240.00\n35417\n-\nCondominium\n1\nFreehold\n2004\nPrivate\n249613\n10\n24\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nFRANKEL ESTATE\n7800000\n2537.07\n3074\n2024-01-23\n54 BOWMONT GARDENS\nResale\nLand\n235.70\n33093\n-\nSemi-Detached House\n1\nFreehold\n1955\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nARDMORE II\n6960000\n2023.63\n3439\n2024-01-23\n1 ARDMORE PARK #28-01\nResale\nStrata\n188.00\n37021\n-\nCondominium\n1\nFreehold\n2010\nPrivate\n259962\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n6225093\n4054.80\n1535\n2024-01-23\n9 ROSYTH AVENUE\nResale\nLand\n376.70\n16525\n-\nSemi-Detached House\n1\nFreehold\n2003\nPrivate\n278535\n19\n54\nNorth East Region\nHougang\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nAfter 2000s\n\n\nSHAMROCK PARK\n9180000\n3736.18\n2457\n2024-01-24\n2A NAMLY GARDEN\nResale\nLand\n347.10\n26448\n-\nSemi-Detached House\n1\nFreehold\n2009\nPrivate\n267130\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nN.A.\n6900000\n4194.73\n1645\n2024-01-25\n13 JALAN LATEH\nResale\nLand\n389.70\n17706\n-\nSemi-Detached House\n1\nFreehold\n2008\nPrivate\n278535\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nAfter 2000s\n\n\nNASSIM JADE\n9250000\n3379.90\n2737\n2024-01-25\n3 NASSIM ROAD #02-01\nResale\nStrata\n314.00\n29459\n-\nCondominium\n1\nFreehold\n1997\nPrivate\n258371\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBefore 2000s\n\n\nLEONIE TOWERS\n6238800\n3250.73\n1919\n2024-01-25\n28 LEONIE HILL #18-30\nResale\nStrata\n302.00\n20658\n-\nApartment\n1\nFreehold\n1976\nPrivate\n239222\n9\n23\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBefore 2000s\n\n\nYONG SENG ESTATE\n7800000\n7004.13\n1114\n2024-01-26\n18L JALAN PARAS\nResale\nLand\n650.70\n11987\n-\nDetached House\n1\nFreehold\n1979\nPrivate\n418383\n14\n41\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nN.A.\n15200000\n6599.41\n2303\n2024-01-29\n65 WILKINSON ROAD\nResale\nLand\n613.10\n24792\n-\nSemi-Detached House\n1\nFreehold\n1972\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nSHAMROCK PARK\n10750000\n4554.25\n2360\n2024-01-30\n25 NAMLY RISE\nResale\nLand\n423.10\n25408\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n267130\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nCORALS AT KEPPEL BAY\n6300000\n2572.60\n2449\n2024-01-31\n3 KEPPEL BAY DRIVE #02-05\nResale\nStrata\n239.00\n26360\n-\nCondominium\n1\n99 yrs from 26/02/2007\n2016\nPrivate\n098013\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2007-02-26\n2106-02-26\n81\n81\n170\nAfter 2000s\n\n\nTHE GLYNDEBOURNE\n7338000\n3562.88\n2060\n2024-02-01\n38 TREVOSE CRESCENT #05-26\nResale\nStrata\n331.00\n22169\n-\nCondominium\n1\nFreehold\n2013\nPrivate\n297722\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nISLAND PARK\n7700000\n3524.13\n2185\n2024-02-01\n63 JALAN TAMBUR\nResale\nLand\n327.40\n23519\n-\nSemi-Detached House\n1\nFreehold\n2011\nPrivate\n576824\n20\n57\nCentral Region\nBishan\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nAfter 2000s\n\n\nBRADDELL HEIGHTS ESTATE\n16800000\n14288.13\n1176\n2024-02-06\n8 SUNDRIDGE PARK ROAD\nResale\nLand\n1327.40\n12656\n-\nDetached House\n1\nFreehold\n1992\nPrivate\n357708\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nTERRA HILL\n8050000\n3035.45\n2652\n2024-02-06\n20 YEW SIANG ROAD #05-26\nNew Sale\nStrata\n282.00\n28546\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n118993\n5\n11\nCentral Region\nQueenstown\nRCR\nNA\nNA\nNA\nNA\nFreehold\n13\nBuilding\n\n\nN.A.\n19500000\n10345.28\n1885\n2024-02-08\n56 GARLICK AVENUE\nResale\nLand\n961.10\n20289\n-\nDetached House\n1\nFreehold\n1979\nPrivate\n278535\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nTHE OCEANFRONT @ SENTOSA COVE\n8100000\n4865.33\n1665\n2024-02-08\n285 OCEAN DRIVE #11-06\nResale\nStrata\n452.00\n17920\n-\nCondominium\n1\n99 yrs from 10/08/2005\n2010\nPrivate\n098527\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2005-08-10\n2104-08-10\n80\n80\n170\nAfter 2000s\n\n\nDUNEARN ESTATE\n14300000\n4583.31\n3120\n2024-02-08\n31A BERRIMA ROAD\nResale\nLand\n425.80\n33584\n-\nDetached House\n1\nFreehold\n2017\nPrivate\n297633\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nN.A.\n9900000\n4033.27\n2455\n2024-02-09\n18 PRINCE OF WALES ROAD\nResale\nLand\n374.70\n26421\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nNA\n\n\nN.A.\n10600000\n7004.13\n1513\n2024-02-13\n9 LUCKY HEIGHTS\nResale\nLand\n650.70\n16290\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n16\n46\nEast Region\nBedok\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nNA\n\n\nN.A.\n12250000\n6835.14\n1792\n2024-02-14\n27 LORONG 32 GEYLANG\nResale\nLand\n635.00\n19291\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n14\n39\nCentral Region\nGeylang\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nNANYANG PARK\n6800000\n2981.63\n2281\n2024-02-14\n193 YIO CHU KANG ROAD\nResale\nLand\n277.00\n24549\n-\nTerrace House\n1\n999 yrs from 14/02/1881\n-\nPrivate\n545640\n19\n54\nNorth East Region\nSerangoon\nOCR\n999\n1881-02-14\n2880-02-14\n856\n856\n8\nNA\n\n\nN.A.\n11080000\n7458.38\n1486\n2024-02-15\n78 LORONG G TELOK KURAU\nResale\nLand\n692.90\n15991\n-\nSemi-Detached House\n1\nFreehold\n1996\nPrivate\n278535\n15\n42\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nN.A.\n9666666\n7305.53\n1323\n2024-02-15\n17 WOLSKEL ROAD\nResale\nLand\n678.70\n14243\n-\nDetached House\n1\nFreehold\n-\nPrivate\n278535\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nARDMORE PARK\n12900000\n2884.75\n4472\n2024-02-16\n9 ARDMORE PARK #26-02\nResale\nStrata\n268.00\n48134\n-\nCondominium\n1\nFreehold\n2001\nPrivate\n259957\n10\n25\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nHILLCREST PARK\n10500000\n3337.92\n3146\n2024-02-16\n11 GREENMEAD AVENUE\nResale\nLand\n310.10\n33860\n-\nSemi-Detached House\n1\nFreehold\n2018\nHDB\n289035\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nSEAVIEW PARK\n9168000\n3400.35\n2696\n2024-02-16\n4 JALAN SEDAP\nResale\nLand\n315.90\n29022\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n438260\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nFRANKEL ESTATE\n10128888\n5999.85\n1688\n2024-02-19\n10 SIGLAP HILL\nResale\nLand\n557.40\n18172\n-\nDetached House\n1\nFreehold\n1956\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nBefore 2000s\n\n\nN.A.\n16000000\n8674.71\n1844\n2024-02-19\n258 OCEAN DRIVE\nResale\nLand\n805.90\n19854\n-\nDetached House\n1\n99 yrs from 01/12/2005\n2007\nPrivate\n278535\n4\n09\nCentral Region\nSouthern Islands\nCCR\n99\n2005-12-01\n2104-12-01\n80\n80\n78\nAfter 2000s\n\n\nHILLTOPS\n8500000\n2389.61\n3557\n2024-02-21\n101 CAIRNHILL CIRCLE #17-12\nResale\nStrata\n222.00\n38288\n-\nCondominium\n1\nFreehold\n2011\nPrivate\n229809\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nTHE LAURELS\n9000000\n4768.45\n1887\n2024-02-21\n38 CAIRNHILL ROAD #19-08\nResale\nStrata\n443.00\n20316\n-\nCondominium\n1\nFreehold\n2013\nPrivate\n229658\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n8911888\n4079.56\n2185\n2024-02-21\n1 CROUCHER ROAD\nResale\nLand\n379.00\n23514\n-\nDetached House\n1\nFreehold\n2013\nPrivate\n278535\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nSELETAR HILLS ESTATE\n7108000\n3541.36\n2007\n2024-02-21\n59 JALAN REDOP\nResale\nLand\n329.00\n21605\n-\nSemi-Detached House\n1\n999 yrs from 01/01/1879\n-\nPrivate\n807079\n28\n80\nNorth East Region\nSerangoon\nOCR\n999\n1879-01-01\n2878-01-01\n854\n854\n40\nNA\n\n\nCHANGI GROVE\n7000000\n6028.92\n1161\n2024-02-21\n24 LENGKOK MARIAM\nResale\nLand\n560.10\n12498\n-\nDetached House\n1\nFreehold\n2002\nPrivate\n508650\n17\n50\nEast Region\nPasir Ris\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nAfter 2000s\n\n\nN.A.\n7200000\n3440.17\n2093\n2024-02-22\n8 HAPPY AVENUE CENTRAL\nResale\nLand\n319.60\n22528\n-\nSemi-Detached House\n1\nFreehold\n1958\nHDB\n278535\n13\n36\nCentral Region\nGeylang\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nCHOON SING GARDEN\n7000000\n3781.39\n1851\n2024-02-22\n105 JALAN BINCHANG\nResale\nLand\n351.30\n19926\n-\nSemi-Detached House\n1\nFreehold\n1978\nPrivate\n578572\n20\n57\nCentral Region\nBishan\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nGREEN HILL ESTATE\n15500000\n14526.02\n1067\n2024-02-23\n67 CHESTNUT DRIVE\nResale\nLand\n1349.50\n11486\n-\nDetached House\n1\n999 yrs from 25/09/1882\n1970\nPrivate\n678501\n23\n67\nWest Region\nBukit Panjang\nOCR\n999\n1882-09-25\n2881-09-25\n857\n857\n45\nBefore 2000s\n\n\nTHE GRANGE\n6380000\n2292.73\n2783\n2024-02-23\n3 GRANGE GARDEN #07-01\nResale\nStrata\n213.00\n29953\n-\nCondominium\n1\nFreehold\n2008\nPrivate\n249631\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nN.A.\n6550000\n3094.65\n2117\n2024-02-26\n824 DUNEARN ROAD\nResale\nLand\n287.50\n22783\n-\nSemi-Detached House\n1\nFreehold\n1970\nPrivate\n278535\n21\n58\nCentral Region\nBukit Timah\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nBefore 2000s\n\n\nN.A.\n17420000\n6924.48\n2516\n2024-02-26\n36 KINGSMEAD ROAD\nResale\nLand\n643.30\n27079\n-\nDetached House\n1\nFreehold\n1997\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nHILLTOPS\n13049000\n2873.99\n4540\n2024-02-26\n99 CAIRNHILL CIRCLE #12-02\nResale\nStrata\n267.00\n48873\n-\nCondominium\n1\nFreehold\n2011\nPrivate\n229809\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nCLAYMORE PLAZA\n7000000\n4208.72\n1663\n2024-02-27\n6 CLAYMORE HILL #15-01,02\nResale\nStrata\n391.00\n17903\n-\nApartment\n2\nFreehold\n1983\nPrivate\n229571\n9\n22\nCentral Region\nOrchard\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBefore 2000s\n\n\nBRADDELL HEIGHTS ESTATE\n14200000\n10223.65\n1389\n2024-02-28\n6 MATLOCK RISE\nResale\nLand\n949.80\n14951\n-\nDetached House\n1\nFreehold\n2000\nPrivate\n357708\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nTHE ORCHARD RESIDENCES\n6900000\n2174.33\n3173\n2024-02-28\n238 ORCHARD BOULEVARD #18-08\nResale\nStrata\n202.00\n34158\n-\nApartment\n1\n99 yrs from 13/03/2006\n2010\nPrivate\n237973\n9\n23\nCentral Region\nOrchard\nCCR\n99\n2006-03-13\n2105-03-13\n80\n80\n84\nAfter 2000s\n\n\nWATTEN HOUSE\n6301000\n1851.41\n3403\n2024-02-29\n44 SHELFORD ROAD #03-22\nNew Sale\nStrata\n172.00\n36634\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nFRANKEL ESTATE\n8000000\n7371.19\n1085\n2024-02-29\n46 LA SALLE STREET\nResale\nLand\n684.80\n11682\n-\nDetached House\n1\nFreehold\n-\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nWATTEN HOUSE\n7883000\n2368.08\n3329\n2024-03-01\n48 SHELFORD ROAD #02-29\nNew Sale\nStrata\n220.00\n35832\n-\nCondominium\n1\nFreehold\nUncompleted\nN.A\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nSERANGOON GARDEN ESTATE\n7028000\n6630.62\n1060\n2024-03-01\n59 CHARTWELL DRIVE\nResale\nLand\n616.00\n11409\n-\nDetached House\n1\n999 yrs from 01/01/1954\n1990\nPrivate\n554920\n19\n55\nNorth East Region\nSerangoon\nOCR\n999\n1954-01-01\n2953-01-01\n929\n929\n45\nBefore 2000s\n\n\nSELETAR HILLS ESTATE\n13530000\n10207.50\n1325\n2024-03-01\n113 MIMOSA CRESCENT\nResale\nLand\n948.30\n14268\n-\nDetached House\n1\nFreehold\n1974\nPrivate\n807079\n28\n80\nNorth East Region\nSerangoon\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nBefore 2000s\n\n\nCHIP HOCK GARDENS\n10125000\n8950.27\n1131\n2024-03-01\n21 JALAN HAROM SETANGKAI\nResale\nLand\n831.50\n12177\n-\nDetached House\n1\nFreehold\n-\nPrivate\n258810\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nNA\n\n\nWATTEN HOUSE\n11828000\n3412.19\n3457\n2024-03-03\n36 SHELFORD ROAD #05-01\nNew Sale\nStrata\n317.00\n37208\n11,795,000\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nWATTEN HOUSE\n7790000\n2368.08\n3290\n2024-03-03\n40 SHELFORD ROAD #01-14\nNew Sale\nStrata\n220.00\n35409\n-\nCondominium\n1\nFreehold\nUncompleted\nPrivate\n288433\n11\n28\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nBuilding\n\n\nSERANGOON GARDEN ESTATE\n6450000\n2810.48\n2295\n2024-03-04\n87 BRAEMAR DRIVE\nResale\nLand\n261.10\n24703\n-\nTerrace House\n1\n999 yrs from 01/01/1955\n-\nPrivate\n554920\n19\n55\nNorth East Region\nSerangoon\nOCR\n999\n1955-01-01\n2954-01-01\n930\n930\n8\nNA\n\n\nPICARDY GARDENS\n6500000\n3552.12\n1830\n2024-03-04\n122A JALAN PARI BURONG\nResale\nLand\n330.00\n19697\n-\nSemi-Detached House\n1\nFreehold\n1975\nPrivate\n488704\n16\n48\nEast Region\nBedok\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nBefore 2000s\n\n\nBRADDELL HEIGHTS ESTATE\n13500000\n9596.11\n1407\n2024-03-04\n43 CHILTERN DRIVE\nResale\nLand\n891.50\n15143\n-\nDetached House\n1\nFreehold\n-\nHDB\n357708\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nDUNEARN ESTATE\n12680000\n4793.21\n2645\n2024-03-06\n25 BERRIMA ROAD\nResale\nLand\n445.30\n28475\n-\nDetached House\n1\nFreehold\n2002\nPrivate\n297633\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nCAPITOL PARK\n8100000\n3787.85\n2138\n2024-03-06\n85 UNIVERSITY ROAD\nResale\nLand\n351.90\n23018\n-\nSemi-Detached House\n1\nFreehold\n1986\nPrivate\n297893\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nFRANKEL ESTATE\n6675000\n4145.22\n1610\n2024-03-06\n6A DUNBAR WALK\nResale\nLand\n385.10\n17333\n-\nSemi-Detached House\n1\nFreehold\n1974\nPrivate\n459901\n15\n45\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nSEA VIEW PARK\n6800000\n3230.28\n2105\n2024-03-07\n27 JALAN SEAVIEW\nResale\nLand\n300.10\n22659\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n438340\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nNA\n\n\nCORALS AT KEPPEL BAY\n8700000\n2970.86\n2928\n2024-03-07\n5 KEPPEL BAY DRIVE #04-10\nResale\nStrata\n276.00\n31522\n-\nCondominium\n1\n99 yrs from 26/02/2007\n2016\nPrivate\n098013\n4\n09\nCentral Region\nBukit Merah\nCCR\n99\n2007-02-26\n2106-02-26\n81\n81\n170\nAfter 2000s\n\n\nBRADDELL HEIGHTS ESTATE\n18800000\n12593.88\n1493\n2024-03-08\n3 COTSWOLD CLOSE\nResale\nLand\n1170.00\n16068\n-\nDetached House\n1\nFreehold\n-\nPrivate\n357708\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nNA\n\n\nVAUGHAN GARDEN\n6680000\n4045.11\n1651\n2024-03-08\n23F LORONG BIAWAK\nResale\nLand\n375.80\n17775\n-\nTerrace House\n1\nFreehold\n-\nPrivate\n358101\n13\n35\nNorth East Region\nSerangoon\nRCR\nNA\nNA\nNA\nNA\nFreehold\n15\nNA\n\n\nN.A.\n9500000\n5712.45\n1663\n2024-03-08\n43 JALAN BELANGKAS\nResale\nLand\n530.70\n17901\n-\nDetached House\n1\nFreehold\n2023\nPrivate\n278535\n13\n36\nCentral Region\nGeylang\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nN.A.\n8380000\n8009.49\n1046\n2024-03-12\n82 TELOK KURAU ROAD\nResale\nLand\n744.10\n11262\n-\nSemi-Detached House\n1\nFreehold\n1980\nPrivate\n278535\n15\n42\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nN.A.\n8600000\n4087.09\n2104\n2024-03-12\n43 JALAN LIM TAI SEE\nResale\nLand\n379.70\n22649\n-\nSemi-Detached House\n1\nFreehold\n1986\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nSERANGOON GARDEN ESTATE\n6988000\n4201.19\n1663\n2024-03-12\n35 PORTCHESTER AVENUE\nResale\nLand\n390.30\n17904\n-\nSemi-Detached House\n1\n999 yrs from 01/01/1955\n-\nPrivate\n554920\n19\n55\nNorth East Region\nSerangoon\nOCR\n999\n1955-01-01\n2954-01-01\n930\n930\n40\nNA\n\n\nDRAYCOTT EIGHT\n6280000\n2895.52\n2169\n2024-03-12\n8 DRAYCOTT PARK #08-05\nResale\nStrata\n269.00\n23346\n-\nCondominium\n1\n99 yrs from 24/10/1997\n2005\nPrivate\n259403\n10\n25\nCentral Region\nNewton\nCCR\n99\n1997-10-24\n2096-10-24\n72\n72\n170\nAfter 2000s\n\n\nN.A.\n11280000\n4473.52\n2522\n2024-03-13\n106C ARTHUR ROAD\nResale\nLand\n415.60\n27141\n-\nDetached House\n1\nFreehold\n2012\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n61\nAfter 2000s\n\n\nN.A.\n7200000\n3800.77\n1894\n2024-03-14\n6 JALAN SOTONG\nResale\nLand\n353.10\n20391\n-\nSemi-Detached House\n1\nFreehold\n1968\nPrivate\n278535\n15\n42\nEast Region\nBedok\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nDUNEARN ESTATE\n10200000\n5571.45\n1831\n2024-03-15\n91 KHEAM HOCK ROAD\nResale\nLand\n517.60\n19706\n-\nDetached House\n1\nFreehold\n1998\nPrivate\n297633\n11\n29\nCentral Region\nNovena\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nBefore 2000s\n\n\nJIN DING GARDEN\n8348000\n7500.36\n1113\n2024-03-18\n16 BEDOK WALK\nResale\nLand\n696.80\n11980\n-\nDetached House\n1\nFreehold\n-\nPrivate\n469117\n16\n46\nEast Region\nBedok\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nNA\n\n\nKLIMT CAIRNHILL\n7400000\n2055.92\n3599\n2024-03-19\n71 CAIRNHILL ROAD #13-01\nNew Sale\nStrata\n191.00\n38743\n-\nApartment\n1\nFreehold\nUncompleted\nN.A\n229725\n9\n22\nCentral Region\nNewton\nCCR\nNA\nNA\nNA\nNA\nFreehold\n84\nBuilding\n\n\n8 NAPIER\n7000000\n2012.87\n3478\n2024-03-20\n8 NAPIER ROAD #06-04\nResale\nStrata\n187.00\n37433\n-\nCondominium\n1\nFreehold\n2010\nPrivate\n258502\n10\n25\nCentral Region\nTanglin\nCCR\nNA\nNA\nNA\nNA\nFreehold\n170\nAfter 2000s\n\n\nDUCHESS GARDEN\n10680000\n5095.68\n2096\n2024-03-22\n117 DUCHESS AVENUE\nResale\nLand\n473.40\n22560\n-\nSemi-Detached House\n1\n999 yrs from 27/12/1875\n1975\nPrivate\n269135\n10\n26\nCentral Region\nBukit Timah\nCCR\n999\n1875-12-27\n2874-12-27\n851\n851\n80\nBefore 2000s\n\n\nN.A.\n39500000\n19553.88\n2020\n2024-03-22\n15 FORD AVENUE\nResale\nLand\n1816.60\n21744\n-\nDetached House\n1\nFreehold\n2010\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n78\nAfter 2000s\n\n\nONE TREE HILL COLLECTION\n9200888\n2330.41\n3948\n2024-03-22\n66 JALAN ARNAP\nResale\nLand\n216.50\n42498\n-\nSemi-Detached House\n1\nFreehold\n2021\nPrivate\n249374\n10\n24\nCentral Region\nRiver Valley\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nAfter 2000s\n\n\nSERANGOON GARDEN ESTATE\n6300000\n2799.72\n2250\n2024-03-25\n68 BRAEMAR DRIVE\nResale\nLand\n260.10\n24221\n-\nTerrace House\n1\n999 yrs from 01/01/1955\n-\nPrivate\n554920\n19\n55\nNorth East Region\nSerangoon\nOCR\n999\n1955-01-01\n2954-01-01\n930\n930\n8\nNA\n\n\nN.A.\n7750000\n4358.34\n1778\n2024-03-25\n218A JALAN KAYU\nResale\nLand\n404.90\n19141\n-\nSemi-Detached House\n1\n999 yrs from 01/01/1879\n-\nPrivate\n278535\n28\n79\nNorth East Region\nSengkang\nOCR\n999\n1879-01-01\n2878-01-01\n854\n854\n40\nNA\n\n\nN.A.\n8380000\n2821.24\n2970\n2024-03-25\n30A KING’S ROAD\nResale\nLand\n262.10\n31973\n-\nSemi-Detached House\n1\nFreehold\n1995\nPrivate\n278535\n10\n26\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n80\nBefore 2000s\n\n\nN.A.\n9450000\n4315.29\n2190\n2024-03-25\n9 BOSCOMBE ROAD\nResale\nLand\n400.90\n23572\n-\nSemi-Detached House\n1\nFreehold\n1986\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nN.A.\n8308000\n4335.74\n1916\n2024-03-27\n11A BRIGHTON CRESCENT\nResale\nLand\n402.80\n20626\n-\nSemi-Detached House\n1\nFreehold\n-\nPrivate\n278535\n19\n55\nNorth East Region\nSerangoon\nOCR\nNA\nNA\nNA\nNA\nFreehold\n40\nNA\n\n\nCHIP BEE GARDENS\n6380000\n2027.94\n3146\n2024-03-28\n53 JALAN HITAM MANIS\nResale\nLand\n188.40\n33864\n-\nTerrace House\n1\nFreehold\n2017\nPrivate\n278467\n10\n27\nCentral Region\nBukit Timah\nCCR\nNA\nNA\nNA\nNA\nFreehold\n15\nAfter 2000s\n\n\nHOLLAND GARDENS\n7800000\n3586.56\n2175\n2024-03-28\n16 MOONBEAM DRIVE\nResale\nLand\n333.20\n23409\n-\nSemi-Detached House\n1\n999 yrs from 06/10/1885\n-\nPrivate\n277279\n10\n27\nCentral Region\nBukit Timah\nCCR\n999\n1885-10-06\n2884-10-06\n860\n860\n80\nNA\n\n\nTOH ESTATE\n7800000\n7194.66\n1084\n2024-03-28\n5 TOH HEIGHTS\nResale\nLand\n668.40\n11670\n-\nDetached House\n1\nFreehold\n1994\nPrivate\n507702\n17\n50\nEast Region\nPasir Ris\nOCR\nNA\nNA\nNA\nNA\nFreehold\n45\nBefore 2000s\n\n\nN.A.\n11880000\n5364.78\n2214\n2024-03-28\n70 BRANKSOME ROAD\nResale\nLand\n498.40\n23836\n-\nSemi-Detached House\n1\nFreehold\n1987\nPrivate\n278535\n15\n43\nCentral Region\nMarine Parade\nRCR\nNA\nNA\nNA\nNA\nFreehold\n53\nBefore 2000s\n\n\nSERANGOON GARDEN ESTATE\n6750000\n3203.37\n2107\n2024-03-28\n4 YORK PLACE\nResale\nLand\n297.60\n22681\n-\nSemi-Detached House\n1\n999 yrs from 01/01/1954\n-\nPrivate\n554920\n19\n55\nNorth East Region\nSerangoon\nOCR\n999\n1954-01-01\n2953-01-01\n929\n929\n40\nNA\n\n\n\n\n\n\n\n\n\nCode\ndist_luxury\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nluxury_plot"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06A.html",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06A.html",
    "title": "In-class Exercise 6 - Network",
    "section": "",
    "text": "pacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, \n               graphlayouts, ggforce, skimr, tidytext, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06A.html#installing-packages",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06A.html#installing-packages",
    "title": "In-class Exercise 6 - Network",
    "section": "",
    "text": "pacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, \n               graphlayouts, ggforce, skimr, tidytext, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06A.html#data-import",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06A.html#data-import",
    "title": "In-class Exercise 6 - Network",
    "section": "Data import",
    "text": "Data import\n\nmc3_data &lt;- fromJSON(\"data/mc3.json\")\n\n\n# Extracting links \n\nmc3_edges &lt;- as_tibble(mc3_data$links) %&gt;%\n  distinct() %&gt;%\n  mutate(source = as.character(source), \n         target = as.character(target), \n         type = as.character(type)) %&gt;%\n  group_by(source, target, type) %&gt;%\n  summarise(weights = n()) %&gt;%\n  filter(source != target) %&gt;%\n  ungroup()\n\n# convert to character for standardisation\n# filter to select out all distinct records, where source and target are different entity\n\n\n\n\n\n\n\nThings to note\n\n\n\n\n\n\n\n# Extracting nodes\nmc3_nodes &lt;- as_tibble(mc3_data$nodes)\n\n# Managing the data types \nmc3_nodes &lt;- as_tibble(mc3_data$nodes) %&gt;%\n  mutate(country = as.character(country), \n         id = as.character(id), \n         ProductServices = as.character(ProductServices), \n         revenue = as.numeric(as.character(revenue)), \n         type = as.character(type)) %&gt;%\n  select(id, country, type, revenue, ProductServices)\n\nEnsuring node and links are consistent naming - Extract out nodes from the edges to ensure consistency\n\nid1 &lt;- mc3_edges %&gt;%\n  select(source) %&gt;%\n  rename(id = source)\n\nid2 &lt;- mc3_edges %&gt;%\n  select(target) %&gt;% \n  rename(id = target)\n\nmc3_nodes1 &lt;- rbind(id1, id2) %&gt;%   \n  distinct() %&gt;%   \n  left_join(mc3_nodes, by = c(\"id\" = \"id\")) %&gt;%   \n  mutate(unmatched = \"drop\")\n  \n#doing left join to match, drop everything else that cannot be matched\n\n\nmc3_graph &lt;- tbl_graph(nodes = mc3_nodes1, \n                       edges = mc3_edges, \n                       directed = FALSE) %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness(), \n         closeness_centrality = centrality_closeness())\n\n\n# displayig graph model\nView(mc3_graph)\n\n\n## trimming the graph with 100,000 vs 300,000\n## modify with the network statistics - Filter \n\nmc3_graph %&gt;%\n  filter(betweenness_centrality &gt;= 100000) %&gt;%\n  ggraph(layout = \"fr\") +\n  geom_edge_link(aes(alpha = 0.5)) +\n  geom_node_point(aes(size = betweenness_centrality, color = \"lightblue\", \n                      alpha = 0.5)) +\n  scale_size_continuous(range = c(1, 10)) +\n  theme_graph()\n\n\n\n\n\n\n\n\n\n# considering bigger centrality \nmc3_graph %&gt;%\n  filter(betweenness_centrality &gt;= 3000000) %&gt;%\n  ggraph(layout = \"fr\") +\n  geom_edge_link(aes(alpha = 0.5)) +\n  geom_node_point(aes(size = betweenness_centrality, color = \"lightblue\", \n                      alpha = 0.5)) +\n  scale_size_continuous(range = c(1, 10)) +\n  theme_graph()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06A.html#exploring-the-nodes-data-frame",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06A.html#exploring-the-nodes-data-frame",
    "title": "In-class Exercise 6 - Network",
    "section": "Exploring the nodes data frame",
    "text": "Exploring the nodes data frame\nIn the cod chunk below,"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "Packages:\n\nQuanteda - Quantitative Analysis of Textual Data\nReadtext - For reading text files in their various format.\nTidytext - R package for text mining\n\n\npacman::p_load(tidyverse, readtext, quanteda, tidytext)\n\nReading data where “/*” - Opening sub-directories within the data file and read ALL.\n\ntext_data &lt;- readtext(paste0(\"data/articles\", \"/*\"))\nview(text_data)\n\nTokenising the article to identify key words (mainly nouns, excluding stop words)\n\nusenet_words &lt;- text_data %&gt;%\n  unnest_tokens(word,text) %&gt;%\n  filter(str_detect(word, \"[a-z']$\"), \n         !word %in% stop_words$word)\n\nview(usenet_words)\n\nCounting the most frequent word after tokenising\nConsider: Stem to get the root form of the word before counting\n\nusenet_words %&gt;%\n  count(word, sort = TRUE)\n\nreadtext object consisting of 3260 documents and 0 docvars.\n# A data frame: 3,260 × 3\n  word             n text     \n  &lt;chr&gt;        &lt;int&gt; &lt;chr&gt;    \n1 fishing       2177 \"\\\"\\\"...\"\n2 sustainable   1525 \"\\\"\\\"...\"\n3 company       1036 \"\\\"\\\"...\"\n4 practices      838 \"\\\"\\\"...\"\n5 industry       715 \"\\\"\\\"...\"\n6 transactions   696 \"\\\"\\\"...\"\n# ℹ 3,254 more rows\n\n\nBreaking down the text data with tidyr - Regex with separate_wider_delim (Link: https://tidyr.tidyverse.org/reference/separate_wider_delim.html)\n\ntext_data_splitted &lt;- text_data %&gt;% \n  separate_wider_delim(\"doc_id\", \n                       delim = \"__0__\", \n                       names = c(\"X\", \"Y\"), \n                       too_few = \"align_end\")\n\n\n\n\n\nText mining with R - tidytext: https://www.tidytextmining.com/\nUsing stringr to split text: https://stringr.tidyverse.org/\nUsing tidyr to delimit text files: https://tidyr.tidyverse.org/"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#vast-challenge-2024",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#vast-challenge-2024",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "Packages:\n\nQuanteda - Quantitative Analysis of Textual Data\nReadtext - For reading text files in their various format.\nTidytext - R package for text mining\n\n\npacman::p_load(tidyverse, readtext, quanteda, tidytext)\n\nReading data where “/*” - Opening sub-directories within the data file and read ALL.\n\ntext_data &lt;- readtext(paste0(\"data/articles\", \"/*\"))\nview(text_data)\n\nTokenising the article to identify key words (mainly nouns, excluding stop words)\n\nusenet_words &lt;- text_data %&gt;%\n  unnest_tokens(word,text) %&gt;%\n  filter(str_detect(word, \"[a-z']$\"), \n         !word %in% stop_words$word)\n\nview(usenet_words)\n\nCounting the most frequent word after tokenising\nConsider: Stem to get the root form of the word before counting\n\nusenet_words %&gt;%\n  count(word, sort = TRUE)\n\nreadtext object consisting of 3260 documents and 0 docvars.\n# A data frame: 3,260 × 3\n  word             n text     \n  &lt;chr&gt;        &lt;int&gt; &lt;chr&gt;    \n1 fishing       2177 \"\\\"\\\"...\"\n2 sustainable   1525 \"\\\"\\\"...\"\n3 company       1036 \"\\\"\\\"...\"\n4 practices      838 \"\\\"\\\"...\"\n5 industry       715 \"\\\"\\\"...\"\n6 transactions   696 \"\\\"\\\"...\"\n# ℹ 3,254 more rows\n\n\nBreaking down the text data with tidyr - Regex with separate_wider_delim (Link: https://tidyr.tidyverse.org/reference/separate_wider_delim.html)\n\ntext_data_splitted &lt;- text_data %&gt;% \n  separate_wider_delim(\"doc_id\", \n                       delim = \"__0__\", \n                       names = c(\"X\", \"Y\"), \n                       too_few = \"align_end\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#references-for-text-handling",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#references-for-text-handling",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "Text mining with R - tidytext: https://www.tidytextmining.com/\nUsing stringr to split text: https://stringr.tidyverse.org/\nUsing tidyr to delimit text files: https://tidyr.tidyverse.org/"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#loading-json-package",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#loading-json-package",
    "title": "In-class Exercise 5",
    "section": "Loading json package",
    "text": "Loading json package\n\npacman::p_load(jsonlite, tidyverse, tidyr)\n\n\nmc1_data &lt;-fromJSON(\"data/mc1.json\")\n\nData model: Multiple knowledge graph - Nodes and links (already in dataframe)\nClicking into the nodes and link, will be able to see the underlying data.\n\n#Seeing the underlying data under nodes\nview(mc1_data[[\"nodes\"]])\nview(mc1_data[[\"links\"]])\n\n\nmc2_data &lt;- fromJSON(\"data/mc2.json\")\n\n\nview(mc2_data[[\"nodes\"]])\nview(mc2_data[[\"links\"]])\n\n\n# Exporting for analysis\n\n#write_csv( mc1_data[[\"nodes\"]], \"mc1_nodes.csv\")\n#write_csv(mc1_data[[\"links\"]], \"mc1_link.csv\")\n#write_csv(mc2_data[[\"nodes\"]], \"mc2_nodes.csv\")\n#write_csv(mc2_data[[\"links\"]], \"mc2_links.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class_Ex02 Demo",
    "section": "",
    "text": "pacman::p_load(tidyverse, ggdist, ggthemes, colorspace, ggridges)\nexam_df &lt;- read_csv(\"data/Exam_data.csv\")\nexam &lt;- exam_df"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#visualising-distribution-with-raincloud-plot",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#visualising-distribution-with-raincloud-plot",
    "title": "In-class_Ex02 Demo",
    "section": "Visualising Distribution with Raincloud Plot",
    "text": "Visualising Distribution with Raincloud Plot\nRaincloud Plot is a data visualisation techniques that produces a half-density to a distribution plot. It gets the name because the density plot is in the shape of a “raincloud”. The raincloud (half-density) plot enhances the traditional box-plot by highlighting multiple modalities (an indicator that groups may exist). The boxplot does not show where densities are clustered, but the raincloud plot does!\nIn this section, you will learn how to create a raincloud plot to visualise the distribution of English score by race. It will be created by using functions provided by ggdist and ggplot2 packages.\n\nPlotting a Half Eye graph\nFirst, we will plot a Half-Eye graph by using stat_halfeye() of ggdist package.\nThis produces a Half Eye visualization, which is contains a half-density and a slab-interval.\n\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\n\n\n9.4.2 Adding the boxplot with geom_boxplot()\nNext, we will add the second geometry layer using geom_boxplot() of ggplot2. This produces a narrow boxplot. We reduce the width and adjust the opacity.\n\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\n\n\nAdding the Dot Plots with stat_dots()\nNext, we will add the third geometry layer using stat_dots() of ggdist package. This produces a half-dotplot, which is similar to a histogram that indicates the number of samples (number of dots) in each bin. We select side = “left” to indicate we want it on the left-hand side.\n\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\n\n\nFinishing touch\nLastly, coord_flip() of ggplot2 package will be used to flip the raincloud chart horizontally to give it the raincloud appearance. At the same time, theme_economist() of ggthemes package is used to give the raincloud chart a professional publishing standard look.\n\nggplot(exam_df, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()\n\n\n\n\n\n\n\n\nReference\n\nIntroducing Ridgeline Plots (formerly Joyplots)\nClaus O. Wilke Fundamentals of Data Visualization especially Chapter 6, 7, 8, 9 and 10.\nAllen M, Poggiali D, Whitaker K et al. “Raincloud plots: a multi-platform tool for robust data. visualization” [version 2; peer review: 2 approved]. Welcome Open Res 2021, pp. 4:63.\nDots + interval stats and geoms"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_3.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_3.html",
    "title": "Hands On Exercise 8c",
    "section": "",
    "text": "In this in-class exercise, you will gain hands-on experience on using appropriate R methods to plot analytical maps.\n\n\n\nBy the end of this in-class exercise, you will be able to use appropriate functions of tmap and tidyverse to perform the following tasks:\n\nImporting geospatial data in rds format into R environment.\nCreating cartographic quality choropleth maps by using appropriate tmap functions.\nCreating rate map\nCreating percentile map\nCreating boxmap\n\n\n\n\n\n\n\n\npacman::p_load(tmap, tidyverse, sf)\n\n\n\n\nFor the purpose of this hands-on exercise, a prepared data set called NGA_wp.rds will be used. The data set is a polygon feature data.frame providing information on water point of Nigeria at the LGA level. You can find the data set in the rds sub-direct of the hands-on data folder.\n\nNGA_wp &lt;- read_rds(\"data/rds/NGA_wp.rds\")\n\n\n\n\n\n\n\nPlot a choropleth map showing the distribution of non-function water point by LGA\n\n# plot for functional water points by LGA  \nplot2 &lt;- tm_shape(NGA_wp) +   tm_fill(\"wp_functional\",           n = 10,           style = \"equal\",           palette = \"Blues\") +   tm_borders(lwd = 0.1,              alpha = 1) +   tm_layout(main.title = \"Distribution of functional water point by LGAs\",             legend.outside = FALSE)  \n\n# plot for total water points by LGA  \n\nplot1 &lt;- tm_shape(NGA_wp) +   tm_fill(\"total_wp\",           n = 10,           style = \"equal\",           palette = \"Blues\") +   tm_borders(lwd = 0.1,              alpha = 1) +   tm_layout(main.title = \"Distribution of total  water point by LGAs\",             legend.outside = FALSE)  \n\ntmap_arrange(plot1, plot2, nrow = 1)\n\n\n\n\n\n\n\n\n\n\n\n\nIn much of our readings we have now seen the importance to map rates rather than counts of things, and that is for the simple reason that water points are not equally distributed in space. That means that if we do not account for how many water points are somewhere, we end up mapping total water point size rather than our topic of interest.\n\n\nWe will tabulate the proportion of functional water points and the proportion of non-functional water points in each LGA. In the following code chunk, mutate() from dplyr package is used to derive two fields, namely pct_functional and pct_nonfunctional.\n\nNGA_wp &lt;- NGA_wp %&gt;%   mutate(pct_functional = wp_functional/total_wp) %&gt;%   mutate(pct_nonfunctional = wp_nonfunctional/total_wp)\n\n\n\n\nPlot a choropleth map showing the distribution of percentage functional water point by LGA\n\ntm_shape(NGA_wp) +   tm_fill(\"pct_functional\",           n = 10,           style = \"equal\",           palette = \"Blues\",           legend.hist = TRUE) +   tm_borders(lwd = 0.1,              alpha = 1) +   tm_layout(main.title = \"Rate map of functional water point by LGAs\",             legend.outside = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\nExtreme value maps are variations of common choropleth maps where the classification is designed to highlight extreme values at the lower and upper end of the scale, with the goal of identifying outliers. These maps were developed in the spirit of spatializing EDA, i.e., adding spatial features to commonly used approaches in non-spatial EDA (Anselin 1994).\n\n\nThe percentile map is a special type of quantile map with six specific categories: 0-1%,1-10%, 10-50%,50-90%,90-99%, and 99-100%. The corresponding breakpoints can be derived by means of the base R quantile command, passing an explicit vector of cumulative probabilities as c(0,.01,.1,.5,.9,.99,1). Note that the begin and endpoint need to be included.\n\n\nStep 1: Exclude records with NA by using the code chunk below.\n\nNGA_wp &lt;- NGA_wp %&gt;%   drop_na()\n\nStep 2: Creating customised classification and extracting values\n\npercent &lt;- c(0,.01,.1,.5,.9,.99,1) \n\n#var &lt;- NGA_wp[\"pct_functional\"] %&gt;% st_set_geometry(NULL) quantile(var[,1], percent)\n\n\n\n\n\n\n\nImportant\n\n\n\nWhen variables are extracted from an sf data.frame, the geometry is extracted as well. For mapping and spatial manipulation, this is the expected behavior, but many base R functions cannot deal with the geometry. Specifically, the quantile() gives an error. As a result st_set_geomtry(NULL) is used to drop geomtry field.\n\n\n\n\n\nWriting a function has three big advantages over using copy-and-paste:\n\nYou can give a function an evocative name that makes your code easier to understand.\nAs requirements change, you only need to update code in one place, instead of many.\nYou eliminate the chance of making incidental mistakes when you copy and paste (i.e. updating a variable name in one place, but not in another).\n\nSource: Chapter 19: Functions of R for Data Science.\n\n\n\nFirstly, we will write an R function as shown below to extract a variable (i.e. wp_nonfunctional) as a vector out of an sf data.frame.\n\narguments:\n\nvname: variable name (as character, in quotes)\ndf: name of sf data frame\n\nreturns:\n\nv: vector with values (without a column name)\n\n\n\n# echo: false \n# function_1 &lt;- source(\"function_1.r\", local = knitr::knit_global())$value\n\n\n\n\nNext, we will write a percentile mapping function by using the code chunk below.\n\n#percent_map.fx.R\n\n\n\n\nTo run the function, type the code chunk as shown below.\n\n# percentmap(\"total_wp\", NGA_wp)\n\nNote that this is just a bare bones implementation. Additional arguments such as the title, legend positioning just to name a few of them, could be passed to customise various features of the map.\n\n\n\n\nIn essence, a box map is an augmented quartile map, with an additional lower and upper category. When there are lower outliers, then the starting point for the breaks is the minimum value, and the second break is the lower fence. In contrast, when there are no lower outliers, then the starting point for the breaks will be the lower fence, and the second break is the minimum value (there will be no observations that fall in the interval between the lower fence and the minimum value).\n\n# ggplot(data = NGA_wp,\n#        aes(x = \"\",\n#            y = wp_nonfunctional)) +\n#   geom_boxplot()\n\n\nDisplaying summary statistics on a choropleth map by using the basic principles of boxplot.\nTo create a box map, a custom breaks specification will be used. However, there is a complication. The break points for the box map vary depending on whether lower or upper outliers are present.\n\n\n\nThe code chunk below is an R function that creating break points for a box map.\n\narguments:\n\nv: vector with observations\nmult: multiplier for IQR (default 1.5)\n\nreturns:\n\nbb: vector with 7 break points compute quartile and fences\n\n\n\n# boxbreak_fx\n\n\n\n\nThe code chunk below is an R function to extract a variable as a vector out of an sf data frame.\n\narguments:\n\nvname: variable name (as character, in quotes)\ndf: name of sf data frame\n\nreturns:\n\nv: vector with values (without a column name)\n\n\n\n#getvar_fx.R\n\n\n\n\nLet’s test the newly created function\n\n# var &lt;- get.var(\"wp_nonfunctional\", NGA_wp) \n# boxbreaks(var)\n\n\n\n\nThe code chunk below is an R function to create a box map. - arguments: - vnam: variable name (as character, in quotes) - df: simple features polygon layer - legtitle: legend title - mtitle: map title - mult: multiplier for IQR - returns: - a tmap-element (plots a map)\n\n#boxmap_fx.R\n\n\n# tmap_mode(\"plot\")\n# boxmap(\"wp_nonfunctional\", NGA_wp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_3.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_3.html#overview",
    "title": "Hands On Exercise 8c",
    "section": "",
    "text": "In this in-class exercise, you will gain hands-on experience on using appropriate R methods to plot analytical maps.\n\n\n\nBy the end of this in-class exercise, you will be able to use appropriate functions of tmap and tidyverse to perform the following tasks:\n\nImporting geospatial data in rds format into R environment.\nCreating cartographic quality choropleth maps by using appropriate tmap functions.\nCreating rate map\nCreating percentile map\nCreating boxmap"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_3.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_3.html#getting-started",
    "title": "Hands On Exercise 8c",
    "section": "",
    "text": "pacman::p_load(tmap, tidyverse, sf)\n\n\n\n\nFor the purpose of this hands-on exercise, a prepared data set called NGA_wp.rds will be used. The data set is a polygon feature data.frame providing information on water point of Nigeria at the LGA level. You can find the data set in the rds sub-direct of the hands-on data folder.\n\nNGA_wp &lt;- read_rds(\"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_3.html#basic-choropleth-mapping",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_3.html#basic-choropleth-mapping",
    "title": "Hands On Exercise 8c",
    "section": "",
    "text": "Plot a choropleth map showing the distribution of non-function water point by LGA\n\n# plot for functional water points by LGA  \nplot2 &lt;- tm_shape(NGA_wp) +   tm_fill(\"wp_functional\",           n = 10,           style = \"equal\",           palette = \"Blues\") +   tm_borders(lwd = 0.1,              alpha = 1) +   tm_layout(main.title = \"Distribution of functional water point by LGAs\",             legend.outside = FALSE)  \n\n# plot for total water points by LGA  \n\nplot1 &lt;- tm_shape(NGA_wp) +   tm_fill(\"total_wp\",           n = 10,           style = \"equal\",           palette = \"Blues\") +   tm_borders(lwd = 0.1,              alpha = 1) +   tm_layout(main.title = \"Distribution of total  water point by LGAs\",             legend.outside = FALSE)  \n\ntmap_arrange(plot1, plot2, nrow = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_3.html#choropleth-map-for-rates",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_3.html#choropleth-map-for-rates",
    "title": "Hands On Exercise 8c",
    "section": "",
    "text": "In much of our readings we have now seen the importance to map rates rather than counts of things, and that is for the simple reason that water points are not equally distributed in space. That means that if we do not account for how many water points are somewhere, we end up mapping total water point size rather than our topic of interest.\n\n\nWe will tabulate the proportion of functional water points and the proportion of non-functional water points in each LGA. In the following code chunk, mutate() from dplyr package is used to derive two fields, namely pct_functional and pct_nonfunctional.\n\nNGA_wp &lt;- NGA_wp %&gt;%   mutate(pct_functional = wp_functional/total_wp) %&gt;%   mutate(pct_nonfunctional = wp_nonfunctional/total_wp)\n\n\n\n\nPlot a choropleth map showing the distribution of percentage functional water point by LGA\n\ntm_shape(NGA_wp) +   tm_fill(\"pct_functional\",           n = 10,           style = \"equal\",           palette = \"Blues\",           legend.hist = TRUE) +   tm_borders(lwd = 0.1,              alpha = 1) +   tm_layout(main.title = \"Rate map of functional water point by LGAs\",             legend.outside = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_3.html#extreme-value-maps",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_3.html#extreme-value-maps",
    "title": "Hands On Exercise 8c",
    "section": "",
    "text": "Extreme value maps are variations of common choropleth maps where the classification is designed to highlight extreme values at the lower and upper end of the scale, with the goal of identifying outliers. These maps were developed in the spirit of spatializing EDA, i.e., adding spatial features to commonly used approaches in non-spatial EDA (Anselin 1994).\n\n\nThe percentile map is a special type of quantile map with six specific categories: 0-1%,1-10%, 10-50%,50-90%,90-99%, and 99-100%. The corresponding breakpoints can be derived by means of the base R quantile command, passing an explicit vector of cumulative probabilities as c(0,.01,.1,.5,.9,.99,1). Note that the begin and endpoint need to be included.\n\n\nStep 1: Exclude records with NA by using the code chunk below.\n\nNGA_wp &lt;- NGA_wp %&gt;%   drop_na()\n\nStep 2: Creating customised classification and extracting values\n\npercent &lt;- c(0,.01,.1,.5,.9,.99,1) \n\n#var &lt;- NGA_wp[\"pct_functional\"] %&gt;% st_set_geometry(NULL) quantile(var[,1], percent)\n\n\n\n\n\n\n\nImportant\n\n\n\nWhen variables are extracted from an sf data.frame, the geometry is extracted as well. For mapping and spatial manipulation, this is the expected behavior, but many base R functions cannot deal with the geometry. Specifically, the quantile() gives an error. As a result st_set_geomtry(NULL) is used to drop geomtry field.\n\n\n\n\n\nWriting a function has three big advantages over using copy-and-paste:\n\nYou can give a function an evocative name that makes your code easier to understand.\nAs requirements change, you only need to update code in one place, instead of many.\nYou eliminate the chance of making incidental mistakes when you copy and paste (i.e. updating a variable name in one place, but not in another).\n\nSource: Chapter 19: Functions of R for Data Science.\n\n\n\nFirstly, we will write an R function as shown below to extract a variable (i.e. wp_nonfunctional) as a vector out of an sf data.frame.\n\narguments:\n\nvname: variable name (as character, in quotes)\ndf: name of sf data frame\n\nreturns:\n\nv: vector with values (without a column name)\n\n\n\n# echo: false \n# function_1 &lt;- source(\"function_1.r\", local = knitr::knit_global())$value\n\n\n\n\nNext, we will write a percentile mapping function by using the code chunk below.\n\n#percent_map.fx.R\n\n\n\n\nTo run the function, type the code chunk as shown below.\n\n# percentmap(\"total_wp\", NGA_wp)\n\nNote that this is just a bare bones implementation. Additional arguments such as the title, legend positioning just to name a few of them, could be passed to customise various features of the map.\n\n\n\n\nIn essence, a box map is an augmented quartile map, with an additional lower and upper category. When there are lower outliers, then the starting point for the breaks is the minimum value, and the second break is the lower fence. In contrast, when there are no lower outliers, then the starting point for the breaks will be the lower fence, and the second break is the minimum value (there will be no observations that fall in the interval between the lower fence and the minimum value).\n\n# ggplot(data = NGA_wp,\n#        aes(x = \"\",\n#            y = wp_nonfunctional)) +\n#   geom_boxplot()\n\n\nDisplaying summary statistics on a choropleth map by using the basic principles of boxplot.\nTo create a box map, a custom breaks specification will be used. However, there is a complication. The break points for the box map vary depending on whether lower or upper outliers are present.\n\n\n\nThe code chunk below is an R function that creating break points for a box map.\n\narguments:\n\nv: vector with observations\nmult: multiplier for IQR (default 1.5)\n\nreturns:\n\nbb: vector with 7 break points compute quartile and fences\n\n\n\n# boxbreak_fx\n\n\n\n\nThe code chunk below is an R function to extract a variable as a vector out of an sf data frame.\n\narguments:\n\nvname: variable name (as character, in quotes)\ndf: name of sf data frame\n\nreturns:\n\nv: vector with values (without a column name)\n\n\n\n#getvar_fx.R\n\n\n\n\nLet’s test the newly created function\n\n# var &lt;- get.var(\"wp_nonfunctional\", NGA_wp) \n# boxbreaks(var)\n\n\n\n\nThe code chunk below is an R function to create a box map. - arguments: - vnam: variable name (as character, in quotes) - df: simple features polygon layer - legtitle: legend title - mtitle: map title - mult: multiplier for IQR - returns: - a tmap-element (plots a map)\n\n#boxmap_fx.R\n\n\n# tmap_mode(\"plot\")\n# boxmap(\"wp_nonfunctional\", NGA_wp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_1.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_1.html",
    "title": "Hands On Exercise 8a",
    "section": "",
    "text": "Choropleth mapping involves the symbolisation of enumeration units, such as countries, provinces, states, counties or census units, using area patterns or graduated colors. For example, a social scientist may need to use a choropleth map to portray the spatial distribution of aged population of Singapore by Master Plan 2014 Subzone Boundary.\nIn this chapter, you will learn how to plot functional and truthful choropleth maps by using an R package called tmap package.\n\n\n\n\n\n\nTip\n\n\n\nIt is advisable for you to read the functional description of each function before using them.\n\n\n\n\n\nIn this hands-on exercise, the key R package use is tmap package in R. Beside tmap package, four other R packages will be used. They are:\n\nreadr for importing delimited text file,\ntidyr for tidying data,\ndplyr for wrangling data and\nsf for handling geospatial data.\n\nAmong the four packages, readr, tidyr and dplyr are part of tidyverse package.\nThe code chunk below will be used to install and load these packages in RStudio.\n\npacman::p_load(sf, tmap, tidyverse)\n\n\n\n\n\n\n\nNote\n\n\n\nNotice that, we only need to install tidyverse instead of readr, tidyr and dplyr individually.\n\n\n\n\n\n\n\nTwo data set will be used to create the choropleth map. They are:\n\nMaster Plan 2014 Subzone Boundary (Web) (i.e. MP14_SUBZONE_WEB_PL) in ESRI shapefile format. It can be downloaded at data.gov.sg This is a geospatial data. It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2014.\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format (i.e. respopagesextod2011to2020.csv). This is an aspatial data fie. It can be downloaded at Department of Statistics, Singapore Although it does not contain any coordinates values, but it’s PA and SZ fields can be used as unique identifiers to geocode to MP14_SUBZONE_WEB_PL shapefile.\n\n\n\n\nThe code chunk below uses the st_read() function of sf package to import MP14_SUBZONE_WEB_PL shapefile into R as a simple feature data frame called mpsz.\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\sengjingyi\\ISSS608\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nYou can examine the content of mpsz by using the code chunk below.\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\nNotice that only the first ten records will be displayed. Do you know why?\n\nJing Yi’s response This is to give a sample of the underlying dataset without unnecessarily over whelming the reader.\n\n\n\nNext, we will import respopagsex2011to2020.csv file into RStudio and save the file into an R dataframe called popagsex.\nThe task will be performed by using read_csv() function of readr package as shown in the code chunk below.\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\n\n\n\nBefore a thematic map can be prepared, you are required to prepare a data table with year 2020 values. The data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\n\nYOUNG: age group 0 to 4 until age groyup 20 to 24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age group, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\n\nThe following data wrangling and transformation functions will be used:\n\npivot_wider() of tidyr package, and\nmutate(), filter(), group_by() and select() of dplyr package\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n\n\nBefore we can perform the georelational join, one extra step is required to convert the values in PA and SZ fields to uppercase. This is because the values of PA and SZ fields are made up of upper- and lowercase. On the other, hand the SUBZONE_N and PLN_AREA_N are in uppercase.\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nNext, left_join() of dplyr is used to join the geographical data and attribute table using planning subzone name e.g. SUBZONE_N and SZ as the common identifier.\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nThing to learn from the code chunk above:\n\nleft_join() of dplyr package is used with mpsz simple feature data frame as the left data table is to ensure that the output will be a simple features data frame.\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n\n\n\n\n\n\nTwo approaches can be used to prepare thematic map using tmap, they are:\n\nPlotting a thematic map quickly by using qtm().\nPlotting highly customisable thematic map by using tmap elements.\n\n\n\nThe easiest and quickest to draw a choropleth map using tmap is using qtm(). It is concise and provides a good default visualisation in many cases.\nThe code chunk below will draw a cartographic standard choropleth map as shown below.\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\ntmap_mode() with “plot” option is used to produce a static map. For interactive mode, “view” option should be used.\nfill argument is used to map the attribute (i.e. DEPENDENCY)\n\n\n\n\nDespite its usefulness of drawing a choropleth map quickly and easily, the disadvantge of qtm() is that it makes aesthetics of individual layers harder to control. To draw a high quality cartographic choropleth map as shown in the figure below, tmap’s drawing elements should be used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\nIn the following sub-section, we will share with you tmap functions that used to plot these elements.\n\n\nThe basic building block of tmap is tm_shape() followed by one or more layer elemments such as tm_fill() and tm_polygons().\nIn the code chunk below, tm_shape() is used to define the input data (i.e mpsz_pop2020) and tm_polygons() is used to draw the planning subzone polygons.\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\n\n\n\nTo draw a choropleth map showing the geographical distribution of a selected variable by planning subzone, we just need to assign the target variable such as Dependency to tm_polygons().\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\nThings to learn from tm_polygons():\n\nThe default interval binning used to draw the choropleth map is called “pretty”. A detailed discussion of the data classification methods supported by tmap will be provided in sub-section 4.3.\nThe default colour scheme used is YlOrRd of ColorBrewer. You will learn more about the color scheme in sub-section 4.4.\nBy default, Missing value will be shaded in grey.\n\n\n\n\nActually, tm_polygons() is a wraper of tm_fill() and tm_border(). tm_fill() shades the polygons by using the default colour scheme and tm_borders() adds the borders of the shapefile onto the choropleth map.\nThe code chunk below draws a choropleth map by using tm_fill() alone.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\nNotice that the planning subzones are shared according to the respective dependecy values\nTo add the boundary of the planning subzones, tm_borders will be used as shown in the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\n\n\n\n\nNotice that light-gray border lines have been added on the choropleth map.\nThe alpha argument is used to define transparency number between 0 (totally transparent) and 1 (not transparent). By default, the alpha value of the col is used (normally 1).\nBeside alpha argument, there are three other arguments for tm_borders(), they are:\n\ncol = border colour,\nlwd = border line width. The default is 1, and\nlty = border line type. The default is “solid”.\n\n\n\n\n\nMost choropleth maps employ some methods of data classification. The point of classification is to take a large number of observations and group them into data ranges or classes.\ntmap provides a total ten data classification methods, namely: fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks.\nTo define a data classification method, the style argument of tm_fill() or tm_polygons() will be used.\n\n\nThe code chunk below shows a quantile data classification that used 5 classes.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nIn the code chunk below, equal data classification method is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nNotice that the distribution of quantile data classification method are more evenly distributed then equal data classification method.\n\n\n\n\n\n\nMaps Lie!\n\n\n\n\n\n\n\n\n\n\n\n\nDIY\n\n\n\nUsing what you had learned, prepare choropleth maps by using different classification methods supported by tmap and compare their differences.\nDifferent classification methods include: fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks.\n\n\nTesting data classification method with kmeans.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 3,\n          style = \"kmeans\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nTesting data classification method with fisher.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 4,\n          style = \"fisher\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDIY\n\n\n\nPreparing choropleth maps by using similar classification method but with different numbers of classes (i.e. 2, 6, 10, 20). Compare the output maps, what observation can you draw?\nJing Yi’s observation drawn from the same classification method of “jenks”:\n\nAs the number of classes (n) increases, the granularity of the classes increase, providing more detail for the different level of dependency.\nWhile fewer classes (n =2) may hide important patterns, the greater number of classes (n=10, n=20) may risk over-complication.\nHence, it is crucial to determine the optimal number of classes to draw meaningful insights.\n\n\n\nCase where n = 2\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 2,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nCase where n = 6\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nCase where n = 10\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 10,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nCase where n = 20\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 20,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\nFor all the built-in styles, the category breaks are computed internally. In order to override these defaults, the breakpoints can be set explicitly by means of the breaks argument to the tm_fill(). It is important to note that, in tmap the breaks include a minimum and maximum. As a result, in order to end up with n categories, n+1 elements must be specified in the breaks option (the values must be in increasing order).\nBefore we get started, it is always a good practice to get some descriptive statistics on the variable before setting the break points. Code chunk below will be used to compute and display the descriptive statistics of DEPENDENCY field.\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n\nWith reference to the results above, we set break point at 0.60, 0.70, 0.80, and 0.90. In addition, we also need to include a minimum and maximum, which we set at 0 and 100. Our breaks vector is thus c(0, 0.60, 0.70, 0.80, 0.90, 1.00)\nNow, we will plot the choropleth map by using the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\ntmap supports colour ramps either defined by the user or a set of predefined colour ramps from the RColorBrewer package.\n\n\nTo change the colour, we assign the preferred colour to palette argument of tm_fill() as shown in the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nNotice that the choropleth map is shaded in green.\nTo reverse the colour shading, add a “-” prefix.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nNotice that the colour scheme has been reversed.\n\n\n\n\nMap layout refers to the combination of all map elements into a cohensive map. Map elements include among others the objects to be mapped, the title, the scale bar, the compass, margins and aspects ratios. Colour settings and data classification methods covered in the previous section relate to the palette and break-points are used to affect how the map looks.\n\n\nIn tmap, several legend options are provided to change the placement, format and appearance of the legend.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\ntmap allows a wide variety of layout settings to be changed. They can be called by using tmap_style().\nThe code chunk below shows the classic style is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\n\n\n\nBeside map style, tmap also also provides arguments to draw other map furniture such as compass, scale bar and grid lines.\nIn the code chunk below, tm_compass(), tm_scale_bar() and tm_grid() are used to add compass, scale bar and grid lines onto the choropleth map.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\nTo reset the default style, refer to the code chunk below.\n\ntmap_style(\"white\")\n\n\n\n\n\nSmall multiple maps, also referred to as facet maps, are composed of many maps arrange side-by-side, and sometimes stacked vertically. Small multiple maps enable the visualisation of how spatial relationships change with respect to another variable, such as time.\nIn tmap, small multiple maps can be plotted in three ways:\n\nby assigning multiple values to at least one of the asthetic arguments,\nby defining a group-by variable in tm_facets(), and\nby creating multiple stand-alone maps with tmap_arrange().\n\n\n\nIn this example, small multiple choropleth maps are created by defining ncols in tm_fill().\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\nIn this example, small multiple choropleth maps are created by assigning multiple values to at least one of the aesthetic arguments.\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\n\nIn this example, multiple small choropleth maps are created by using tm_facets().\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=FALSE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\nIn this example, multiple small choropleth maps are created by creating multiple stand-alone maps with tmap_arrange().\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\nInstead of creating small multiple choropleth map, you can also use selection funtion to map spatial objects meeting the selection criterion.\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap: Thematic Maps in R\ntmap\ntmap: get started!\ntmap: changes in version 2.0\ntmap: creating thematic maps in a flexible way (useR!2015)\nExploring and presenting maps with tmap (useR!2017)\n\n\n\n\n\nsf: Simple Features for R\nSimple Features for R: StandardizedSupport for Spatial Vector Data\nReading, Writing and Converting Simple Features\n\n\n\n\n\ndplyr\nTidy data\ntidyr: Easily Tidy Data with ‘spread()’ and ‘gather()’ Functions"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_1.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_1.html#overview",
    "title": "Hands On Exercise 8a",
    "section": "",
    "text": "Choropleth mapping involves the symbolisation of enumeration units, such as countries, provinces, states, counties or census units, using area patterns or graduated colors. For example, a social scientist may need to use a choropleth map to portray the spatial distribution of aged population of Singapore by Master Plan 2014 Subzone Boundary.\nIn this chapter, you will learn how to plot functional and truthful choropleth maps by using an R package called tmap package.\n\n\n\n\n\n\nTip\n\n\n\nIt is advisable for you to read the functional description of each function before using them."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_1.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_1.html#getting-started",
    "title": "Hands On Exercise 8a",
    "section": "",
    "text": "In this hands-on exercise, the key R package use is tmap package in R. Beside tmap package, four other R packages will be used. They are:\n\nreadr for importing delimited text file,\ntidyr for tidying data,\ndplyr for wrangling data and\nsf for handling geospatial data.\n\nAmong the four packages, readr, tidyr and dplyr are part of tidyverse package.\nThe code chunk below will be used to install and load these packages in RStudio.\n\npacman::p_load(sf, tmap, tidyverse)\n\n\n\n\n\n\n\nNote\n\n\n\nNotice that, we only need to install tidyverse instead of readr, tidyr and dplyr individually."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_1.html#importing-data-into-r",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_1.html#importing-data-into-r",
    "title": "Hands On Exercise 8a",
    "section": "",
    "text": "Two data set will be used to create the choropleth map. They are:\n\nMaster Plan 2014 Subzone Boundary (Web) (i.e. MP14_SUBZONE_WEB_PL) in ESRI shapefile format. It can be downloaded at data.gov.sg This is a geospatial data. It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2014.\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format (i.e. respopagesextod2011to2020.csv). This is an aspatial data fie. It can be downloaded at Department of Statistics, Singapore Although it does not contain any coordinates values, but it’s PA and SZ fields can be used as unique identifiers to geocode to MP14_SUBZONE_WEB_PL shapefile.\n\n\n\n\nThe code chunk below uses the st_read() function of sf package to import MP14_SUBZONE_WEB_PL shapefile into R as a simple feature data frame called mpsz.\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\sengjingyi\\ISSS608\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nYou can examine the content of mpsz by using the code chunk below.\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\nNotice that only the first ten records will be displayed. Do you know why?\n\nJing Yi’s response This is to give a sample of the underlying dataset without unnecessarily over whelming the reader.\n\n\n\nNext, we will import respopagsex2011to2020.csv file into RStudio and save the file into an R dataframe called popagsex.\nThe task will be performed by using read_csv() function of readr package as shown in the code chunk below.\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\n\n\n\nBefore a thematic map can be prepared, you are required to prepare a data table with year 2020 values. The data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\n\nYOUNG: age group 0 to 4 until age groyup 20 to 24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age group, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\n\nThe following data wrangling and transformation functions will be used:\n\npivot_wider() of tidyr package, and\nmutate(), filter(), group_by() and select() of dplyr package\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n\n\nBefore we can perform the georelational join, one extra step is required to convert the values in PA and SZ fields to uppercase. This is because the values of PA and SZ fields are made up of upper- and lowercase. On the other, hand the SUBZONE_N and PLN_AREA_N are in uppercase.\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nNext, left_join() of dplyr is used to join the geographical data and attribute table using planning subzone name e.g. SUBZONE_N and SZ as the common identifier.\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nThing to learn from the code chunk above:\n\nleft_join() of dplyr package is used with mpsz simple feature data frame as the left data table is to ensure that the output will be a simple features data frame.\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_1.html#choropleth-mapping-geospatial-data-using-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_1.html#choropleth-mapping-geospatial-data-using-tmap",
    "title": "Hands On Exercise 8a",
    "section": "",
    "text": "Two approaches can be used to prepare thematic map using tmap, they are:\n\nPlotting a thematic map quickly by using qtm().\nPlotting highly customisable thematic map by using tmap elements.\n\n\n\nThe easiest and quickest to draw a choropleth map using tmap is using qtm(). It is concise and provides a good default visualisation in many cases.\nThe code chunk below will draw a cartographic standard choropleth map as shown below.\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\ntmap_mode() with “plot” option is used to produce a static map. For interactive mode, “view” option should be used.\nfill argument is used to map the attribute (i.e. DEPENDENCY)\n\n\n\n\nDespite its usefulness of drawing a choropleth map quickly and easily, the disadvantge of qtm() is that it makes aesthetics of individual layers harder to control. To draw a high quality cartographic choropleth map as shown in the figure below, tmap’s drawing elements should be used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\nIn the following sub-section, we will share with you tmap functions that used to plot these elements.\n\n\nThe basic building block of tmap is tm_shape() followed by one or more layer elemments such as tm_fill() and tm_polygons().\nIn the code chunk below, tm_shape() is used to define the input data (i.e mpsz_pop2020) and tm_polygons() is used to draw the planning subzone polygons.\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\n\n\n\nTo draw a choropleth map showing the geographical distribution of a selected variable by planning subzone, we just need to assign the target variable such as Dependency to tm_polygons().\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\nThings to learn from tm_polygons():\n\nThe default interval binning used to draw the choropleth map is called “pretty”. A detailed discussion of the data classification methods supported by tmap will be provided in sub-section 4.3.\nThe default colour scheme used is YlOrRd of ColorBrewer. You will learn more about the color scheme in sub-section 4.4.\nBy default, Missing value will be shaded in grey.\n\n\n\n\nActually, tm_polygons() is a wraper of tm_fill() and tm_border(). tm_fill() shades the polygons by using the default colour scheme and tm_borders() adds the borders of the shapefile onto the choropleth map.\nThe code chunk below draws a choropleth map by using tm_fill() alone.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\nNotice that the planning subzones are shared according to the respective dependecy values\nTo add the boundary of the planning subzones, tm_borders will be used as shown in the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\n\n\n\n\nNotice that light-gray border lines have been added on the choropleth map.\nThe alpha argument is used to define transparency number between 0 (totally transparent) and 1 (not transparent). By default, the alpha value of the col is used (normally 1).\nBeside alpha argument, there are three other arguments for tm_borders(), they are:\n\ncol = border colour,\nlwd = border line width. The default is 1, and\nlty = border line type. The default is “solid”.\n\n\n\n\n\nMost choropleth maps employ some methods of data classification. The point of classification is to take a large number of observations and group them into data ranges or classes.\ntmap provides a total ten data classification methods, namely: fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks.\nTo define a data classification method, the style argument of tm_fill() or tm_polygons() will be used.\n\n\nThe code chunk below shows a quantile data classification that used 5 classes.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nIn the code chunk below, equal data classification method is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nNotice that the distribution of quantile data classification method are more evenly distributed then equal data classification method.\n\n\n\n\n\n\nMaps Lie!\n\n\n\n\n\n\n\n\n\n\n\n\nDIY\n\n\n\nUsing what you had learned, prepare choropleth maps by using different classification methods supported by tmap and compare their differences.\nDifferent classification methods include: fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks.\n\n\nTesting data classification method with kmeans.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 3,\n          style = \"kmeans\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nTesting data classification method with fisher.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 4,\n          style = \"fisher\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDIY\n\n\n\nPreparing choropleth maps by using similar classification method but with different numbers of classes (i.e. 2, 6, 10, 20). Compare the output maps, what observation can you draw?\nJing Yi’s observation drawn from the same classification method of “jenks”:\n\nAs the number of classes (n) increases, the granularity of the classes increase, providing more detail for the different level of dependency.\nWhile fewer classes (n =2) may hide important patterns, the greater number of classes (n=10, n=20) may risk over-complication.\nHence, it is crucial to determine the optimal number of classes to draw meaningful insights.\n\n\n\nCase where n = 2\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 2,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nCase where n = 6\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nCase where n = 10\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 10,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nCase where n = 20\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 20,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\nFor all the built-in styles, the category breaks are computed internally. In order to override these defaults, the breakpoints can be set explicitly by means of the breaks argument to the tm_fill(). It is important to note that, in tmap the breaks include a minimum and maximum. As a result, in order to end up with n categories, n+1 elements must be specified in the breaks option (the values must be in increasing order).\nBefore we get started, it is always a good practice to get some descriptive statistics on the variable before setting the break points. Code chunk below will be used to compute and display the descriptive statistics of DEPENDENCY field.\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n\nWith reference to the results above, we set break point at 0.60, 0.70, 0.80, and 0.90. In addition, we also need to include a minimum and maximum, which we set at 0 and 100. Our breaks vector is thus c(0, 0.60, 0.70, 0.80, 0.90, 1.00)\nNow, we will plot the choropleth map by using the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\ntmap supports colour ramps either defined by the user or a set of predefined colour ramps from the RColorBrewer package.\n\n\nTo change the colour, we assign the preferred colour to palette argument of tm_fill() as shown in the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nNotice that the choropleth map is shaded in green.\nTo reverse the colour shading, add a “-” prefix.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nNotice that the colour scheme has been reversed.\n\n\n\n\nMap layout refers to the combination of all map elements into a cohensive map. Map elements include among others the objects to be mapped, the title, the scale bar, the compass, margins and aspects ratios. Colour settings and data classification methods covered in the previous section relate to the palette and break-points are used to affect how the map looks.\n\n\nIn tmap, several legend options are provided to change the placement, format and appearance of the legend.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\ntmap allows a wide variety of layout settings to be changed. They can be called by using tmap_style().\nThe code chunk below shows the classic style is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\n\n\n\nBeside map style, tmap also also provides arguments to draw other map furniture such as compass, scale bar and grid lines.\nIn the code chunk below, tm_compass(), tm_scale_bar() and tm_grid() are used to add compass, scale bar and grid lines onto the choropleth map.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\nTo reset the default style, refer to the code chunk below.\n\ntmap_style(\"white\")\n\n\n\n\n\nSmall multiple maps, also referred to as facet maps, are composed of many maps arrange side-by-side, and sometimes stacked vertically. Small multiple maps enable the visualisation of how spatial relationships change with respect to another variable, such as time.\nIn tmap, small multiple maps can be plotted in three ways:\n\nby assigning multiple values to at least one of the asthetic arguments,\nby defining a group-by variable in tm_facets(), and\nby creating multiple stand-alone maps with tmap_arrange().\n\n\n\nIn this example, small multiple choropleth maps are created by defining ncols in tm_fill().\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\nIn this example, small multiple choropleth maps are created by assigning multiple values to at least one of the aesthetic arguments.\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\n\nIn this example, multiple small choropleth maps are created by using tm_facets().\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=FALSE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\nIn this example, multiple small choropleth maps are created by creating multiple stand-alone maps with tmap_arrange().\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\nInstead of creating small multiple choropleth map, you can also use selection funtion to map spatial objects meeting the selection criterion.\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_1.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_1.html#reference",
    "title": "Hands On Exercise 8a",
    "section": "",
    "text": "tmap: Thematic Maps in R\ntmap\ntmap: get started!\ntmap: changes in version 2.0\ntmap: creating thematic maps in a flexible way (useR!2015)\nExploring and presenting maps with tmap (useR!2017)\n\n\n\n\n\nsf: Simple Features for R\nSimple Features for R: StandardizedSupport for Spatial Vector Data\nReading, Writing and Converting Simple Features\n\n\n\n\n\ndplyr\nTidy data\ntidyr: Easily Tidy Data with ‘spread()’ and ‘gather()’ Functions"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands On Exercise 6",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to model, analyse and visualise network data using R.\nBy the end of this hands-on exercise, you will be able to:\n\ncreate graph object data frames, manipulate them using appropriate functions of dplyr, lubridate, and tidygraph,\nbuild network graph visualisation using appropriate functions of ggraph,\ncompute network geometrics using tidygraph,\nbuild advanced graph visualisation by incorporating the network geometrics, and\nbuild interactive network visualisation using visNetwork package.\n\n\n\n\n\n\nIn this hands-on exercise, four network data modelling and visualisation packages will be installed and launched. They are igraph, tidygraph, ggraph and visNetwork. Beside these four packages, tidyverse and lubridate, an R package specially designed to handle and wrangling time data will be installed and launched too.\nThe code chunk:\n\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\n\n\n\nThe data sets used in this hands-on exercise is from an oil exploration and extraction company. There are two data sets. One contains the nodes data and the other contains the edges (also know as link) data.\n\n\n\nGAStech-email_edges.csv which consists of two weeks of 9063 emails correspondances between 55 employees.\n\n\n\n\n\nGAStech_email_nodes.csv which consist of the names, department and title of the 55 employees.\n\n\n\n\nIn this step, you will import GAStech_email_node.csv and GAStech_email_edges-v2.csv into RStudio environment by using read_csv() of readr package.\n\nGAStech_nodes &lt;- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\nNext, we will examine the structure of the data frame using glimpse() of dplyr.\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\n\n\n\nWarning\n\n\n\nWarning\nThe output report of GAStech_edges above reveals that the SentDate is treated as “Character” data type instead of date data type. This is an error! Before we continue, it is important for us to change the data type of SentDate field back to “Date”” data type.\n\n\n\n\n\nThe code chunk below will be used to perform the changes.\n\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nboth dmy() and wday() are functions of lubridate package. lubridate is an R package that makes it easier to work with dates and times.\ndmy() transforms the SentDate to Date data type.\nwday() returns the day of the week as a decimal number or an ordered factor if label is TRUE. The argument abbr is FALSE keep the daya spells in full, i.e. Monday. The function will create a new column in the data.frame i.e. Weekday and the output of wday() will save in this newly created field.\nthe values in the Weekday field are in ordinal scale.\n\n\n\n\n\n\nTable below shows the data structure of the reformatted GAStech_edges data frame.\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 10\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    &lt;date&gt; 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     &lt;ord&gt; Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\n\n\nA close examination of GAStech_edges data.frame reveals that it consists of individual e-mail flow records. This is not very useful for visualisation.\nIn view of this, we will aggregate the individual by date, senders, receivers, main subject and day of the week.\nThe code chunk:\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\n\nfour functions from dplyr package are used. They are: filter(), group(), summarise(), and ungroup().\nThe output data.frame is called GAStech_edges_aggregated.\nA new field called Weight has been added in GAStech_edges_aggregated.\n\n\n\n\n\n\nTable below shows the data structure of the reformatted GAStech_edges data frame.\n\nglimpse(GAStech_edges_aggregated)\n\nRows: 1,372\nColumns: 4\n$ source  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  &lt;dbl&gt; 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday &lt;ord&gt; Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  &lt;int&gt; 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…\n\n\n\n\n\n\nIn this section, you will learn how to create a graph data model by using tidygraph package. It provides a tidy API for graph/network manipulation. While network data itself is not tidy, it can be envisioned as two tidy tables, one for node data and one for edge data. tidygraph provides a way to switch between the two tables and provides dplyr verbs for manipulating them. Furthermore it provides access to a lot of graph algorithms with return values that facilitate their use in a tidy workflow.\nBefore getting started, you are advised to read these two articles:\n\nIntroducing tidygraph\ntidygraph 1.1 - A tidy hope\n\n\n\nTwo functions of tidygraph package can be used to create network objects, they are:\n\ntbl_graph() creates a tbl_graph network object from nodes and edges data.\nas_tbl_graph() converts network data and objects to a tbl_graph network. Below are network data and objects supported by as_tbl_graph()\n\na node data.frame and an edge data.frame,\ndata.frame, list, matrix from base,\nigraph from igraph,\nnetwork from network,\ndendrogram and hclust from stats,\nNode from data.tree,\nphylo and evonet from ape, and\ngraphNEL, graphAM, graphBAM from graph (in Bioconductor).\n\n\n\n\n\n\nactivate() verb from tidygraph serves as a switch between tibbles for nodes and edges. All dplyr verbs applied to tbl_graph object are applied to the active tibble.\n\n\n\nIn the above the .N() function is used to gain access to the node data while manipulating the edge data. Similarly .E() will give you the edge data and .G() will give you the tbl_graph object itself.\n\n\n\n\nIn this section, you will use tbl_graph() of tinygraph package to build an tidygraph’s network graph data.frame.\nBefore typing the codes, you are recommended to review to reference guide of tbl_graph()\n\nGAStech_graph &lt;- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\n\n\n\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 54 × 4 (active)\n      id label               Department     Title                               \n   &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;          &lt;chr&gt;                               \n 1     1 Mat.Bramar          Administration Assistant to CEO                    \n 2     2 Anda.Ribera         Administration Assistant to CFO                    \n 3     3 Rachel.Pantanal     Administration Assistant to CIO                    \n 4     4 Linda.Lagos         Administration Assistant to COO                    \n 5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Mana…\n 6     6 Carla.Forluniau     Administration Assistant to IT Group Manager       \n 7     7 Cornelia.Lais       Administration Assistant to Security Group Manager \n 8    44 Kanon.Herrero       Security       Badging Office                      \n 9    45 Varja.Lagos         Security       Badging Office                      \n10    46 Stenig.Fusil        Security       Building Control                    \n# ℹ 44 more rows\n#\n# Edge Data: 1,372 × 4\n   from    to Weekday Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;    &lt;int&gt;\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\n\n\n\n\nThe output above reveals that GAStech_graph is a tbl_graph object with 54 nodes and 4541 edges.\nThe command also prints the first six rows of “Node Data” and the first three of “Edge Data”.\nIt states that the Node Data is active. The notion of an active tibble within a tbl_graph object makes it possible to manipulate the data in one tibble at a time.\n\n\n\n\nThe nodes tibble data frame is activated by default, but you can change which tibble data frame is active with the activate() function. Thus, if we wanted to rearrange the rows in the edges tibble to list those with the highest “weight” first, we could use activate() and then arrange().\nFor example,\n\nGAStech_graph %&gt;%\n  activate(edges) %&gt;%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 1,372 × 4 (active)\n    from    to Weekday   Weight\n   &lt;int&gt; &lt;int&gt; &lt;ord&gt;      &lt;int&gt;\n 1    40    41 Saturday      13\n 2    41    43 Monday        11\n 3    35    31 Tuesday       10\n 4    40    41 Monday        10\n 5    40    43 Monday        10\n 6    36    32 Sunday         9\n 7    40    43 Saturday       9\n 8    41    40 Monday         9\n 9    19    15 Wednesday      8\n10    35    38 Tuesday        8\n# ℹ 1,362 more rows\n#\n# Node Data: 54 × 4\n     id label           Department     Title           \n  &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows\n\n\nVisit the reference guide of activate() to find out more about the function.\n\n\n\n\nggraph is an extension of ggplot2, making it easier to carry over basic ggplot skills to the design of network graphs.\nAs in all network graph, there are three main aspects to a ggraph’s network graph, they are:\n\nnodes,\nedges and\nlayouts.\n\nFor a comprehensive discussion of each of this aspect of graph, please refer to their respective vignettes provided.\n\n\nThe code chunk below uses ggraph(), geom-edge_link() and geom_node_point() to plot a network graph by using GAStech_graph. Before your get started, it is advisable to read their respective reference guide at least once.\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\n\nThe basic plotting function is ggraph(), which takes the data to be used for the graph and the type of layout desired. Both of the arguments for ggraph() are built around igraph. Therefore, ggraph() can use either an igraph object or a tbl_graph object.\n\n\n\n\n\n\nIn this section, you will use theme_graph() to remove the x and y axes. Before your get started, it is advisable to read it’s reference guide at least once.\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\n\nggraph introduces a special ggplot theme that provides better defaults for network graphs than the normal ggplot defaults. theme_graph(), besides removing axes, grids, and border, changes the font to Arial Narrow (this can be overridden).\nThe ggraph theme can be set for a series of plots with the set_graph_style() command run before the graphs are plotted or by using theme_graph() in the individual plots.\n\n\n\n\n\n\nFurthermore, theme_graph() makes it easy to change the coloring of the plot.\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n\n\n\n\n\n\n\n\n\n\n\nggraph support many layout for standard used, they are: star, circle, nicely (default), dh, gem, graphopt, grid, mds, spahere, randomly, fr, kk, drl and lgl. Figures below and on the right show layouts supported by ggraph().\n\n\n\n\n\n\n\n\n\nThe code chunks below will be used to plot the network graph using Fruchterman and Reingold layout.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThing to learn from the code chunk above:\n\n\n\nlayout argument is used to define the layout to be used\n\n\n\n\n\nIn this section, you will colour each node by referring to their respective departments.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunks above:\n\n\n\n\ngeom_node_point is equivalent in functionality to geo_point of ggplot2. It allows for simple plotting of nodes in different shapes, colours and sizes. In the codes chnuks above colour and size are used.\n\n\n\n\n\n\nIn the code chunk below, the thickness of the edges will be mapped with the Weight variable.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunks above:\n\n\n\n\ngeom_edge_link draws edges in the simplest way - as straight lines between the start and end nodes. But, it can do more that that. In the example above, argument width is used to map the width of the line in proportional to the Weight attribute and argument alpha is used to introduce opacity on the line.\n\n\n\n\n\n\n\nAnother very useful feature of ggraph is faceting. In visualising network data, this technique can be used to reduce edge over-plotting in a very meaning way by spreading nodes and edges out based on their attributes. In this section, you will learn how to use faceting technique to visualise network data.\nThere are three functions in ggraph to implement faceting, they are:\n\nfacet_nodes() whereby edges are only draw in a panel if both terminal nodes are present here,\nfacet_edges() whereby nodes are always drawn in al panels even if the node data contains an attribute named the same as the one used for the edge facetting, and\nfacet_graph() faceting on two variables simultaneously.\n\n\n\nIn the code chunk below, facet_edges() is used. Before getting started, it is advisable for you to read it’s reference guide at least once.\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below uses theme() to change the position of the legend.\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below adds frame to each graph.\n\nset_graph_style() \n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunkc below, facet_nodes() is used. Before getting started, it is advisable for you to read it’s reference guide at least once.\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCentrality measures are a collection of statistical indices use to describe the relative important of the actors are to a network. There are four well-known centrality measures, namely: degree, betweenness, closeness and eigenvector. It is beyond the scope of this hands-on exercise to cover the principles and mathematics of these measure here. Students are encouraged to refer to Chapter 7: Actor Prominence of A User’s Guide to Network Analysis in R to gain better understanding of theses network measures.\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\nmutate() of dplyr is used to perform the computation. the algorithm used, on the other hand, is the centrality_betweenness() of tidygraph.\n\n\n\n\n\nIt is important to note that from ggraph v2.0 onward tidygraph algorithms such as centrality measures can be accessed directly in ggraph calls. This means that it is no longer necessary to precompute and store derived node and edge centrality measures on the graph in order to use them in a plot.\n\ng &lt;- GAStech_graph %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\ntidygraph package inherits many of the community detection algorithms imbedded into igraph and makes them available to us, including Edge-betweenness (group_edge_betweenness), Leading eigenvector (group_leading_eigen), Fast-greedy (group_fast_greedy), Louvain (group_louvain), Walktrap (group_walktrap), Label propagation (group_label_prop), InfoMAP (group_infomap), Spinglass (group_spinglass), and Optimal (group_optimal). Some community algorithms are designed to take into account direction or weight, while others ignore it. Use this link to find out more about community detection functions provided by tidygraph,\nIn the code chunk below group_edge_betweenness() is used.\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\nvisNetwork() is a R package for network visualization, using vis.js javascript library.\nvisNetwork() function uses a nodes list and edges list to create an interactive graph.\n\nThe nodes list must include an “id” column, and the edge list must have “from” and “to” columns.\nThe function also plots the labels for the nodes, using the names of the actors from the “label” column in the node list.\n\nThe resulting graph is fun to play around with.\n\nYou can move the nodes and the graph will use an algorithm to keep the nodes properly spaced.\nYou can also zoom in and out on the plot and move it around to re-center it.\n\n\n\n\nBefore we can plot the interactive network graph, we need to prepare the data model by using the code chunk below.\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %&gt;%\n  rename(from = id) %&gt;%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %&gt;%\n  rename(to = id) %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(from, to) %&gt;%\n    summarise(weight = n()) %&gt;%\n  filter(from!=to) %&gt;%\n  filter(weight &gt; 1) %&gt;%\n  ungroup()\n\n\n\n\nThe code chunk below will be used to plot an interactive network graph by using the data prepared.\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)\n\n\n\n\n\n\n\n\nIn the code chunk below, Fruchterman and Reingold layout is used.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") \n\n\n\n\n\nVisit Igraph to find out more about visIgraphLayout’s argument.\n\n\n\nvisNetwork() looks for a field called “group” in the nodes object and colour the nodes according to the values of the group field.\nThe code chunk below rename Department field to group.\n\nGAStech_nodes &lt;- GAStech_nodes %&gt;%\n  rename(group = Department) \n\nWhen we rerun the code chunk below, visNetwork shades the nodes by assigning unique colour to each category in the group field.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\nIn the code run below visEdges() is used to symbolise the edges.\n- The argument arrows is used to define where to place the arrow.\n- The smooth argument is used to plot the edges using a smooth curve.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\nVisit Option to find out more about visEdges’s argument.\n\n\n\nIn the code chunk below, visOptions() is used to incorporate interactivity features in the data visualisation.\n\nThe argument highlightNearest highlights nearest when clicking a node.\nThe argument nodesIdSelection adds an id node selection creating an HTML select element.\n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\nVisit Option to find out more about visOption’s argument."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#overview",
    "title": "Hands On Exercise 6",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to model, analyse and visualise network data using R.\nBy the end of this hands-on exercise, you will be able to:\n\ncreate graph object data frames, manipulate them using appropriate functions of dplyr, lubridate, and tidygraph,\nbuild network graph visualisation using appropriate functions of ggraph,\ncompute network geometrics using tidygraph,\nbuild advanced graph visualisation by incorporating the network geometrics, and\nbuild interactive network visualisation using visNetwork package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#getting-started",
    "title": "Hands On Exercise 6",
    "section": "",
    "text": "In this hands-on exercise, four network data modelling and visualisation packages will be installed and launched. They are igraph, tidygraph, ggraph and visNetwork. Beside these four packages, tidyverse and lubridate, an R package specially designed to handle and wrangling time data will be installed and launched too.\nThe code chunk:\n\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#the-data",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#the-data",
    "title": "Hands On Exercise 6",
    "section": "",
    "text": "The data sets used in this hands-on exercise is from an oil exploration and extraction company. There are two data sets. One contains the nodes data and the other contains the edges (also know as link) data.\n\n\n\nGAStech-email_edges.csv which consists of two weeks of 9063 emails correspondances between 55 employees.\n\n\n\n\n\nGAStech_email_nodes.csv which consist of the names, department and title of the 55 employees.\n\n\n\n\nIn this step, you will import GAStech_email_node.csv and GAStech_email_edges-v2.csv into RStudio environment by using read_csv() of readr package.\n\nGAStech_nodes &lt;- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\nNext, we will examine the structure of the data frame using glimpse() of dplyr.\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\n\n\n\nWarning\n\n\n\nWarning\nThe output report of GAStech_edges above reveals that the SentDate is treated as “Character” data type instead of date data type. This is an error! Before we continue, it is important for us to change the data type of SentDate field back to “Date”” data type.\n\n\n\n\n\nThe code chunk below will be used to perform the changes.\n\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nboth dmy() and wday() are functions of lubridate package. lubridate is an R package that makes it easier to work with dates and times.\ndmy() transforms the SentDate to Date data type.\nwday() returns the day of the week as a decimal number or an ordered factor if label is TRUE. The argument abbr is FALSE keep the daya spells in full, i.e. Monday. The function will create a new column in the data.frame i.e. Weekday and the output of wday() will save in this newly created field.\nthe values in the Weekday field are in ordinal scale.\n\n\n\n\n\n\nTable below shows the data structure of the reformatted GAStech_edges data frame.\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 10\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    &lt;date&gt; 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     &lt;ord&gt; Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\n\n\nA close examination of GAStech_edges data.frame reveals that it consists of individual e-mail flow records. This is not very useful for visualisation.\nIn view of this, we will aggregate the individual by date, senders, receivers, main subject and day of the week.\nThe code chunk:\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\n\nfour functions from dplyr package are used. They are: filter(), group(), summarise(), and ungroup().\nThe output data.frame is called GAStech_edges_aggregated.\nA new field called Weight has been added in GAStech_edges_aggregated.\n\n\n\n\n\n\nTable below shows the data structure of the reformatted GAStech_edges data frame.\n\nglimpse(GAStech_edges_aggregated)\n\nRows: 1,372\nColumns: 4\n$ source  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  &lt;dbl&gt; 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday &lt;ord&gt; Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  &lt;int&gt; 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#creating-network-objects-using-tidygraph",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#creating-network-objects-using-tidygraph",
    "title": "Hands On Exercise 6",
    "section": "",
    "text": "In this section, you will learn how to create a graph data model by using tidygraph package. It provides a tidy API for graph/network manipulation. While network data itself is not tidy, it can be envisioned as two tidy tables, one for node data and one for edge data. tidygraph provides a way to switch between the two tables and provides dplyr verbs for manipulating them. Furthermore it provides access to a lot of graph algorithms with return values that facilitate their use in a tidy workflow.\nBefore getting started, you are advised to read these two articles:\n\nIntroducing tidygraph\ntidygraph 1.1 - A tidy hope\n\n\n\nTwo functions of tidygraph package can be used to create network objects, they are:\n\ntbl_graph() creates a tbl_graph network object from nodes and edges data.\nas_tbl_graph() converts network data and objects to a tbl_graph network. Below are network data and objects supported by as_tbl_graph()\n\na node data.frame and an edge data.frame,\ndata.frame, list, matrix from base,\nigraph from igraph,\nnetwork from network,\ndendrogram and hclust from stats,\nNode from data.tree,\nphylo and evonet from ape, and\ngraphNEL, graphAM, graphBAM from graph (in Bioconductor).\n\n\n\n\n\n\nactivate() verb from tidygraph serves as a switch between tibbles for nodes and edges. All dplyr verbs applied to tbl_graph object are applied to the active tibble.\n\n\n\nIn the above the .N() function is used to gain access to the node data while manipulating the edge data. Similarly .E() will give you the edge data and .G() will give you the tbl_graph object itself.\n\n\n\n\nIn this section, you will use tbl_graph() of tinygraph package to build an tidygraph’s network graph data.frame.\nBefore typing the codes, you are recommended to review to reference guide of tbl_graph()\n\nGAStech_graph &lt;- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\n\n\n\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 54 × 4 (active)\n      id label               Department     Title                               \n   &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;          &lt;chr&gt;                               \n 1     1 Mat.Bramar          Administration Assistant to CEO                    \n 2     2 Anda.Ribera         Administration Assistant to CFO                    \n 3     3 Rachel.Pantanal     Administration Assistant to CIO                    \n 4     4 Linda.Lagos         Administration Assistant to COO                    \n 5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Mana…\n 6     6 Carla.Forluniau     Administration Assistant to IT Group Manager       \n 7     7 Cornelia.Lais       Administration Assistant to Security Group Manager \n 8    44 Kanon.Herrero       Security       Badging Office                      \n 9    45 Varja.Lagos         Security       Badging Office                      \n10    46 Stenig.Fusil        Security       Building Control                    \n# ℹ 44 more rows\n#\n# Edge Data: 1,372 × 4\n   from    to Weekday Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;    &lt;int&gt;\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\n\n\n\n\nThe output above reveals that GAStech_graph is a tbl_graph object with 54 nodes and 4541 edges.\nThe command also prints the first six rows of “Node Data” and the first three of “Edge Data”.\nIt states that the Node Data is active. The notion of an active tibble within a tbl_graph object makes it possible to manipulate the data in one tibble at a time.\n\n\n\n\nThe nodes tibble data frame is activated by default, but you can change which tibble data frame is active with the activate() function. Thus, if we wanted to rearrange the rows in the edges tibble to list those with the highest “weight” first, we could use activate() and then arrange().\nFor example,\n\nGAStech_graph %&gt;%\n  activate(edges) %&gt;%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 1,372 × 4 (active)\n    from    to Weekday   Weight\n   &lt;int&gt; &lt;int&gt; &lt;ord&gt;      &lt;int&gt;\n 1    40    41 Saturday      13\n 2    41    43 Monday        11\n 3    35    31 Tuesday       10\n 4    40    41 Monday        10\n 5    40    43 Monday        10\n 6    36    32 Sunday         9\n 7    40    43 Saturday       9\n 8    41    40 Monday         9\n 9    19    15 Wednesday      8\n10    35    38 Tuesday        8\n# ℹ 1,362 more rows\n#\n# Node Data: 54 × 4\n     id label           Department     Title           \n  &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows\n\n\nVisit the reference guide of activate() to find out more about the function."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-static-network-graphs-with-ggraph-package",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-static-network-graphs-with-ggraph-package",
    "title": "Hands On Exercise 6",
    "section": "",
    "text": "ggraph is an extension of ggplot2, making it easier to carry over basic ggplot skills to the design of network graphs.\nAs in all network graph, there are three main aspects to a ggraph’s network graph, they are:\n\nnodes,\nedges and\nlayouts.\n\nFor a comprehensive discussion of each of this aspect of graph, please refer to their respective vignettes provided.\n\n\nThe code chunk below uses ggraph(), geom-edge_link() and geom_node_point() to plot a network graph by using GAStech_graph. Before your get started, it is advisable to read their respective reference guide at least once.\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\n\nThe basic plotting function is ggraph(), which takes the data to be used for the graph and the type of layout desired. Both of the arguments for ggraph() are built around igraph. Therefore, ggraph() can use either an igraph object or a tbl_graph object.\n\n\n\n\n\n\nIn this section, you will use theme_graph() to remove the x and y axes. Before your get started, it is advisable to read it’s reference guide at least once.\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\n\nggraph introduces a special ggplot theme that provides better defaults for network graphs than the normal ggplot defaults. theme_graph(), besides removing axes, grids, and border, changes the font to Arial Narrow (this can be overridden).\nThe ggraph theme can be set for a series of plots with the set_graph_style() command run before the graphs are plotted or by using theme_graph() in the individual plots.\n\n\n\n\n\n\nFurthermore, theme_graph() makes it easy to change the coloring of the plot.\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n\n\n\n\n\n\n\n\n\n\n\nggraph support many layout for standard used, they are: star, circle, nicely (default), dh, gem, graphopt, grid, mds, spahere, randomly, fr, kk, drl and lgl. Figures below and on the right show layouts supported by ggraph().\n\n\n\n\n\n\n\n\n\nThe code chunks below will be used to plot the network graph using Fruchterman and Reingold layout.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThing to learn from the code chunk above:\n\n\n\nlayout argument is used to define the layout to be used\n\n\n\n\n\nIn this section, you will colour each node by referring to their respective departments.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunks above:\n\n\n\n\ngeom_node_point is equivalent in functionality to geo_point of ggplot2. It allows for simple plotting of nodes in different shapes, colours and sizes. In the codes chnuks above colour and size are used.\n\n\n\n\n\n\nIn the code chunk below, the thickness of the edges will be mapped with the Weight variable.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunks above:\n\n\n\n\ngeom_edge_link draws edges in the simplest way - as straight lines between the start and end nodes. But, it can do more that that. In the example above, argument width is used to map the width of the line in proportional to the Weight attribute and argument alpha is used to introduce opacity on the line."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#creating-facet-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#creating-facet-graphs",
    "title": "Hands On Exercise 6",
    "section": "",
    "text": "Another very useful feature of ggraph is faceting. In visualising network data, this technique can be used to reduce edge over-plotting in a very meaning way by spreading nodes and edges out based on their attributes. In this section, you will learn how to use faceting technique to visualise network data.\nThere are three functions in ggraph to implement faceting, they are:\n\nfacet_nodes() whereby edges are only draw in a panel if both terminal nodes are present here,\nfacet_edges() whereby nodes are always drawn in al panels even if the node data contains an attribute named the same as the one used for the edge facetting, and\nfacet_graph() faceting on two variables simultaneously.\n\n\n\nIn the code chunk below, facet_edges() is used. Before getting started, it is advisable for you to read it’s reference guide at least once.\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below uses theme() to change the position of the legend.\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below adds frame to each graph.\n\nset_graph_style() \n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunkc below, facet_nodes() is used. Before getting started, it is advisable for you to read it’s reference guide at least once.\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#network-metrics-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#network-metrics-analysis",
    "title": "Hands On Exercise 6",
    "section": "",
    "text": "Centrality measures are a collection of statistical indices use to describe the relative important of the actors are to a network. There are four well-known centrality measures, namely: degree, betweenness, closeness and eigenvector. It is beyond the scope of this hands-on exercise to cover the principles and mathematics of these measure here. Students are encouraged to refer to Chapter 7: Actor Prominence of A User’s Guide to Network Analysis in R to gain better understanding of theses network measures.\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\nmutate() of dplyr is used to perform the computation. the algorithm used, on the other hand, is the centrality_betweenness() of tidygraph.\n\n\n\n\n\nIt is important to note that from ggraph v2.0 onward tidygraph algorithms such as centrality measures can be accessed directly in ggraph calls. This means that it is no longer necessary to precompute and store derived node and edge centrality measures on the graph in order to use them in a plot.\n\ng &lt;- GAStech_graph %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\ntidygraph package inherits many of the community detection algorithms imbedded into igraph and makes them available to us, including Edge-betweenness (group_edge_betweenness), Leading eigenvector (group_leading_eigen), Fast-greedy (group_fast_greedy), Louvain (group_louvain), Walktrap (group_walktrap), Label propagation (group_label_prop), InfoMAP (group_infomap), Spinglass (group_spinglass), and Optimal (group_optimal). Some community algorithms are designed to take into account direction or weight, while others ignore it. Use this link to find out more about community detection functions provided by tidygraph,\nIn the code chunk below group_edge_betweenness() is used.\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-interactive-network-graph-with-visnetwork",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-interactive-network-graph-with-visnetwork",
    "title": "Hands On Exercise 6",
    "section": "",
    "text": "visNetwork() is a R package for network visualization, using vis.js javascript library.\nvisNetwork() function uses a nodes list and edges list to create an interactive graph.\n\nThe nodes list must include an “id” column, and the edge list must have “from” and “to” columns.\nThe function also plots the labels for the nodes, using the names of the actors from the “label” column in the node list.\n\nThe resulting graph is fun to play around with.\n\nYou can move the nodes and the graph will use an algorithm to keep the nodes properly spaced.\nYou can also zoom in and out on the plot and move it around to re-center it.\n\n\n\n\nBefore we can plot the interactive network graph, we need to prepare the data model by using the code chunk below.\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %&gt;%\n  rename(from = id) %&gt;%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %&gt;%\n  rename(to = id) %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(from, to) %&gt;%\n    summarise(weight = n()) %&gt;%\n  filter(from!=to) %&gt;%\n  filter(weight &gt; 1) %&gt;%\n  ungroup()\n\n\n\n\nThe code chunk below will be used to plot an interactive network graph by using the data prepared.\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)\n\n\n\n\n\n\n\n\nIn the code chunk below, Fruchterman and Reingold layout is used.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") \n\n\n\n\n\nVisit Igraph to find out more about visIgraphLayout’s argument.\n\n\n\nvisNetwork() looks for a field called “group” in the nodes object and colour the nodes according to the values of the group field.\nThe code chunk below rename Department field to group.\n\nGAStech_nodes &lt;- GAStech_nodes %&gt;%\n  rename(group = Department) \n\nWhen we rerun the code chunk below, visNetwork shades the nodes by assigning unique colour to each category in the group field.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\nIn the code run below visEdges() is used to symbolise the edges.\n- The argument arrows is used to define where to place the arrow.\n- The smooth argument is used to plot the edges using a smooth curve.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\nVisit Option to find out more about visEdges’s argument.\n\n\n\nIn the code chunk below, visOptions() is used to incorporate interactivity features in the data visualisation.\n\nThe argument highlightNearest highlights nearest when clicking a node.\nThe argument nodesIdSelection adds an id node selection creating an HTML select element.\n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\nVisit Option to find out more about visOption’s argument."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html",
    "title": "Hands On Exercise 4c",
    "section": "",
    "text": "Funnel plot is a specially designed data visualisation for conducting unbiased comparison between outlets, stores or business entities. By the end of this hands-on exercise, you will gain hands-on experience on:\n\nplotting funnel plots by using funnelPlotR package,\nplotting static funnel plot by using ggplot2 package, and\nplotting interactive funnel plot by using both plotly R and ggplot2 packages.\n\n\n\n\nIn this exercise, four R packages will be used. They are:\n\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\nplotly for creating interactive funnel plot.\n\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\n\n\n\nIn this section, COVID-19_DKI_Jakarta will be used. The data was downloaded from Open Data Covid-19 Provinsi DKI Jakarta portal. For this hands-on exercise, we are going to compare the cumulative COVID-19 cases and death by sub-district (i.e. kelurahan) as at 31st July 2021, DKI Jakarta.\nThe code chunk below imports the data into R and save it into a tibble data frame object called covid19.\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)\n\n\n\n\nFunnelPlotR package uses ggplot to generate funnel plots. It requires a numerator (events of interest), denominator (population to be considered) and group. The key arguments selected for customisation are:\n\nlimit: plot limits (95 or 99).\nlabel_outliers: to label outliers (true or false).\nPoisson_limits: to add Poisson limits to the plot.\nOD_adjust: to add overdispersed limits to the plot.\nxrange and yrange: to specify the range to display for axes, acts like a zoom function.\nOther aesthetic components such as graph title, axis labels etc.\n\n\n\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(.data = covid19, \n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\nA funnel plot object with 267 points of which 0 are outliers. Plot is adjusted for overdispersion.\n\n\n\n\n\n\nThings to learn from the code chunk above.\n\n\n\n\ngroup in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\nBy default, data_typeargument is “SR”.\nlimit: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution.\n\n\n\n\n\n\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(.data = covid19, \n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nA funnel plot object with 267 points of which 7 are outliers. Plot is adjusted for over dispersion.\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\ndata_type argument is used to change from default “SR” to “PR” (i.e. proportions).\nxrange and yrange are used to set the range of x-axis and y-axis\n\n\n\n\n\n\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(.data = covid19, \n  numerator = Death, \n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nThings to learn from the code chunk above.\n\n\n\n\nlabel = NA argument is to removed the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles.\n\n\n\n\n\n\n\nIn this section, you will gain hands-on experience on building funnel plots step-by-step by using ggplot2. It aims to enhance you working experience of ggplot2 to customise speciallised data visualisation like funnel plot.\n\n\nTo plot the funnel plot from scratch, we need to derive cumulative death rate and standard error of cumulative death rate.\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nNext, the fit.mean is computed by using the code chunk below.\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\n\n\nThe code chunk below is used to compute the lower and upper limits for 95% confidence interval.\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\n\nIn the code chunk below, ggplot2 functions are used to plot a static funnel plot.\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n\n\n\n\n\nThe funnel plot created using ggplot2 functions can be made interactive with ggplotly() of plotly r package.\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly\n\n\n\n\n\n\n\n\n\n\nfunnelPlotR package.\nFunnel Plots for Indirectly-standardised ratios.\nChanging funnel plot options\nggplot2 package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#overview",
    "title": "Hands On Exercise 4c",
    "section": "",
    "text": "Funnel plot is a specially designed data visualisation for conducting unbiased comparison between outlets, stores or business entities. By the end of this hands-on exercise, you will gain hands-on experience on:\n\nplotting funnel plots by using funnelPlotR package,\nplotting static funnel plot by using ggplot2 package, and\nplotting interactive funnel plot by using both plotly R and ggplot2 packages."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#installing-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#installing-and-launching-r-packages",
    "title": "Hands On Exercise 4c",
    "section": "",
    "text": "In this exercise, four R packages will be used. They are:\n\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\nplotly for creating interactive funnel plot.\n\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#importing-data",
    "title": "Hands On Exercise 4c",
    "section": "",
    "text": "In this section, COVID-19_DKI_Jakarta will be used. The data was downloaded from Open Data Covid-19 Provinsi DKI Jakarta portal. For this hands-on exercise, we are going to compare the cumulative COVID-19 cases and death by sub-district (i.e. kelurahan) as at 31st July 2021, DKI Jakarta.\nThe code chunk below imports the data into R and save it into a tibble data frame object called covid19.\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#funnelplotr-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#funnelplotr-methods",
    "title": "Hands On Exercise 4c",
    "section": "",
    "text": "FunnelPlotR package uses ggplot to generate funnel plots. It requires a numerator (events of interest), denominator (population to be considered) and group. The key arguments selected for customisation are:\n\nlimit: plot limits (95 or 99).\nlabel_outliers: to label outliers (true or false).\nPoisson_limits: to add Poisson limits to the plot.\nOD_adjust: to add overdispersed limits to the plot.\nxrange and yrange: to specify the range to display for axes, acts like a zoom function.\nOther aesthetic components such as graph title, axis labels etc.\n\n\n\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(.data = covid19, \n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\nA funnel plot object with 267 points of which 0 are outliers. Plot is adjusted for overdispersion.\n\n\n\n\n\n\nThings to learn from the code chunk above.\n\n\n\n\ngroup in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\nBy default, data_typeargument is “SR”.\nlimit: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution.\n\n\n\n\n\n\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(.data = covid19, \n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nA funnel plot object with 267 points of which 7 are outliers. Plot is adjusted for over dispersion.\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\ndata_type argument is used to change from default “SR” to “PR” (i.e. proportions).\nxrange and yrange are used to set the range of x-axis and y-axis\n\n\n\n\n\n\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(.data = covid19, \n  numerator = Death, \n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nThings to learn from the code chunk above.\n\n\n\n\nlabel = NA argument is to removed the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "title": "Hands On Exercise 4c",
    "section": "",
    "text": "In this section, you will gain hands-on experience on building funnel plots step-by-step by using ggplot2. It aims to enhance you working experience of ggplot2 to customise speciallised data visualisation like funnel plot.\n\n\nTo plot the funnel plot from scratch, we need to derive cumulative death rate and standard error of cumulative death rate.\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nNext, the fit.mean is computed by using the code chunk below.\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\n\n\nThe code chunk below is used to compute the lower and upper limits for 95% confidence interval.\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\n\nIn the code chunk below, ggplot2 functions are used to plot a static funnel plot.\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n\n\n\n\n\nThe funnel plot created using ggplot2 functions can be made interactive with ggplotly() of plotly r package.\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#references",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#references",
    "title": "Hands On Exercise 4c",
    "section": "",
    "text": "funnelPlotR package.\nFunnel Plots for Indirectly-standardised ratios.\nChanging funnel plot options\nggplot2 package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html",
    "title": "Hands On Exercise 4a",
    "section": "",
    "text": "In this hands-on exercise, you will gain hands-on experience on using:\n\nggstatsplot package to create visual graphics with rich statistical information,\nperformance package to visualise model diagnostics, and\nparameters package to visualise model parameters\n\n\n\n\nggstatsplot  is an extension of ggplot2 package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n\nTo provide alternative statistical inference methods by default.\nTo follow best practices for statistical reporting. For all statistical tests reported in the plots, the default template abides by the [APA](https://my.ilstu.edu/~jhkahn/apastats.html) gold standard for statistical reporting. For example, here are results from a robust t-test:\n\n\n\n\n\n\n\nIn this exercise, ggstatsplot and tidyverse will be used.\n\npacman::p_load(ggstatsplot, tidyverse, rstantools)\n\n\n\n\n\nexam = read_csv(\"data/Exam_data.csv\")\n\n\n\n\nIn the code chunk below, gghistostats() is used to to build an visual of one-sample test on English scores.\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n\n\n\nA Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\nThat’s because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.\nWhen we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10. It can be defined mathematically as\n\n\n\nThe Schwarz criterion is one of the easiest ways to calculate rough approximation of the Bayes Factor.\n\n\n\n\nA Bayes Factor can be any positive number. One of the most common interpretations is this one—first proposed by Harold Jeffereys (1961) and slightly modified by Lee and Wagenmakers in 2013:\n\n\n\n\nIn the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of Maths scores by gender.\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n\n\nIn the code chunk below, ggbetweenstats() is used to build a visual for One-way ANOVA test on English score by race.\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n“ns” → only non-significant\n“s” → only significant\n“all” → everything\n\n\n\n\n\n\n\n\n\nIn the code chunk below, ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using cut().\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nIn this code chunk below ggbarstats() is used to build a visual for Significant Test of Association.\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)\n\n\n\n\n\n\n\n\n\n\n\n\nIn this section, you will learn how to visualise model diagnostic and model parameters by using parameters package.\n\nToyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables.\n\n\n\n\n\n\n\n\n## problem installing packages - Error in readRDS(dest) : error reading from connection\npacman::p_load(readxl, performance, parameters, see, qqplotr, ggstatsplot )\n\n\n\n\nIn the code chunk below, read_xls() of readxl package is used to import the data worksheet of ToyotaCorolla.xls workbook into R.\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\n\n\n\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of R.\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\n\nIn the code chunk, check_collinearity() of performance package.\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\n## error\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunk, check_normality() of performance package.\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n &lt;- check_normality(model1)\nplot(check_n)\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunk, check_heteroscedasticity() of performance package.\n\ncheck_h &lt;- check_heteroscedasticity(model1)\nplot(check_h)\n\n\n\n\n\n\n\n\n\n\n\nWe can also perform the complete by using check_model().\n\ncheck_model(model1)\n\n\n\n\n\n\n\n\n\n\n\nIn the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\nplot(parameters(model1))\n\n\n\n\n\n\n\n\n\n\n\nIn the code below, ggcoefstats() of ggstatsplot package to visualise the parameters of a regression model.\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#learning-outcome",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#learning-outcome",
    "title": "Hands On Exercise 4a",
    "section": "",
    "text": "In this hands-on exercise, you will gain hands-on experience on using:\n\nggstatsplot package to create visual graphics with rich statistical information,\nperformance package to visualise model diagnostics, and\nparameters package to visualise model parameters"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#visual-statistical-analysis-with-ggstatsplot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#visual-statistical-analysis-with-ggstatsplot",
    "title": "Hands On Exercise 4a",
    "section": "",
    "text": "ggstatsplot  is an extension of ggplot2 package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n\nTo provide alternative statistical inference methods by default.\nTo follow best practices for statistical reporting. For all statistical tests reported in the plots, the default template abides by the [APA](https://my.ilstu.edu/~jhkahn/apastats.html) gold standard for statistical reporting. For example, here are results from a robust t-test:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#getting-started",
    "title": "Hands On Exercise 4a",
    "section": "",
    "text": "In this exercise, ggstatsplot and tidyverse will be used.\n\npacman::p_load(ggstatsplot, tidyverse, rstantools)\n\n\n\n\n\nexam = read_csv(\"data/Exam_data.csv\")\n\n\n\n\nIn the code chunk below, gghistostats() is used to to build an visual of one-sample test on English scores.\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n\n\n\nA Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\nThat’s because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.\nWhen we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10. It can be defined mathematically as\n\n\n\nThe Schwarz criterion is one of the easiest ways to calculate rough approximation of the Bayes Factor.\n\n\n\n\nA Bayes Factor can be any positive number. One of the most common interpretations is this one—first proposed by Harold Jeffereys (1961) and slightly modified by Lee and Wagenmakers in 2013:\n\n\n\n\nIn the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of Maths scores by gender.\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n\n\nIn the code chunk below, ggbetweenstats() is used to build a visual for One-way ANOVA test on English score by race.\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n“ns” → only non-significant\n“s” → only significant\n“all” → everything\n\n\n\n\n\n\n\n\n\nIn the code chunk below, ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using cut().\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nIn this code chunk below ggbarstats() is used to build a visual for Significant Test of Association.\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#visualising-models",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#visualising-models",
    "title": "Hands On Exercise 4a",
    "section": "",
    "text": "In this section, you will learn how to visualise model diagnostic and model parameters by using parameters package.\n\nToyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#getting-started-1",
    "title": "Hands On Exercise 4a",
    "section": "",
    "text": "## problem installing packages - Error in readRDS(dest) : error reading from connection\npacman::p_load(readxl, performance, parameters, see, qqplotr, ggstatsplot )\n\n\n\n\nIn the code chunk below, read_xls() of readxl package is used to import the data worksheet of ToyotaCorolla.xls workbook into R.\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\n\n\n\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of R.\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\n\nIn the code chunk, check_collinearity() of performance package.\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\n## error\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunk, check_normality() of performance package.\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n &lt;- check_normality(model1)\nplot(check_n)\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunk, check_heteroscedasticity() of performance package.\n\ncheck_h &lt;- check_heteroscedasticity(model1)\nplot(check_h)\n\n\n\n\n\n\n\n\n\n\n\nWe can also perform the complete by using check_model().\n\ncheck_model(model1)\n\n\n\n\n\n\n\n\n\n\n\nIn the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\nplot(parameters(model1))\n\n\n\n\n\n\n\n\n\n\n\nIn the code below, ggcoefstats() of ggstatsplot package to visualise the parameters of a regression model.\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html",
    "title": "Hands On Exercise 3a",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to create interactive data visualisation by using functions provided by ggiraph and plotlyr packages\n\n\n\nFirst, write a code chunk to check, install and launch the following R packages:\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\nThe code chunk below will be used to accomplish the task.\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\nIn this section, Exam_data.csv provided will be used. Using read_csv() of readr package, import Exam_data.csv into R.\nThe code chunk below read_csv() of readr package is used to import Exam_data.csv data file into R and save it as an tibble data frame called exam_data.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\nggiraph  is an htmlwidget and a ggplot2 extension. It allows ggplot graphics to be interactive.\nInteractive is made with ggplot geometries that can understand three arguments:\n\nTooltip: a column of data-sets that contain tooltips to be displayed when the mouse is over elements.\nOnclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked.\nData_id: a column of data-sets that contain an id to be associated with elements.\n\nIf it used within a shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides. Refer to this article for more detail explanation.\n\n\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, an ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\nNotice that two steps are involved. First, an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page.\n\n\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\nThe first three lines of codes in the code chunk create a new field called tooltip. At the same time, it populates text in ID and CLASS fields into the newly created field. Next, this newly created field is used as tooltip field as shown in the code of line 7.\n\n\n\n\nBy hovering the mouse pointer on an data point of interest, the student’s ID and Class will be displayed.\n\n\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\nNotice that the background colour of the tooltip is black and the font colour is white and bold.\n\nRefer to Customizing girafe objects to learn more about how to customise ggiraph objects.\n\n\n\n\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\nCode chunk below shows the second interactive feature of ggiraph, namely data_id.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNote that the default value of the hover css is hover_css = “fill:orange;”.\n\n\n\nIn the code chunk below, css codes are used to change the highlighting effect.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNote: Different from previous example, in this example the ccs customisation request are encoded directly.\n\n\n\nThere are time that we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS.\n\n\n\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\nInteractivity: Web document link with a data object will be displayed on the web browser upon mouse click.\nNote that click actions must be a string column in the dataset containing valid javascript instructions.\n\n\n\nCoordinated multiple views methods has been implemented in the data visualisation below.\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point.\n\n\n\n\nPlotly’s R graphing library create interactive web graphics from ggplot2 graphs and/or a custom interface to the (MIT-licensed) JavaScript library plotly.js inspired by the grammar of graphics. Different from other plotly platform, plot.R is free and open source.\n\nThere are two ways to create interactive graph by using plotly, they are:\n\nby using plot_ly(), and\nby using ggplotly()\n\n\n\nThe tabset below shows an example a basic interactive plot created by using plot_ly().\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\nThing to learn from the code chunk:\n\nhighlight_key() simply creates an object of class crosstalk::SharedData.\nVisit this link to learn more about crosstalk,\n\n\n\n\n\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\n\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk:\n\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#learning-outcome",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#learning-outcome",
    "title": "Hands On Exercise 3a",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to create interactive data visualisation by using functions provided by ggiraph and plotlyr packages"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#getting-started",
    "title": "Hands On Exercise 3a",
    "section": "",
    "text": "First, write a code chunk to check, install and launch the following R packages:\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\nThe code chunk below will be used to accomplish the task.\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#importing-data",
    "title": "Hands On Exercise 3a",
    "section": "",
    "text": "In this section, Exam_data.csv provided will be used. Using read_csv() of readr package, import Exam_data.csv into R.\nThe code chunk below read_csv() of readr package is used to import Exam_data.csv data file into R and save it as an tibble data frame called exam_data.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-visualisation---ggiraph-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-visualisation---ggiraph-methods",
    "title": "Hands On Exercise 3a",
    "section": "",
    "text": "ggiraph  is an htmlwidget and a ggplot2 extension. It allows ggplot graphics to be interactive.\nInteractive is made with ggplot geometries that can understand three arguments:\n\nTooltip: a column of data-sets that contain tooltips to be displayed when the mouse is over elements.\nOnclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked.\nData_id: a column of data-sets that contain an id to be associated with elements.\n\nIf it used within a shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides. Refer to this article for more detail explanation.\n\n\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, an ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\nNotice that two steps are involved. First, an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactivity",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactivity",
    "title": "Hands On Exercise 3a",
    "section": "",
    "text": "By hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\nThe first three lines of codes in the code chunk create a new field called tooltip. At the same time, it populates text in ID and CLASS fields into the newly created field. Next, this newly created field is used as tooltip field as shown in the code of line 7."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactivity-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactivity-1",
    "title": "Hands On Exercise 3a",
    "section": "",
    "text": "By hovering the mouse pointer on an data point of interest, the student’s ID and Class will be displayed.\n\n\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\nNotice that the background colour of the tooltip is black and the font colour is white and bold.\n\nRefer to Customizing girafe objects to learn more about how to customise ggiraph objects.\n\n\n\n\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\nCode chunk below shows the second interactive feature of ggiraph, namely data_id.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNote that the default value of the hover css is hover_css = “fill:orange;”.\n\n\n\nIn the code chunk below, css codes are used to change the highlighting effect.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNote: Different from previous example, in this example the ccs customisation request are encoded directly.\n\n\n\nThere are time that we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS.\n\n\n\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\nInteractivity: Web document link with a data object will be displayed on the web browser upon mouse click.\nNote that click actions must be a string column in the dataset containing valid javascript instructions.\n\n\n\nCoordinated multiple views methods has been implemented in the data visualisation below.\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-visualisation---plotly-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-visualisation---plotly-methods",
    "title": "Hands On Exercise 3a",
    "section": "",
    "text": "Plotly’s R graphing library create interactive web graphics from ggplot2 graphs and/or a custom interface to the (MIT-licensed) JavaScript library plotly.js inspired by the grammar of graphics. Different from other plotly platform, plot.R is free and open source.\n\nThere are two ways to create interactive graph by using plotly, they are:\n\nby using plot_ly(), and\nby using ggplotly()\n\n\n\nThe tabset below shows an example a basic interactive plot created by using plot_ly().\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\nThing to learn from the code chunk:\n\nhighlight_key() simply creates an object of class crosstalk::SharedData.\nVisit this link to learn more about crosstalk,"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands On Exercise 3a",
    "section": "",
    "text": "Crosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\n\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk:\n\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands On Exercise 1",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n#import data (rmb to set working directory to common file) # rmb to activate readr package on right bottom panel\n\nlibrary(ggplot2) \nlibrary(readr) \nlibrary(tidyverse)  \nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n#plotting with BaseR for simple histogram\n\nhist(exam_data$MATHS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#quarto",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#quarto",
    "title": "Hands On Exercise 1",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n#import data (rmb to set working directory to common file) # rmb to activate readr package on right bottom panel\n\nlibrary(ggplot2) \nlibrary(readr) \nlibrary(tidyverse)  \nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n#plotting with BaseR for simple histogram\n\nhist(exam_data$MATHS)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands On Exercise 2",
    "section": "",
    "text": "In this chapter, you will be introduced to several ggplot2 extensions for creating more elegant and effective statistical graphics. By the end of this exercise, you will be able to:\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package,\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,\nplot composite figure by combining ggplot2 graphs by using patchwork package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#objectives",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#objectives",
    "title": "Hands On Exercise 2",
    "section": "",
    "text": "In this chapter, you will be introduced to several ggplot2 extensions for creating more elegant and effective statistical graphics. By the end of this exercise, you will be able to:\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package,\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,\nplot composite figure by combining ggplot2 graphs by using patchwork package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#getting-started",
    "title": "Hands On Exercise 2",
    "section": "2.2 Getting Started",
    "text": "2.2 Getting Started\n\n2.2.1 Installing and loading required libraries\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping t ext labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, readr) \n\n\n\n2.2.2 Importing data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "title": "Hands On Exercise 2",
    "section": "2.3 Beyond ggplot2 Annotation: ggrepel",
    "text": "2.3 Beyond ggplot2 Annotation: ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n2.3.1. Working with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot-2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot-2-themes",
    "title": "Hands On Exercise 2",
    "section": "2.4 Beyond ggplot 2 Themes",
    "text": "2.4 Beyond ggplot 2 Themes\nggplot2 comes with eight built-in themes, they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n\n\n2.4.1 Working with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\n\n\n2.4.2 Working with hrbthems package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "title": "Hands On Exercise 2",
    "section": "2.5 Beyond Single Graph",
    "text": "2.5 Beyond Single Graph\nIt is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions provide functions to compose figure with multiple graphs. In this section, you will learn how to create composite plot by combining multiple graphs. First, let us create three statistical graphics by using the code chunk below.\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np1\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np2\n\n\n\n\n\n\n\n\nScatterplot for English Score vs Math Score:\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\np3\n\n\n\n\n\n\n\n\n\n2.5.1 Creating Composite Graphics: pathwork methods\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /\n\n\n\n2.5.2 Combining two ggplot2 graphs\nFigure in the tabset below shows a composite of two histograms created using patchwork. Note how simple the syntax used to create the plot!\n\np1 + p2\n\n\n\n\n\n\n\n\n\n\n2.5.3 Combining three ggplot2 graphs\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n“/” operator to stack two ggplot2 graphs,\n“|” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\n\n\n2.5.4 Creating a composite figure with tag\nIn order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\n\n\n\n2.5.5 Creating figure with insert\nBeside providing functions to place plots next to each other based on the provided layout. With inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\n\n\n\n2.5.6 Creating a composite figure by using patchwork and ggtheme\nFigure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html",
    "title": "Hands On Exercise 3",
    "section": "",
    "text": "#Objectives - Create animated data visualisation by using gganimate and plotly r packages - Reshape data by using tidyr package - Process, wrangle and transform data by using dplyr package"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#installing-and-loading-the-required-libraries",
    "title": "Hands On Exercise 3",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nThe following R packages will be used:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#importing-the-data",
    "title": "Hands On Exercise 3",
    "section": "Importing the Data",
    "text": "Importing the Data\n\nThe code chunk below imports GlobalPopulation.xlsx into R environment by using read_xls() function of readr package.\nreadr is a pacakge within tidyverse.\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-a-static-population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-a-static-population-bubble-plot",
    "title": "Hands On Exercise 3",
    "section": "Building a static population bubble plot",
    "text": "Building a static population bubble plot\nIn the code chunk below, the basic ggplot2 functions are used to create a static bubble plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-the-animated-bubble-plot",
    "title": "Hands On Exercise 3",
    "section": "Building the animated bubble plot",
    "text": "Building the animated bubble plot\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics.\n\nThe default is linear.\nOther methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands On Exercise 3",
    "section": "Building an animated bubble plot: ggplotly() method",
    "text": "Building an animated bubble plot: ggplotly() method\nCreate an animated bubble plot by using ggplotly() method.\n\nAppropriate ggplot2 functions are used to create a static bubble plot. The output is then saved as an R object called gg.\nggplotly() is then used to convert the R graphic object into an animated svg object.\n\nAlthough show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands On Exercise 3",
    "section": "Building an animated bubble plot: plot_ly() method",
    "text": "Building an animated bubble plot: plot_ly() method\nCreate an animated bubble plot by using plot_ly() method.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html",
    "title": "Hands On Exercise 4b",
    "section": "",
    "text": "Visualising uncertainty is relatively new in statistical graphics. In this chapter, you will gain hands-on experience on creating statistical graphics for visualising uncertainty. By the end of this chapter you will be able:\n\nto plot statistics error bars by using ggplot2,\nto plot interactive error bars by combining ggplot2, plotly and DT,\nto create advanced by using ggdist, and\nto create hypothetical outcome plots (HOPs) by using ungeviz package.\n\n\n\n\n\n\nFor the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data science process,\nplotly for creating interactive plot,\ngganimate for creating animation plot,\nDT for displaying interactive html table,\ncrosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering), and\nggdist for visualising distribution and uncertainty.\n\n\n#devtools::install_github(\"wilkelab/ungeviz\")\n\n\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)\n\n\n\n\nFor the purpose of this exercise, Exam_data.csv will be used.\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nA point estimate is a single number, such as a mean. Uncertainty, on the other hand, is expressed as standard error, confidence interval, or credible interval.\n\n\n\n\n\n\nImportant\n\n\n\n\nDon’t confuse the uncertainty of a point estimate with the variation in the sample\n\n\n\nIn this section, you will learn how to plot error bars of maths scores by race by using data provided in exam tibble data frame.\nFirstly, code chunk below will be used to derive the necessary summary statistics.\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\ngroup_by() of dplyr package is used to group the observation by RACE,\nsummarise() is used to compute the count of observations, mean, standard deviation\nmutate() is used to derive standard error of Maths by RACE, and\nthe output is save as a tibble data table called my_sum.\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nFor the mathematical explanation, please refer to Slide 20 of Lesson 4.\n\n\nNext, the code chunk below will be used to display my_sum tibble data frame in an html table format.\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\n\n\nNow we are ready to plot the standard error bars of mean maths score by race as shown below.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nThe error bars are computed by using the formula mean+/-se.\nFor geom_point(), it is important to indicate stat=“identity”.\n\n\n\n\n\n\nInstead of plotting the standard error bar of point estimates, we can also plot the confidence intervals of mean maths score by race.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nThe confidence intervals are computed by using the formula mean+/-1.96*se.\nThe error bars is sorted by using the average maths scores.\nlabs() argument of ggplot2 is used to change the x-axis label.\n\n\n\n\n\n\nIn this section, you will learn how to plot interactive error bars for the 99% confidence interval of mean maths score by race as shown in the figure below.\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggdist is an R package that provides a flexible set of ggplot2 geoms and stats designed especially for visualising distributions and uncertainty.\nIt is designed for both frequentist and Bayesian uncertainty visualization, taking the view that uncertainty visualization can be unified through the perspective of distribution visualization:\n\nfor frequentist models, one visualises confidence distributions or bootstrap distributions (see vignette(“freq-uncertainty-vis”));\nfor Bayesian models, one visualises probability distributions (see the tidybayes package, which builds on top of ggdist).\n\n\n\n\n\nIn the code chunk below, stat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis function comes with many arguments, students are advised to read the syntax reference for more detail.\n\n\nFor example, in the code chunk below the following arguments are used:\n\n.width = 0.95\n.point = median\n.interval = qi\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\n## Makeover plot on previous slide by showing 95% and 99% confidence intervals.\n## To test if this works\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.99,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\nGentle advice: This function comes with many arguments, students are advised to read the syntax reference for more detail.\n\n\n\nIn the code chunk below, stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\n\n\n\n\n\n\n\nGentle advice: This function comes with many arguments, students are advised to read the syntax reference for more detail.\n\n\n\n\nStep 1: Installing ungeviz package (Note: You only need to perform this step once)\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\nStep 2: Launch the application in R\n\nlibrary(ungeviz)\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#learning-outcome",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#learning-outcome",
    "title": "Hands On Exercise 4b",
    "section": "",
    "text": "Visualising uncertainty is relatively new in statistical graphics. In this chapter, you will gain hands-on experience on creating statistical graphics for visualising uncertainty. By the end of this chapter you will be able:\n\nto plot statistics error bars by using ggplot2,\nto plot interactive error bars by combining ggplot2, plotly and DT,\nto create advanced by using ggdist, and\nto create hypothetical outcome plots (HOPs) by using ungeviz package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#getting-started",
    "title": "Hands On Exercise 4b",
    "section": "",
    "text": "For the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data science process,\nplotly for creating interactive plot,\ngganimate for creating animation plot,\nDT for displaying interactive html table,\ncrosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering), and\nggdist for visualising distribution and uncertainty.\n\n\n#devtools::install_github(\"wilkelab/ungeviz\")\n\n\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)\n\n\n\n\nFor the purpose of this exercise, Exam_data.csv will be used.\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "title": "Hands On Exercise 4b",
    "section": "",
    "text": "A point estimate is a single number, such as a mean. Uncertainty, on the other hand, is expressed as standard error, confidence interval, or credible interval.\n\n\n\n\n\n\nImportant\n\n\n\n\nDon’t confuse the uncertainty of a point estimate with the variation in the sample\n\n\n\nIn this section, you will learn how to plot error bars of maths scores by race by using data provided in exam tibble data frame.\nFirstly, code chunk below will be used to derive the necessary summary statistics.\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\ngroup_by() of dplyr package is used to group the observation by RACE,\nsummarise() is used to compute the count of observations, mean, standard deviation\nmutate() is used to derive standard error of Maths by RACE, and\nthe output is save as a tibble data table called my_sum.\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nFor the mathematical explanation, please refer to Slide 20 of Lesson 4.\n\n\nNext, the code chunk below will be used to display my_sum tibble data frame in an html table format.\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\n\n\nNow we are ready to plot the standard error bars of mean maths score by race as shown below.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nThe error bars are computed by using the formula mean+/-se.\nFor geom_point(), it is important to indicate stat=“identity”.\n\n\n\n\n\n\nInstead of plotting the standard error bar of point estimates, we can also plot the confidence intervals of mean maths score by race.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nThe confidence intervals are computed by using the formula mean+/-1.96*se.\nThe error bars is sorted by using the average maths scores.\nlabs() argument of ggplot2 is used to change the x-axis label.\n\n\n\n\n\n\nIn this section, you will learn how to plot interactive error bars for the 99% confidence interval of mean maths score by race as shown in the figure below.\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#visualising-uncertainty-ggdist-package",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#visualising-uncertainty-ggdist-package",
    "title": "Hands On Exercise 4b",
    "section": "",
    "text": "ggdist is an R package that provides a flexible set of ggplot2 geoms and stats designed especially for visualising distributions and uncertainty.\nIt is designed for both frequentist and Bayesian uncertainty visualization, taking the view that uncertainty visualization can be unified through the perspective of distribution visualization:\n\nfor frequentist models, one visualises confidence distributions or bootstrap distributions (see vignette(“freq-uncertainty-vis”));\nfor Bayesian models, one visualises probability distributions (see the tidybayes package, which builds on top of ggdist).\n\n\n\n\n\nIn the code chunk below, stat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis function comes with many arguments, students are advised to read the syntax reference for more detail.\n\n\nFor example, in the code chunk below the following arguments are used:\n\n.width = 0.95\n.point = median\n.interval = qi\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\n## Makeover plot on previous slide by showing 95% and 99% confidence intervals.\n## To test if this works\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.99,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\nGentle advice: This function comes with many arguments, students are advised to read the syntax reference for more detail.\n\n\n\nIn the code chunk below, stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\n\n\n\n\n\n\n\nGentle advice: This function comes with many arguments, students are advised to read the syntax reference for more detail."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "title": "Hands On Exercise 4b",
    "section": "",
    "text": "Step 1: Installing ungeviz package (Note: You only need to perform this step once)\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\nStep 2: Launch the application in R\n\nlibrary(ungeviz)\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "title": "Hands On Exercise 4b",
    "section": "",
    "text": "ggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands On Exercise 5",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to visualise and analyse text data using R.\nBy the end of this hands-on exercise, you will be able to:\n\nunderstand tidytext framework for processing, analysing and visualising text data,\nwrite function for importing multiple files into R,\ncombine multiple files into a single data frame,\nclean and wrangle text data by using tidyverse approach,\nvisualise words with Word Cloud,\ncompute term frequency–inverse document frequency (TF-IDF) using tidytext method, and\nvisualising texts and terms relationship.\n\n\n\n\n\n\nIn this hands-on exercise, the following R packages for handling, processing, wrangling, analysing and visualising text data will be used:\n\ntidytext, tidyverse (mainly readr, purrr, stringr, ggplot2)\nwidyr,\nwordcloud and ggwordcloud,\ntextplot (required igraph, tidygraph and ggraph, )\nDT,\nlubridate and hms.\n\nThe code chunk:\n\npacman::p_load(tidytext, widyr, wordcloud, DT, ggwordcloud, textplot, lubridate, hms,\ntidyverse, tidygraph, ggraph, igraph)\n\n\n\n\n\n\n\n\nnews20 &lt;- \"data/20news/\"\n\n\n\n\n\nread_folder &lt;- function(infolder) {\n  tibble(file = dir(infolder, \n                    full.names = TRUE)) %&gt;%\n    mutate(text = map(file, \n                      read_lines)) %&gt;%\n    transmute(id = basename(file), \n              text) %&gt;%\n    unnest(text)\n}\n\n\n\n\n\n\n\n\nraw_text &lt;- tibble(folder = \n                     dir(news20, \n                         full.names = TRUE)) %&gt;%\n  mutate(folder_out = map(folder, \n                          read_folder)) %&gt;%\n  unnest(cols = c(folder_out)) %&gt;%\n  transmute(newsgroup = basename(folder), \n            id, text)\n\nwrite_rds(raw_text, \"data/rds/news20.rds\")\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\n\nread_lines() of readr package is used to read up to n_max lines from a file.\nmap() of purrr package is used to transform their input by applying a function to each element of a list and returning an object of the same length as the input.\nunnest() of dplyr package is used to flatten a list-column of data frames back out into regular columns.\nmutate() of dplyr is used to add new variables and preserves existing ones;\ntransmute() of dplyr is used to add new variables and drops existing ones.\nread_rds() is used to save the extracted and combined data frame as rds file for future use.\n\n\n\n\n\n\n\nFigure below shows the frequency of messages by newsgroup.\n\nnews20 &lt;- read_rds(\"data/rds/news20.rds\")\n\nraw_text &lt;- news20\n\nraw_text %&gt;%\n  group_by(newsgroup) %&gt;%\n  summarize(messages = n_distinct(id)) %&gt;%\n  ggplot(aes(messages, newsgroup)) +\n  geom_col(fill = \"lightblue\") +\n  labs(y = NULL)\n\n\n\n\n\n\n\n\n\n\n\n\nUsing tidy data principles in processing, analysing and visualising text data.\nMuch of the infrastructure needed for text mining with tidy data frames already exists in packages like ‘dplyr’, ‘broom’, ‘tidyr’, and ‘ggplot2’.\n\nFigure below shows the workflow using tidytext approach for processing and visualising text data.\n\n\n\nNotice that each message has some structure and extra text that we don’t want to include in our analysis. For example, every message has a header, containing field such as “from:” or “in_reply_to:” that describe the message. Some also have automated email signatures, which occur after a line like “–”.\n\ncleaned_text &lt;- raw_text %&gt;%\n  group_by(newsgroup, id) %&gt;%\n  filter(cumsum(text == \"\") &gt; 0,\n         cumsum(str_detect(\n           text, \"^--\")) == 0) %&gt;%\n  ungroup()\n\n\n\n\n\n\n\nThings to learn from the code chunk:\n\n\n\n\ncumsum() of base R is used to return a vector whose elements are the cumulative sums of the elements of the argument.\nstr_detect() from stringr is used to detect the presence or absence of a pattern in a string.\n\n\n\n\n\n\nIn this code chunk below, regular expressions are used to remove with nested text representing quotes from other users.\n\ncleaned_text &lt;- cleaned_text %&gt;%\n  filter(str_detect(text, \"^[^&gt;]+[A-Za-z\\\\d]\")\n         | text == \"\",\n         !str_detect(text, \n                     \"writes(:|\\\\.\\\\.\\\\.)$\"),\n         !str_detect(text, \n                     \"^In article &lt;\")\n  )\n\n\n\n\n\n\n\nThings to learn from the code chunk:\n\n\n\n\nstr_detect() from stringr is used to detect the presence or absence of a pattern in a string.\nfilter() of dplyr package is used to subset a data frame, retaining all rows that satisfy the specified conditions.\n\n\n\n\n\n\nIn this code chunk below, unnest_tokens() of tidytext package is used to split the dataset into tokens, while stop_words() is used to remove stop-words.\n\nusenet_words &lt;- cleaned_text %&gt;%\n  unnest_tokens(word, text) %&gt;%\n  filter(str_detect(word, \"[a-z']$\"),\n         !word %in% stop_words$word)\n\nNow that we’ve removed the headers, signatures, and formatting, we can start exploring common words. For starters, we could find the most common words in the entire dataset, or within particular newsgroups\n\nusenet_words %&gt;%\n  count(word, sort = TRUE)\n\n# A tibble: 5,542 × 2\n   word           n\n   &lt;chr&gt;      &lt;int&gt;\n 1 people        57\n 2 time          50\n 3 jesus         47\n 4 god           44\n 5 message       40\n 6 br            27\n 7 bible         23\n 8 drive         23\n 9 homosexual    23\n10 read          22\n# ℹ 5,532 more rows\n\n\nInstead of counting individual word, you can also count words within by newsgroup by using the code chunk below.\n\nwords_by_newsgroup &lt;- usenet_words %&gt;%\n  count(newsgroup, word, sort = TRUE) %&gt;%\n  ungroup()\n\n\n\n\nIn this code chunk below, wordcloud() of wordcloud package is used to plot a static wordcloud.\n\nwordcloud(words_by_newsgroup$word,\n          words_by_newsgroup$n,\n          max.words = 300)\n\n\n\n\n\n\n\n\nA DT table can be used to complement the visual discovery.\n\n# code for data table interactive\nfreq_table &lt;- data.frame(Word = words_by_newsgroup$word,\n                              Frequency = words_by_newsgroup$n)\n\n\ndatatable(freq_table, \n          options = list(pageLength = 10))\n\n\n\n\n\n\n\n\nThe wordcloud below is plotted by using ggwordcloud package.\n\nset.seed(1234)\n\nwords_by_newsgroup %&gt;%\n  filter(n &gt; 0) %&gt;%\nggplot(aes(label = word,\n           size = n)) +\n  geom_text_wordcloud() +\n  theme_minimal() +\n  facet_wrap(~newsgroup)\n\n\n\n\n\n\n\n\n\n\n\n\n\ntf–idf, short for term frequency–inverse document frequency, is a numerical statistic that is intended to reflect how important a word is to a document in a collection of corpus.\n\n\n\n\nThe code chunk below uses bind_tf_idf() of tidytext to compute and bind the term frequency, inverse document frequency and ti-idf of a tidy text dataset to the dataset.\n\ntf_idf &lt;- words_by_newsgroup %&gt;%\n  bind_tf_idf(word, newsgroup, n) %&gt;%\n  arrange(desc(tf_idf))\n\n\n\n\nTable below is an interactive table created by using datatable().\n\n# code for interactive data table\n\nDT::datatable(tf_idf, filter = 'top') %&gt;% \n  formatRound(columns = c('tf', 'idf', \n                          'tf_idf'), \n              digits = 3) %&gt;%\n  formatStyle(0, \n              target = 'row', \n              lineHeight='25%')\n\n\n\n\n\n\n\n\nThe code chunk below uses datatable() of DT package to create a html table that allows pagination of rows and columns.\n\nDT::datatable(tf_idf, filter = 'top') %&gt;% \n  formatRound(columns = c('tf', 'idf', \n                          'tf_idf'), \n              digits = 3) %&gt;%\n  formatStyle(0, \n              target = 'row', \n              lineHeight='25%')\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk:\n\n\n\n\nfilter() argument is used to turn control the filter UI.\nformatRound() is used to customise the values format. The argument digits define the number of decimal places.\nformatStyle() is used to customise the output table. In this example, the arguments target and lineHeight are used to reduce the line height by 25%.\n\n\n\nTo learn more about customising DT’s table, visit this link.\n\n\n\nFacet bar charts technique is used to visualise the tf-idf values of science related newsgroup.\nThe code chunk used to prepare the plot.\n\ntf_idf %&gt;%\n  filter(str_detect(newsgroup, \"^sci\\\\.\")) %&gt;%\n  group_by(newsgroup) %&gt;%\n  slice_max(tf_idf, \n            n = 12) %&gt;%\n  ungroup() %&gt;%\n  mutate(word = reorder(word, \n                        tf_idf)) %&gt;%\n  ggplot(aes(tf_idf, \n             word, \n             fill = newsgroup)) +\n  geom_col(show.legend = FALSE) +\n  facet_wrap(~ newsgroup, \n             scales = \"free\") +\n  labs(x = \"tf-idf\", \n       y = NULL)\n\n\n\n\n\n\n\n\n\n\n\n\nTo count the number of times that two words appear within the same document, or to see how correlated they are.\nMost operations for finding pairwise counts or correlations need to turn the data into a wide matrix first.\nwidyr package first ‘casts’ a tidy dataset into a wide matrix, performs an operation such as a correlation on it, then re-tidies the result.\n\n\nIn this code chunk below, pairwise_cor() of widyr package is used to compute the correlation between newsgroup based on the common words found.\n\nnewsgroup_cors &lt;- words_by_newsgroup %&gt;%\n  pairwise_cor(newsgroup, \n               word, \n               n, \n               sort = TRUE)\n\n\n\n\nNow, we can visualise the relationship between newgroups in network graph as shown below.\nThe code chunk:\n\nset.seed(2017)\n\nnewsgroup_cors %&gt;%\n  filter(correlation &gt; .025) %&gt;%\n  graph_from_data_frame() %&gt;%\n  ggraph(layout = \"fr\") +\n  geom_edge_link(aes(alpha = correlation, \n                     width = correlation)) +\n  geom_node_point(size = 6, \n                  color = \"lightblue\") +\n  geom_node_text(aes(label = name),\n                 color = \"red\",\n                 repel = TRUE) +\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n\nIn this code chunk below, a bigram data frame is created by using unnest_tokens() of tidytext.\n\nbigrams &lt;- cleaned_text %&gt;%\n  unnest_tokens(bigram, \n                text, \n                token = \"ngrams\", \n                n = 2)\n\nbigrams\n\n# A tibble: 28,827 × 3\n   newsgroup   id    bigram    \n   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;     \n 1 alt.atheism 54256 &lt;NA&gt;      \n 2 alt.atheism 54256 &lt;NA&gt;      \n 3 alt.atheism 54256 as i      \n 4 alt.atheism 54256 i don't   \n 5 alt.atheism 54256 don't know\n 6 alt.atheism 54256 know this \n 7 alt.atheism 54256 this book \n 8 alt.atheism 54256 book i    \n 9 alt.atheism 54256 i will    \n10 alt.atheism 54256 will use  \n# ℹ 28,817 more rows\n\n\n\n\n\nThe code chunk is used to count and sort the bigram data frame ascendingly.\n\nbigrams_count &lt;- bigrams %&gt;%\n  filter(bigram != 'NA') %&gt;%\n  count(bigram, sort = TRUE)\n\nbigrams_count\n\n# A tibble: 19,888 × 2\n   bigram       n\n   &lt;chr&gt;    &lt;int&gt;\n 1 of the     169\n 2 in the     113\n 3 to the      74\n 4 to be       59\n 5 for the     52\n 6 i have      48\n 7 that the    47\n 8 if you      40\n 9 on the      39\n10 it is       38\n# ℹ 19,878 more rows\n\n\n\n\n\nThe code chunk below is used to seperate the bigram into two words.\n\nbigrams_separated &lt;- bigrams %&gt;%\n  filter(bigram != 'NA') %&gt;%\n  separate(bigram, c(\"word1\", \"word2\"), \n           sep = \" \")\n\nbigrams_filtered &lt;- bigrams_separated %&gt;%\n  filter(!word1 %in% stop_words$word) %&gt;%\n  filter(!word2 %in% stop_words$word)\n\nbigrams_filtered\n\n# A tibble: 4,607 × 4\n   newsgroup   id    word1        word2        \n   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;        &lt;chr&gt;        \n 1 alt.atheism 54256 defines      god          \n 2 alt.atheism 54256 term         preclues     \n 3 alt.atheism 54256 science      ideas        \n 4 alt.atheism 54256 ideas        drawn        \n 5 alt.atheism 54256 supernatural precludes    \n 6 alt.atheism 54256 scientific   assertions   \n 7 alt.atheism 54256 religious    dogma        \n 8 alt.atheism 54256 religion     involves     \n 9 alt.atheism 54256 involves     circumventing\n10 alt.atheism 54256 gain         absolute     \n# ℹ 4,597 more rows\n\n\n\n\n\n\nbigram_counts &lt;- bigrams_filtered %&gt;% \n  count(word1, word2, sort = TRUE)\n\n\n\n\nIn the code chunk below, a network graph is created by using graph_from_data_frame() of igraph package.\n\nbigram_graph &lt;- bigram_counts %&gt;%\n  filter(n &gt; 3) %&gt;%\n  graph_from_data_frame()\nbigram_graph\n\nIGRAPH 55de3b9 DN-- 40 24 -- \n+ attr: name (v/c), n (e/n)\n+ edges from 55de3b9 (vertex names):\n [1] 1          -&gt;2           1          -&gt;3           static     -&gt;void       \n [4] time       -&gt;pad         1          -&gt;4           infield    -&gt;fly        \n [7] mat        -&gt;28          vv         -&gt;vv          1          -&gt;5          \n[10] cock       -&gt;crow        noticeshell-&gt;widget      27         -&gt;1993       \n[13] 3          -&gt;4           child      -&gt;molestation cock       -&gt;crew       \n[16] gun        -&gt;violence    heat       -&gt;sink        homosexual -&gt;male       \n[19] homosexual -&gt;women       include    -&gt;xol         mary       -&gt;magdalene  \n[22] read       -&gt;write       rev        -&gt;20          tt         -&gt;ee         \n\n\n\n\n\nIn this code chunk below, ggraph package is used to plot the bigram.\nThe code chunk used to plot the network graph:\n\nset.seed(1234)\n\nggraph(bigram_graph, layout = \"fr\") +\n  geom_edge_link() +\n  geom_node_point() +\n  geom_node_text(aes(label = name), \n                 vjust = 1, \n                 hjust = 1)\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk used to plot the network graph.\n\nset.seed(1234)\n\na &lt;- grid::arrow(type = \"closed\", \n                 length = unit(.15,\n                               \"inches\"))\n\nggraph(bigram_graph, \n       layout = \"fr\") +\n  geom_edge_link(aes(edge_alpha = n), \n                 show.legend = FALSE,\n                 arrow = a, \n                 end_cap = circle(.07,\n                                  'inches')) +\n  geom_node_point(color = \"lightblue\", \n                  size = 5) +\n  geom_node_text(aes(label = name), \n                 vjust = 1, \n                 hjust = 1) +\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReference guide\n\nwidyr: Widen, process, and re-tidy a dataset\nUnited Nations Voting Correlations"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#learning-outcome",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#learning-outcome",
    "title": "Hands On Exercise 5",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to visualise and analyse text data using R.\nBy the end of this hands-on exercise, you will be able to:\n\nunderstand tidytext framework for processing, analysing and visualising text data,\nwrite function for importing multiple files into R,\ncombine multiple files into a single data frame,\nclean and wrangle text data by using tidyverse approach,\nvisualise words with Word Cloud,\ncompute term frequency–inverse document frequency (TF-IDF) using tidytext method, and\nvisualising texts and terms relationship."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#getting-started",
    "title": "Hands On Exercise 5",
    "section": "",
    "text": "In this hands-on exercise, the following R packages for handling, processing, wrangling, analysing and visualising text data will be used:\n\ntidytext, tidyverse (mainly readr, purrr, stringr, ggplot2)\nwidyr,\nwordcloud and ggwordcloud,\ntextplot (required igraph, tidygraph and ggraph, )\nDT,\nlubridate and hms.\n\nThe code chunk:\n\npacman::p_load(tidytext, widyr, wordcloud, DT, ggwordcloud, textplot, lubridate, hms,\ntidyverse, tidygraph, ggraph, igraph)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#importing-multiple-text-files-from-multiple-folders",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#importing-multiple-text-files-from-multiple-folders",
    "title": "Hands On Exercise 5",
    "section": "",
    "text": "news20 &lt;- \"data/20news/\"\n\n\n\n\n\nread_folder &lt;- function(infolder) {\n  tibble(file = dir(infolder, \n                    full.names = TRUE)) %&gt;%\n    mutate(text = map(file, \n                      read_lines)) %&gt;%\n    transmute(id = basename(file), \n              text) %&gt;%\n    unnest(text)\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#importing-multiple-text-files-from-multiple-folders-1",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#importing-multiple-text-files-from-multiple-folders-1",
    "title": "Hands On Exercise 5",
    "section": "",
    "text": "raw_text &lt;- tibble(folder = \n                     dir(news20, \n                         full.names = TRUE)) %&gt;%\n  mutate(folder_out = map(folder, \n                          read_folder)) %&gt;%\n  unnest(cols = c(folder_out)) %&gt;%\n  transmute(newsgroup = basename(folder), \n            id, text)\n\nwrite_rds(raw_text, \"data/rds/news20.rds\")\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\n\nread_lines() of readr package is used to read up to n_max lines from a file.\nmap() of purrr package is used to transform their input by applying a function to each element of a list and returning an object of the same length as the input.\nunnest() of dplyr package is used to flatten a list-column of data frames back out into regular columns.\nmutate() of dplyr is used to add new variables and preserves existing ones;\ntransmute() of dplyr is used to add new variables and drops existing ones.\nread_rds() is used to save the extracted and combined data frame as rds file for future use."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#initial-eda",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#initial-eda",
    "title": "Hands On Exercise 5",
    "section": "",
    "text": "Figure below shows the frequency of messages by newsgroup.\n\nnews20 &lt;- read_rds(\"data/rds/news20.rds\")\n\nraw_text &lt;- news20\n\nraw_text %&gt;%\n  group_by(newsgroup) %&gt;%\n  summarize(messages = n_distinct(id)) %&gt;%\n  ggplot(aes(messages, newsgroup)) +\n  geom_col(fill = \"lightblue\") +\n  labs(y = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#introducing-tidytext",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#introducing-tidytext",
    "title": "Hands On Exercise 5",
    "section": "",
    "text": "Using tidy data principles in processing, analysing and visualising text data.\nMuch of the infrastructure needed for text mining with tidy data frames already exists in packages like ‘dplyr’, ‘broom’, ‘tidyr’, and ‘ggplot2’.\n\nFigure below shows the workflow using tidytext approach for processing and visualising text data.\n\n\n\nNotice that each message has some structure and extra text that we don’t want to include in our analysis. For example, every message has a header, containing field such as “from:” or “in_reply_to:” that describe the message. Some also have automated email signatures, which occur after a line like “–”.\n\ncleaned_text &lt;- raw_text %&gt;%\n  group_by(newsgroup, id) %&gt;%\n  filter(cumsum(text == \"\") &gt; 0,\n         cumsum(str_detect(\n           text, \"^--\")) == 0) %&gt;%\n  ungroup()\n\n\n\n\n\n\n\nThings to learn from the code chunk:\n\n\n\n\ncumsum() of base R is used to return a vector whose elements are the cumulative sums of the elements of the argument.\nstr_detect() from stringr is used to detect the presence or absence of a pattern in a string.\n\n\n\n\n\n\nIn this code chunk below, regular expressions are used to remove with nested text representing quotes from other users.\n\ncleaned_text &lt;- cleaned_text %&gt;%\n  filter(str_detect(text, \"^[^&gt;]+[A-Za-z\\\\d]\")\n         | text == \"\",\n         !str_detect(text, \n                     \"writes(:|\\\\.\\\\.\\\\.)$\"),\n         !str_detect(text, \n                     \"^In article &lt;\")\n  )\n\n\n\n\n\n\n\nThings to learn from the code chunk:\n\n\n\n\nstr_detect() from stringr is used to detect the presence or absence of a pattern in a string.\nfilter() of dplyr package is used to subset a data frame, retaining all rows that satisfy the specified conditions.\n\n\n\n\n\n\nIn this code chunk below, unnest_tokens() of tidytext package is used to split the dataset into tokens, while stop_words() is used to remove stop-words.\n\nusenet_words &lt;- cleaned_text %&gt;%\n  unnest_tokens(word, text) %&gt;%\n  filter(str_detect(word, \"[a-z']$\"),\n         !word %in% stop_words$word)\n\nNow that we’ve removed the headers, signatures, and formatting, we can start exploring common words. For starters, we could find the most common words in the entire dataset, or within particular newsgroups\n\nusenet_words %&gt;%\n  count(word, sort = TRUE)\n\n# A tibble: 5,542 × 2\n   word           n\n   &lt;chr&gt;      &lt;int&gt;\n 1 people        57\n 2 time          50\n 3 jesus         47\n 4 god           44\n 5 message       40\n 6 br            27\n 7 bible         23\n 8 drive         23\n 9 homosexual    23\n10 read          22\n# ℹ 5,532 more rows\n\n\nInstead of counting individual word, you can also count words within by newsgroup by using the code chunk below.\n\nwords_by_newsgroup &lt;- usenet_words %&gt;%\n  count(newsgroup, word, sort = TRUE) %&gt;%\n  ungroup()\n\n\n\n\nIn this code chunk below, wordcloud() of wordcloud package is used to plot a static wordcloud.\n\nwordcloud(words_by_newsgroup$word,\n          words_by_newsgroup$n,\n          max.words = 300)\n\n\n\n\n\n\n\n\nA DT table can be used to complement the visual discovery.\n\n# code for data table interactive\nfreq_table &lt;- data.frame(Word = words_by_newsgroup$word,\n                              Frequency = words_by_newsgroup$n)\n\n\ndatatable(freq_table, \n          options = list(pageLength = 10))\n\n\n\n\n\n\n\n\nThe wordcloud below is plotted by using ggwordcloud package.\n\nset.seed(1234)\n\nwords_by_newsgroup %&gt;%\n  filter(n &gt; 0) %&gt;%\nggplot(aes(label = word,\n           size = n)) +\n  geom_text_wordcloud() +\n  theme_minimal() +\n  facet_wrap(~newsgroup)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#basic-concept-of-tf-idf",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#basic-concept-of-tf-idf",
    "title": "Hands On Exercise 5",
    "section": "",
    "text": "tf–idf, short for term frequency–inverse document frequency, is a numerical statistic that is intended to reflect how important a word is to a document in a collection of corpus.\n\n\n\n\nThe code chunk below uses bind_tf_idf() of tidytext to compute and bind the term frequency, inverse document frequency and ti-idf of a tidy text dataset to the dataset.\n\ntf_idf &lt;- words_by_newsgroup %&gt;%\n  bind_tf_idf(word, newsgroup, n) %&gt;%\n  arrange(desc(tf_idf))\n\n\n\n\nTable below is an interactive table created by using datatable().\n\n# code for interactive data table\n\nDT::datatable(tf_idf, filter = 'top') %&gt;% \n  formatRound(columns = c('tf', 'idf', \n                          'tf_idf'), \n              digits = 3) %&gt;%\n  formatStyle(0, \n              target = 'row', \n              lineHeight='25%')\n\n\n\n\n\n\n\n\nThe code chunk below uses datatable() of DT package to create a html table that allows pagination of rows and columns.\n\nDT::datatable(tf_idf, filter = 'top') %&gt;% \n  formatRound(columns = c('tf', 'idf', \n                          'tf_idf'), \n              digits = 3) %&gt;%\n  formatStyle(0, \n              target = 'row', \n              lineHeight='25%')\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk:\n\n\n\n\nfilter() argument is used to turn control the filter UI.\nformatRound() is used to customise the values format. The argument digits define the number of decimal places.\nformatStyle() is used to customise the output table. In this example, the arguments target and lineHeight are used to reduce the line height by 25%.\n\n\n\nTo learn more about customising DT’s table, visit this link.\n\n\n\nFacet bar charts technique is used to visualise the tf-idf values of science related newsgroup.\nThe code chunk used to prepare the plot.\n\ntf_idf %&gt;%\n  filter(str_detect(newsgroup, \"^sci\\\\.\")) %&gt;%\n  group_by(newsgroup) %&gt;%\n  slice_max(tf_idf, \n            n = 12) %&gt;%\n  ungroup() %&gt;%\n  mutate(word = reorder(word, \n                        tf_idf)) %&gt;%\n  ggplot(aes(tf_idf, \n             word, \n             fill = newsgroup)) +\n  geom_col(show.legend = FALSE) +\n  facet_wrap(~ newsgroup, \n             scales = \"free\") +\n  labs(x = \"tf-idf\", \n       y = NULL)\n\n\n\n\n\n\n\n\n\n\n\n\nTo count the number of times that two words appear within the same document, or to see how correlated they are.\nMost operations for finding pairwise counts or correlations need to turn the data into a wide matrix first.\nwidyr package first ‘casts’ a tidy dataset into a wide matrix, performs an operation such as a correlation on it, then re-tidies the result.\n\n\nIn this code chunk below, pairwise_cor() of widyr package is used to compute the correlation between newsgroup based on the common words found.\n\nnewsgroup_cors &lt;- words_by_newsgroup %&gt;%\n  pairwise_cor(newsgroup, \n               word, \n               n, \n               sort = TRUE)\n\n\n\n\nNow, we can visualise the relationship between newgroups in network graph as shown below.\nThe code chunk:\n\nset.seed(2017)\n\nnewsgroup_cors %&gt;%\n  filter(correlation &gt; .025) %&gt;%\n  graph_from_data_frame() %&gt;%\n  ggraph(layout = \"fr\") +\n  geom_edge_link(aes(alpha = correlation, \n                     width = correlation)) +\n  geom_node_point(size = 6, \n                  color = \"lightblue\") +\n  geom_node_text(aes(label = name),\n                 color = \"red\",\n                 repel = TRUE) +\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n\nIn this code chunk below, a bigram data frame is created by using unnest_tokens() of tidytext.\n\nbigrams &lt;- cleaned_text %&gt;%\n  unnest_tokens(bigram, \n                text, \n                token = \"ngrams\", \n                n = 2)\n\nbigrams\n\n# A tibble: 28,827 × 3\n   newsgroup   id    bigram    \n   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;     \n 1 alt.atheism 54256 &lt;NA&gt;      \n 2 alt.atheism 54256 &lt;NA&gt;      \n 3 alt.atheism 54256 as i      \n 4 alt.atheism 54256 i don't   \n 5 alt.atheism 54256 don't know\n 6 alt.atheism 54256 know this \n 7 alt.atheism 54256 this book \n 8 alt.atheism 54256 book i    \n 9 alt.atheism 54256 i will    \n10 alt.atheism 54256 will use  \n# ℹ 28,817 more rows\n\n\n\n\n\nThe code chunk is used to count and sort the bigram data frame ascendingly.\n\nbigrams_count &lt;- bigrams %&gt;%\n  filter(bigram != 'NA') %&gt;%\n  count(bigram, sort = TRUE)\n\nbigrams_count\n\n# A tibble: 19,888 × 2\n   bigram       n\n   &lt;chr&gt;    &lt;int&gt;\n 1 of the     169\n 2 in the     113\n 3 to the      74\n 4 to be       59\n 5 for the     52\n 6 i have      48\n 7 that the    47\n 8 if you      40\n 9 on the      39\n10 it is       38\n# ℹ 19,878 more rows\n\n\n\n\n\nThe code chunk below is used to seperate the bigram into two words.\n\nbigrams_separated &lt;- bigrams %&gt;%\n  filter(bigram != 'NA') %&gt;%\n  separate(bigram, c(\"word1\", \"word2\"), \n           sep = \" \")\n\nbigrams_filtered &lt;- bigrams_separated %&gt;%\n  filter(!word1 %in% stop_words$word) %&gt;%\n  filter(!word2 %in% stop_words$word)\n\nbigrams_filtered\n\n# A tibble: 4,607 × 4\n   newsgroup   id    word1        word2        \n   &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;        &lt;chr&gt;        \n 1 alt.atheism 54256 defines      god          \n 2 alt.atheism 54256 term         preclues     \n 3 alt.atheism 54256 science      ideas        \n 4 alt.atheism 54256 ideas        drawn        \n 5 alt.atheism 54256 supernatural precludes    \n 6 alt.atheism 54256 scientific   assertions   \n 7 alt.atheism 54256 religious    dogma        \n 8 alt.atheism 54256 religion     involves     \n 9 alt.atheism 54256 involves     circumventing\n10 alt.atheism 54256 gain         absolute     \n# ℹ 4,597 more rows\n\n\n\n\n\n\nbigram_counts &lt;- bigrams_filtered %&gt;% \n  count(word1, word2, sort = TRUE)\n\n\n\n\nIn the code chunk below, a network graph is created by using graph_from_data_frame() of igraph package.\n\nbigram_graph &lt;- bigram_counts %&gt;%\n  filter(n &gt; 3) %&gt;%\n  graph_from_data_frame()\nbigram_graph\n\nIGRAPH 55de3b9 DN-- 40 24 -- \n+ attr: name (v/c), n (e/n)\n+ edges from 55de3b9 (vertex names):\n [1] 1          -&gt;2           1          -&gt;3           static     -&gt;void       \n [4] time       -&gt;pad         1          -&gt;4           infield    -&gt;fly        \n [7] mat        -&gt;28          vv         -&gt;vv          1          -&gt;5          \n[10] cock       -&gt;crow        noticeshell-&gt;widget      27         -&gt;1993       \n[13] 3          -&gt;4           child      -&gt;molestation cock       -&gt;crew       \n[16] gun        -&gt;violence    heat       -&gt;sink        homosexual -&gt;male       \n[19] homosexual -&gt;women       include    -&gt;xol         mary       -&gt;magdalene  \n[22] read       -&gt;write       rev        -&gt;20          tt         -&gt;ee         \n\n\n\n\n\nIn this code chunk below, ggraph package is used to plot the bigram.\nThe code chunk used to plot the network graph:\n\nset.seed(1234)\n\nggraph(bigram_graph, layout = \"fr\") +\n  geom_edge_link() +\n  geom_node_point() +\n  geom_node_text(aes(label = name), \n                 vjust = 1, \n                 hjust = 1)\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk used to plot the network graph.\n\nset.seed(1234)\n\na &lt;- grid::arrow(type = \"closed\", \n                 length = unit(.15,\n                               \"inches\"))\n\nggraph(bigram_graph, \n       layout = \"fr\") +\n  geom_edge_link(aes(edge_alpha = n), \n                 show.legend = FALSE,\n                 arrow = a, \n                 end_cap = circle(.07,\n                                  'inches')) +\n  geom_node_point(color = \"lightblue\", \n                  size = 5) +\n  geom_node_text(aes(label = name), \n                 vjust = 1, \n                 hjust = 1) +\n  theme_void()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#references",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#references",
    "title": "Hands On Exercise 5",
    "section": "",
    "text": "Reference guide\n\nwidyr: Widen, process, and re-tidy a dataset\nUnited Nations Voting Correlations"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "title": "Hands On Exercise 7",
    "section": "",
    "text": "By the end of this hands-on exercise you will be able create the followings data visualisation by using R packages:\n\nplotting a calender heatmap by using ggplot2 functions,\nplotting a cycle plot by using ggplot2 function,\nplotting a slopegraph\nplotting a horizon chart\n\n\n\n\nWrite a code chunk to check, install and launch the following R packages: scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table and tidyverse.\n\npacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse)\n\n\n\n\nIn this section, you will learn how to plot a calender heatmap programmatically by using ggplot2 package.\n\n\n\nBy the end of this section, you will be able to:\n\n\n\nplot a calender heatmap by using ggplot2 functions and extension,\nto write function using R programming,\nto derive specific date and time related field by using base R and lubridate packages\nto perform data preparation task by using tidyr and dplyr packages.\n\n\n\nFor the purpose of this hands-on exercise, eventlog.csv file will be used. This data file consists of 199,999 rows of time-series cyber attack records by country.\n\n\n\nFirst, you will use the code chunk below to import eventlog.csv file into R environment and called the data frame as attacks.\n\nattacks &lt;- read_csv(\"data/eventlog.csv\")\n\n\n\n\nIt is always a good practice to examine the imported data frame before further analysis is performed.\nFor example, kable() can be used to review the structure of the imported data frame.\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\nThere are three columns, namely timestamp, source_country and tz.\n\ntimestamp field stores date-time values in POSIXct format.\nsource_country field stores the source of the attack. It is in ISO 3166-1 alpha-2 country code.\ntz field stores time zone of the source IP address.\n\n\n\n\nStep 1: Deriving weekday and hour of day fields\nBefore we can plot the calender heatmap, two new fields namely wkday and hour need to be derived. In this step, we will write a function to perform the task.\n\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n  }\n\n\n\n\n\n\n\nNote\n\n\n\n\nymd_hms() and hour() are from lubridate package, and\nweekdays() is a base R function.\n\n\n\nStep 2: Deriving the attacks tibble data frame\n\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\n\n\n\n\n\n\nNote\n\n\n\nBeside extracting the necessary data into attacks data frame, mutate() of dplyr package is used to convert wkday and hour fields into factor so they’ll be ordered when plotting\n\n\nTable below shows the tidy tibble table after processing.\n\nkable(head(attacks))\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11\n\n\n\n\n\n\n\n\n\ngrouped &lt;- attacks %&gt;% \n  count(wkday, hour) %&gt;% \n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk\n\n\n\n\na tibble data table called grouped is derived by aggregating the attack by wkday and hour fields.\na new field called n is derived by using group_by() and count() functions.\nna.omit() is used to exclude missing value.\ngeom_tile() is used to plot tiles (grids) at each x and y position. color and size arguments are used to specify the border color and line size of the tiles.\ntheme_tufte() of ggthemes package is used to remove unnecessary chart junk. To learn which visual components of default ggplot2 have been excluded, you are encouraged to comment out this line to examine the default plot.\ncoord_equal() is used to ensure the plot will have an aspect ratio of 1:1.\nscale_fill_gradient() function is used to creates a two colour gradient (low-high).\n\n\n\nThen we can simply group the count by hour and wkday and plot it, since we know that we have values for every combination there’s no need to further preprocess the data.\n\n\n\nChallenge: Building multiple heatmaps for the top four countries with the highest number of attacks.\n\n\n\n\nStep 1: Deriving attack by country object\nIn order to identify the top 4 countries with the highest number of attacks, you are required to do the followings:\n\ncount the number of attacks by country,\ncalculate the percent of attackes by country, and\nsave the results in a tibble data frame.\n\n\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\nStep 2: Preparing the tidy data frame\nIn this step, you are required to extract the attack records of the top 4 countries from attacks data frame and save the data in a new tibble data frame (i.e. top4_attacks).\n\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()\n\n\n\n\nStep 3: Plotting the Multiple Calender Heatmap by using ggplot2 package.\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\n\n\n\nIn this section, you will learn how to plot a cycle plot showing the time-series patterns and trend of visitor arrivals from Vietnam programmatically by using ggplot2 functions.\n\n\n\nFor the purpose of this hands-on exercise, arrivals_by_air.xlsx will be used.\nThe code chunk below imports arrivals_by_air.xlsx by using read_excel() of readxl package and save it as a tibble data frame called air.\n\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")\n\n\n\n\nNext, two new fields called month and year are derived from Month-Year field.\n\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))\n\n\n\n\nNext, the code chunk below is use to extract data for the target country (i.e. Vietnam).\n\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)\n\n\n\n\nThe code chunk below uses group_by() and summarise() of dplyr to compute year average arrivals by month.\n\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))\n\n\n\n\nThe code chunk below is used to plot the cycle plot as shown in Slide 12/23.\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\")\n\n\n\n\n\n\n\n\n\n\n\n\nIn this section you will learn how to plot a slopegraph by using R.\nBefore getting start, make sure that CGPfunctions has been installed and loaded onto R environment. Then, refer to Using newggslopegraph to learn more about the function. Lastly, read more about newggslopegraph() and its arguments by referring to this link.\n\n\nImport the rice data set into R environment by using the code chunk below.\n\nrice &lt;- read_csv(\"data/rice.csv\")\n\n\n\n\nNext, code chunk below will be used to plot a basic slopegraph as shown below.\n\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Student, Seng Jing Yi\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThing to learn from the code chunk above\n\n\n\nFor effective data visualisation design, factor() is used convert the value type of Year field from numeric to factor."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#learning-outcome",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#learning-outcome",
    "title": "Hands On Exercise 7",
    "section": "",
    "text": "By the end of this hands-on exercise you will be able create the followings data visualisation by using R packages:\n\nplotting a calender heatmap by using ggplot2 functions,\nplotting a cycle plot by using ggplot2 function,\nplotting a slopegraph\nplotting a horizon chart"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#getting-started",
    "title": "Hands On Exercise 7",
    "section": "",
    "text": "Write a code chunk to check, install and launch the following R packages: scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table and tidyverse.\n\npacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#plotting-calendar-heatmap",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#plotting-calendar-heatmap",
    "title": "Hands On Exercise 7",
    "section": "",
    "text": "In this section, you will learn how to plot a calender heatmap programmatically by using ggplot2 package.\n\n\n\nBy the end of this section, you will be able to:\n\n\n\nplot a calender heatmap by using ggplot2 functions and extension,\nto write function using R programming,\nto derive specific date and time related field by using base R and lubridate packages\nto perform data preparation task by using tidyr and dplyr packages.\n\n\n\nFor the purpose of this hands-on exercise, eventlog.csv file will be used. This data file consists of 199,999 rows of time-series cyber attack records by country.\n\n\n\nFirst, you will use the code chunk below to import eventlog.csv file into R environment and called the data frame as attacks.\n\nattacks &lt;- read_csv(\"data/eventlog.csv\")\n\n\n\n\nIt is always a good practice to examine the imported data frame before further analysis is performed.\nFor example, kable() can be used to review the structure of the imported data frame.\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\nThere are three columns, namely timestamp, source_country and tz.\n\ntimestamp field stores date-time values in POSIXct format.\nsource_country field stores the source of the attack. It is in ISO 3166-1 alpha-2 country code.\ntz field stores time zone of the source IP address.\n\n\n\n\nStep 1: Deriving weekday and hour of day fields\nBefore we can plot the calender heatmap, two new fields namely wkday and hour need to be derived. In this step, we will write a function to perform the task.\n\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n  }\n\n\n\n\n\n\n\nNote\n\n\n\n\nymd_hms() and hour() are from lubridate package, and\nweekdays() is a base R function.\n\n\n\nStep 2: Deriving the attacks tibble data frame\n\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\n\n\n\n\n\n\nNote\n\n\n\nBeside extracting the necessary data into attacks data frame, mutate() of dplyr package is used to convert wkday and hour fields into factor so they’ll be ordered when plotting\n\n\nTable below shows the tidy tibble table after processing.\n\nkable(head(attacks))\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11\n\n\n\n\n\n\n\n\n\ngrouped &lt;- attacks %&gt;% \n  count(wkday, hour) %&gt;% \n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk\n\n\n\n\na tibble data table called grouped is derived by aggregating the attack by wkday and hour fields.\na new field called n is derived by using group_by() and count() functions.\nna.omit() is used to exclude missing value.\ngeom_tile() is used to plot tiles (grids) at each x and y position. color and size arguments are used to specify the border color and line size of the tiles.\ntheme_tufte() of ggthemes package is used to remove unnecessary chart junk. To learn which visual components of default ggplot2 have been excluded, you are encouraged to comment out this line to examine the default plot.\ncoord_equal() is used to ensure the plot will have an aspect ratio of 1:1.\nscale_fill_gradient() function is used to creates a two colour gradient (low-high).\n\n\n\nThen we can simply group the count by hour and wkday and plot it, since we know that we have values for every combination there’s no need to further preprocess the data.\n\n\n\nChallenge: Building multiple heatmaps for the top four countries with the highest number of attacks.\n\n\n\n\nStep 1: Deriving attack by country object\nIn order to identify the top 4 countries with the highest number of attacks, you are required to do the followings:\n\ncount the number of attacks by country,\ncalculate the percent of attackes by country, and\nsave the results in a tibble data frame.\n\n\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\nStep 2: Preparing the tidy data frame\nIn this step, you are required to extract the attack records of the top 4 countries from attacks data frame and save the data in a new tibble data frame (i.e. top4_attacks).\n\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()\n\n\n\n\nStep 3: Plotting the Multiple Calender Heatmap by using ggplot2 package.\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#plotting-cycle-plot",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#plotting-cycle-plot",
    "title": "Hands On Exercise 7",
    "section": "",
    "text": "In this section, you will learn how to plot a cycle plot showing the time-series patterns and trend of visitor arrivals from Vietnam programmatically by using ggplot2 functions.\n\n\n\nFor the purpose of this hands-on exercise, arrivals_by_air.xlsx will be used.\nThe code chunk below imports arrivals_by_air.xlsx by using read_excel() of readxl package and save it as a tibble data frame called air.\n\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")\n\n\n\n\nNext, two new fields called month and year are derived from Month-Year field.\n\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))\n\n\n\n\nNext, the code chunk below is use to extract data for the target country (i.e. Vietnam).\n\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)\n\n\n\n\nThe code chunk below uses group_by() and summarise() of dplyr to compute year average arrivals by month.\n\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))\n\n\n\n\nThe code chunk below is used to plot the cycle plot as shown in Slide 12/23.\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#plotting-slopegraph",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#plotting-slopegraph",
    "title": "Hands On Exercise 7",
    "section": "",
    "text": "In this section you will learn how to plot a slopegraph by using R.\nBefore getting start, make sure that CGPfunctions has been installed and loaded onto R environment. Then, refer to Using newggslopegraph to learn more about the function. Lastly, read more about newggslopegraph() and its arguments by referring to this link.\n\n\nImport the rice data set into R environment by using the code chunk below.\n\nrice &lt;- read_csv(\"data/rice.csv\")\n\n\n\n\nNext, code chunk below will be used to plot a basic slopegraph as shown below.\n\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Student, Seng Jing Yi\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThing to learn from the code chunk above\n\n\n\nFor effective data visualisation design, factor() is used convert the value type of Year field from numeric to factor."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_2.html#learning-outcome",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_2.html#learning-outcome",
    "title": "Hands On Exercise 8b",
    "section": "1. Learning outcome",
    "text": "1. Learning outcome\nBy the end of this hands-on exercise, you will acquire the following skills by using appropriate R packages:\n\nTo import an aspatial data file into R.\nTo convert it into simple point feature data frame and at the same time, to assign an appropriate projection reference to the newly create simple point feature data frame.\nTo plot interactive proportional symbol maps."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_2.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_2.html#getting-started",
    "title": "Hands On Exercise 8b",
    "section": "2. Getting Started",
    "text": "2. Getting Started\nBefore we get started, we need to ensure that tmap package of R and other related R packages have been installed and loaded into R.\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_2.html#geospatial-data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_2.html#geospatial-data-wrangling",
    "title": "Hands On Exercise 8b",
    "section": "3. Geospatial Data Wrangling",
    "text": "3. Geospatial Data Wrangling\n\n3.1 The data\nThe data set use for this hands-on exercise is called SGPools_svy21. The data is in csv file format.\nFigure below shows the first 15 records of SGPools_svy21.csv. It consists of seven columns. The XCOORD and YCOORD columns are the x-coordinates and y-coordinates of SingPools outlets and branches. They are in Singapore SVY21 Projected Coordinates System.\n\n\n\n3.2 Data Import and Preparation\nThe code chunk below uses read_csv() function of readr package to import SGPools_svy21.csv into R as a tibble data frame called sgpools.\n\nsgpools &lt;- read_csv(\"data/aspatial/SGPools_svy21.csv\")\n\nAfter importing the data file into R, it is important for us to examine if the data file has been imported correctly.\nThe code chunk below shows list() is used to do the job.\n\nlist(sgpools) \n\n[[1]]\n# A tibble: 306 × 7\n   NAME           ADDRESS POSTCODE XCOORD YCOORD `OUTLET TYPE` `Gp1Gp2 Winnings`\n   &lt;chr&gt;          &lt;chr&gt;      &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n 1 Livewire (Mar… 2 Bayf…    18972 30842. 29599. Branch                        5\n 2 Livewire (Res… 26 Sen…    98138 26704. 26526. Branch                       11\n 3 SportsBuzz (K… Lotus …   738078 20118. 44888. Branch                        0\n 4 SportsBuzz (P… 1 Sele…   188306 29777. 31382. Branch                       44\n 5 Prime Serango… Blk 54…   552542 32239. 39519. Branch                        0\n 6 Singapore Poo… 1A Woo…   731001 21012. 46987. Branch                        3\n 7 Singapore Poo… Blk 64…   370064 33990. 34356. Branch                       17\n 8 Singapore Poo… Blk 88…   370088 33847. 33976. Branch                       16\n 9 Singapore Poo… Blk 30…   540308 33910. 41275. Branch                       21\n10 Singapore Poo… Blk 20…   560202 29246. 38943. Branch                       25\n# ℹ 296 more rows\n\n\nNotice that the sgpools data in tibble data frame and not the common R data frame.\n\n\n3.3 Creating a sf data frame from an aspatial data frame\nThe code chunk below converts sgpools data frame into a simple feature data frame by using st_as_sf() of sf packages.\n\nsgpools_sf &lt;- st_as_sf(sgpools, \n                       coords = c(\"XCOORD\", \"YCOORD\"),\n                       crs= 3414)\n\n\n\n\n\n\n\nThings to learn from the argument above:\n\n\n\n\nThe coords argument requires you to provide the column name of the x-coordinates first then followed by the column name of the y-coordinates.\nThe crs argument required you to provide the coordinates system in epsg format. EPSG: 3414 is Singapore SVY21 Projected Coordinate System. You can search for other country’s epsg code by refering to epsg.io.\n\n\n\nFigure below shows the data table of sgpools_sf. Notice that a new column called geometry has been added into the data frame.\n\nYou can display the basic information of the newly created sgpools_sf by using the code chunk below.\n\nlist(sgpools_sf)\n\n[[1]]\nSimple feature collection with 306 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 7844.194 ymin: 26525.7 xmax: 45176.57 ymax: 47987.13\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 306 × 6\n   NAME                         ADDRESS POSTCODE `OUTLET TYPE` `Gp1Gp2 Winnings`\n * &lt;chr&gt;                        &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n 1 Livewire (Marina Bay Sands)  2 Bayf…    18972 Branch                        5\n 2 Livewire (Resorts World Sen… 26 Sen…    98138 Branch                       11\n 3 SportsBuzz (Kranji)          Lotus …   738078 Branch                        0\n 4 SportsBuzz (PoMo)            1 Sele…   188306 Branch                       44\n 5 Prime Serangoon North        Blk 54…   552542 Branch                        0\n 6 Singapore Pools Woodlands C… 1A Woo…   731001 Branch                        3\n 7 Singapore Pools 64 Circuit … Blk 64…   370064 Branch                       17\n 8 Singapore Pools 88 Circuit … Blk 88…   370088 Branch                       16\n 9 Singapore Pools Anchorvale … Blk 30…   540308 Branch                       21\n10 Singapore Pools Ang Mo Kio … Blk 20…   560202 Branch                       25\n# ℹ 296 more rows\n# ℹ 1 more variable: geometry &lt;POINT [m]&gt;\n\n\nThe output shows that sgppols_sf is in point feature class. It’s epsg ID is 3414. The bbox provides information of the extend of the geospatial data."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_2.html#drawing-proportional-symbol-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_2.html#drawing-proportional-symbol-map",
    "title": "Hands On Exercise 8b",
    "section": "4. Drawing Proportional Symbol Map",
    "text": "4. Drawing Proportional Symbol Map\nTo create an interactive proportional symbol map in R, the view mode of tmap will be used.\nThe code churn below will turn on the interactive mode of tmap.\n\ntmap_mode(\"view\")\n\n\n4.1 It all started with an interactive point symbol map\nThe code chunks below are used to create an interactive point symbol map.\n\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"red\",\n           size = 1,\n           border.col = \"black\",\n           border.lwd = 1)\n\n\n\n\n\n\n\n4.2 Lets make it proportional\nTo draw a proportional symbol map, we need to assign a numerical variable to the size visual attribute. The code chunks below show that the variable Gp1Gp2Winnings is assigned to size visual attribute.\n\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"red\",\n           size = \"Gp1Gp2 Winnings\",\n           border.col = \"black\",\n           border.lwd = 1)\n\n\n\n\n\n\n\n4.3 Lets give it a different colour\nThe proportional symbol map can be further improved by using the colour visual attribute. In the code chunks below, OUTLET_TYPE variable is used as the colour attribute variable.\n\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"OUTLET TYPE\", \n          size = \"Gp1Gp2 Winnings\",\n          border.col = \"black\",\n          border.lwd = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_2.html#i-have-a-twin-brothers",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_2.html#i-have-a-twin-brothers",
    "title": "Hands On Exercise 8b",
    "section": "I have a twin brothers :)",
    "text": "I have a twin brothers :)\nAn impressive and little-know feature of tmap’s view mode is that it also works with faceted plots. The argument sync in tm_facets() can be used in this case to produce multiple maps with synchronised zoom and pan settings.\n\ntm_shape(sgpools_sf) +\n  tm_bubbles(col = \"OUTLET TYPE\", \n          size = \"Gp1Gp2 Winnings\",\n          border.col = \"black\",\n          border.lwd = 1) +\n  tm_facets(by= \"OUTLET TYPE\",\n            nrow = 1,\n            sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\nBefore you end the session, it is wiser to switch tmap’s Viewer back to plot mode by using the code chunk below.\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_2.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_2.html#reference",
    "title": "Hands On Exercise 8b",
    "section": "5. Reference",
    "text": "5. Reference\n\n5.1 All about tmap package\n\ntmap: Thematic Maps in R\ntmap\ntmap: get started!\ntmap: changes in version 2.0\ntmap: creating thematic maps in a flexible way (useR!2015)\nExploring and presenting maps with tmap (useR!2017)\n\n\n\n5.2 Geospatial data wrangling\n\nsf: Simple Features for R\nSimple Features for R: StandardizedSupport for Spatial Vector Data\nReading, Writing and Converting Simple Features\n\n\n\n27.3 Data wrangling\n\ndplyr\nTidy data\ntidyr: Easily Tidy Data with ‘spread()’ and ‘gather()’ Functions"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In Class Exercise 1",
    "section": "",
    "text": "pacman::p_load(tidyverse)\nrealis &lt;- read_csv(\"data/realis2019.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "In Class Exercise 1",
    "section": "Loading R Packages",
    "text": "Loading R Packages\nIn the code chunk below, p_load() of pacman package is used to load tidyverse family of packages.\n\nrealis.csv &lt;- read.csv(\"data/realis2019.csv\")\n\n\nggplot(data = realis, \n       aes(x= `Unit Price ($ psm)`)) + geom_histogram()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "Loading relevant packages\n\npacman::p_load(tidyverse, ggstatsplot)\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\") \n\nApplying ggstatsplot\n\nset.seed(1234)\n\n# Using parametric for histogram\np &lt;- gghistostats(data = exam,   \n             x = ENGLISH,   \n             type = \"parametric\",   \n             test.value = 60,   \n             bin.args = list(color = \"black\",                   \n                             fill = \"grey 50\",                   \n                             alpha = 0.7),  \n             normal.curve = FALSE,   \n             normal.curve.args = list(linewidth = 2),   \n             xlab = \"English scores\" )\n\n## 4 Types of distribution - Parametric, non-parametric, robust (exclude outliers), bayes\np\n\n\n\n\n\n\n\n\n\n# Extracting out tibblr\nextract_stats(p)\n\n$subtitle_data\n# A tibble: 1 × 15\n     mu statistic df.error  p.value method            alternative effectsize\n  &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;             &lt;chr&gt;       &lt;chr&gt;     \n1    60      8.77      321 1.04e-16 One Sample t-test two.sided   Hedges' g \n  estimate conf.level conf.low conf.high conf.method conf.distribution n.obs\n     &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;             &lt;int&gt;\n1    0.488       0.95    0.372     0.603 ncp         t                   322\n  expression\n  &lt;list&gt;    \n1 &lt;language&gt;\n\n$caption_data\n# A tibble: 1 × 16\n  term       effectsize      estimate conf.level conf.low conf.high    pd\n  &lt;chr&gt;      &lt;chr&gt;              &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 Difference Bayesian t-test     7.16       0.95     5.54      8.75     1\n  prior.distribution prior.location prior.scale    bf10 method         \n  &lt;chr&gt;                       &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;          \n1 cauchy                          0       0.707 4.54e13 Bayesian t-test\n  conf.method log_e_bf10 n.obs expression\n  &lt;chr&gt;            &lt;dbl&gt; &lt;int&gt; &lt;list&gt;    \n1 ETI               31.4   322 &lt;language&gt;\n\n$pairwise_comparisons_data\nNULL\n\n$descriptive_data\nNULL\n\n$one_sample_data\nNULL\n\n$tidy_data\nNULL\n\n$glance_data\nNULL\n\n\n\nNon-parametricRobustBayes\n\n\n\ngghistostats(data = exam,   \n             x = ENGLISH,   \n             type = \"non-parametric\",   \n             test.value = 60,   \n             bin.args = list(color = \"black\",                   \n                             fill = \"grey 50\",                   \n                             alpha = 0.7),  \n             normal.curve = FALSE,   \n             normal.curve.args = list(linewidth = 2),   \n             xlab = \"English scores\" )\n\n\n\n\n\n\n\n\n\n\n\ngghistostats(data = exam,   \n             x = ENGLISH,   \n             type = \"robust\",   \n             test.value = 60,   \n             bin.args = list(color = \"black\",                   \n                             fill = \"grey 50\",                   \n                             alpha = 0.7),  \n             normal.curve = FALSE,   \n             normal.curve.args = list(linewidth = 2),   \n             xlab = \"English scores\" )\n\n\n\n\n\n\n\n\n\n\n\ngghistostats(data = exam,   \n             x = ENGLISH,   \n             type = \"bayes\",   \n             test.value = 60,   \n             bin.args = list(color = \"black\",                   \n                             fill = \"grey 50\",                   \n                             alpha = 0.7),  \n             normal.curve = FALSE,   \n             normal.curve.args = list(linewidth = 2),   \n             xlab = \"English scores\" )\n\n\n\n\n\n\n\n\n\n\n\nggwithinstats\n\n# Reformatting dataset such that each record includes: Student, Subject, Score. \n\nexam_long &lt;- exam %&gt;% \n  pivot_longer(\n    cols = ENGLISH:SCIENCE, \n    names_to = \"SUBJECT\", \n    values_to = \"SCORES\") %&gt;%\n  filter(CLASS == \"3A\")\n\n\n# Comparing across 3 subjects\np1 &lt;- ggwithinstats(\n  data = exam_long, \n  x = SUBJECT,\n  y = SCORES,\n  type = \"p\",\n)\n\np1\n\n\n\n\n\n\n\n\n\n## Plotting to include reference line that compares the student details side by side. \nggwithinstats(\n  data = filter(exam_long, SUBJECT %in% c('MATHS', 'SCIENCE')), \n  x = SUBJECT, \n  y = SCORES, \n  type = \"p\"\n)\n\n\n\n\n\n\n\n# Filtering to math and science \n\nScatterplot with histogram\n\nggscatterstats(\n  data = exam, \n  x = MATHS, \n  y = ENGLISH, \n  marginal = TRUE, \n  label.var = ID, \n  label.expression = ENGLISH &gt; 90 & MATHS &gt; 90)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "Reference: https://kgjerde.github.io/corporaexplorer/articles/bible.html\n\npacman::p_load(tidyverse, \n  stringi, stringr, tidyr, tibble, rvest, corporaexplorer, readr, tidytext )\n\nLoading the data from Project Gutenberg\n\nbible &lt;- readr::read_lines(\"http://www.gutenberg.org/cache/epub/10/pg10.txt\")\n\nPre-processing of the text\n\n# Collapsing into one string.\nbible &lt;- paste(bible, collapse = \"\\n\")\n\n# Identifying the beginning and end of the Bible / stripping PJ metadata\n # (technique borrowed from https://quanteda.io/articles/pkgdown/replication/digital-humanities.html).\nstart_v &lt;- stri_locate_first_fixed(bible, \"The First Book of Moses: Called Genesis\")[1]\nend_v &lt;- stri_locate_last_fixed(bible, \"Amen.\")[2]\nbible &lt;- stri_sub(bible, start_v, end_v)\n\n# In the file, every book in the bible is preceded by five newlines,\n  # which we use to split our string into a vector where each element is a book.\nbooks &lt;- stri_split_regex(bible, \"\\n{5}\") %&gt;%\n    unlist %&gt;%\n    .[-40]  # Removing the heading \"The New Testament of the King James Bible\",\n              # which also was preceded by five newlines.\n\n# Because of the structure of the text in the file:\n  # Replacing double or more newlines with two newlines, and a single newline with space.\nbooks &lt;- str_replace_all(books, \"\\n{2,}\", \"NEW_PARAGRAPH\") %&gt;%\n    str_replace_all(\"\\n\", \" \") %&gt;%\n    str_replace_all(\"NEW_PARAGRAPH\", \"\\n\\n\")\nbooks &lt;- books[3:68]  # The two first elements are not books\n\n# Identifying new chapters within each book and split the text into chapters.\n# (The first characters in chapter 2 will e.g. be 2:1)\nchapters &lt;- str_replace_all(books, \"(\\\\d+:1 )\", \"NEW_CHAPTER\\\\1\") %&gt;%\n    stri_split_regex(\"NEW_CHAPTER\")\n\n# Removing the chapter headings from the text (we want them as metadata).\nchapters &lt;- lapply(chapters, function(x) x[-1])\n\nMeta-data: Removing the chapters to include within the text field.\n\n# We are not quite happy with the long book titles in the King James Bible,\n  # so we retrieve shorter versions from esv.org which will take up less\n  # space in the corpus map plot.\nbook_titles &lt;- read_html(\"https://www.esv.org/resources/esv-global-study-bible/list-of-abbreviations\") %&gt;%\n  html_nodes(\"td:nth-child(1)\") %&gt;%\n  html_text() %&gt;%\n  .[13:78]  # Removing irrelevant elements after manual inspection.\n\n# We add a column indicating whether a book belongs to the Old or New Testament,\n#   knowing that they contain respectively 39 and 27 books.\ntestament &lt;- c(rep(\"Old\", 39), rep(\"New\", 27))\n\nCreating the dataframe with text and meta data\n\n# Data frame with one book as one row.\nbible_df &lt;- tibble::tibble(Text = chapters,\n                           Book = book_titles,\n                           Testament = testament)\n\n# We want each chapter to be one row, but keep the metadata (book and which testament).\nbible_df &lt;- tidyr::unnest(bible_df, Text)\n\n\n\nWhen we first have a data frame with text and metadata, creating a “corporaexplorerobject” for exploration is very simple\n\n# As this is a corpus which is not organised by date,\n  # we set `date_based_corpus` to `FALSE`.\n# Because we want to organise our exploration around the books in the Bible,\n  # we pass `\"Book\"` to the `grouping_variable` argument.\n# We specify which metadata columns we want to be displayed in the\n  # \"Document information\" tab, using the `columns_doc_info` argument.\nKJB &lt;- prepare_data(dataset = bible_df,\n                    date_based_corpus = FALSE,\n                    grouping_variable = \"Book\",\n                    columns_doc_info = c(\"Testament\", \"Book\"))\n\nVerifying that the proper object class is returned - corporaexplorerobject\n\nclass(KJB)\n\n[1] \"corporaexplorerobject\"\n\n\n\n\n\nTo call shiny app with explore\n\nexplore(KJB)\n\nShiny applications not supported in static R Markdown documents\n\n\nExample: mentions of Moses in the New Testament:\n\n\n\nExample: finding “pearl” in chapters in the Bible that also include “swine”:"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#corporaexplorer",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#corporaexplorer",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "When we first have a data frame with text and metadata, creating a “corporaexplorerobject” for exploration is very simple\n\n# As this is a corpus which is not organised by date,\n  # we set `date_based_corpus` to `FALSE`.\n# Because we want to organise our exploration around the books in the Bible,\n  # we pass `\"Book\"` to the `grouping_variable` argument.\n# We specify which metadata columns we want to be displayed in the\n  # \"Document information\" tab, using the `columns_doc_info` argument.\nKJB &lt;- prepare_data(dataset = bible_df,\n                    date_based_corpus = FALSE,\n                    grouping_variable = \"Book\",\n                    columns_doc_info = c(\"Testament\", \"Book\"))\n\nVerifying that the proper object class is returned - corporaexplorerobject\n\nclass(KJB)\n\n[1] \"corporaexplorerobject\""
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#run-corpus-explorer",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#run-corpus-explorer",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "To call shiny app with explore\n\nexplore(KJB)\n\nShiny applications not supported in static R Markdown documents\n\n\nExample: mentions of Moses in the New Testament:\n\n\n\nExample: finding “pearl” in chapters in the Bible that also include “swine”:"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 1 Part 2",
    "section": "",
    "text": "This exercise seeks to improve the original visualisation with reference to Ben Jones’ article “A Tale of Four Quadrants”.\n\n\n\n\n\n\n\n\n\n\nClarity\nAesthetics\n\n\n\n\n\n2D columns facilitates easy gauge.\nY axis starts from 0 to prevent misleading comparison\nCall-outs with image and text aid recognition.\nRelevant title and lead-in verbiage provide context for readers\n\n\nReadable font, relevant to context of data\nInclusion of image, relevant to subject\nGood choice of color throughout\nSoft grid lines to prevent distraction\nElements are well aligned and spaced\n\n\n\n\n\n\n\nThe transaction data of REALIS is downloaded from URA to cover private residential property transactions from 1st January 2023 to 31st March 2024.\nKey fields include:\n\n\n\n\n\n\n\n\nColumn Header\nDescription\nValue Range\n\n\n\n\nSale Date\nDate of transaction\n1 Jan 23 - 31 Mar 24\n\n\nProperty Type\nProperty category related to build type\nExecutive Condo, Condo, Apartment, Terrace, Semi-Detached, Detached House\n\n\nTransacted Price\nPrice agreed between the purchaser and the vendor for property and land. It excludes stamp duties, agency fees, legal and other professional fees.\nSGD 440,000 to SGD 392,180,000\n\n\nUnit Price ($ PSF)\nCost of property per square feet (generally provided by developers)\nSGD 138 to SGD 5,756\n\n\n\n\n\n\n\n\nThe combined plot of (1) “Unit Price ($ PSF) across Property Types” and (2) “Transacted Price ($) across Property Types” aim to portray the narrative that “Higher Median Transaction Prices does not imply Higher Median Unit Price ($ PSF) due to other factors such as:\n\nType of property - not equitable to compare apple to oranges.\nDensity distribution of prices varies across property type.\n\n\n\n\n\n\n\n\nInsights derived from Take Home Assignment 1\n\n\n\nHere are some findings w.r.t PSFand Transaction Prices across all the Property Types:\n\nFinding1: Both the Interquartile Range (IQR) and density distribution is the narrowest for Executive Condominiums, closely followed by Apartments, Condominiums, Semi-Detached, and Terrace Houses. It is the widest for Detached Houses.\n\nWhat this means is that: The spread or variability of the PSF is the least for Executive Condominium, followed by Apartments, Condominiums, Semi-Detached, and Terrace Houses. In other words, the prices for these property types tend to cluster more closely around the median, as indicated by their smaller Interquartile Ranges (IQRs).On the other hand, Detached Houses have the largest IQR, indicating that the prices for Detached Houses are more spread out across a wider range. This means that there can be significant variability in prices for Detached Houses, with some properties priced much higher or lower than the median.\n\nFinding2: The Median is the lowest for Detached Houses, followed by Semi-Detached Houses, Executive Condominiums, and Terrace Houses. Condominiums and Apartments have the highest median PSF. However, upon comparing this with the distribution plot in Chart II, it becomes apparent that Property Types such as Apartments, Condominiums, and Executive Condominiums also generally have lower median Transacted Pricesdespite having higher PSF.\n\nWhat this means is that: Comparing PSF between dissimilar property types, such as a condo and a landed property, may not provide an accurate sense of value and affordability. When comparing properties for value, PSF is best used between two similar property type or better, within the same project or block.(Chong, 2020)\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo\nArea of Concern\nPotential confusion\n\n\n\n\n1\nMisaligned title of 2 separate charts of different font sizes\nPlot II on Transacted Price seems like a subplot of Plot I on Unit Price ($PSF) when the 2 plots should be equal comparable to convey the message of non-linear correlation.\n\n\n2\nPlot labels of “I” and “II” is not obvious with missing plot boundaries\nWith plot II’s label intersecting with plot I’s grid, it seems that both “I” and “II” are annotations on plot “I”, but does not contribute much meaningful insights as redundant labels.\n\n\n3\nMisaligned y axis makes it difficult to compare apple-to-apple for various Property Type.\nWith different plot size and un-level y-axis for Plot I and Plot II, viewers are subjected to transposition error when attempting to compare across Property Type.\n\n\n4\nSmall dot plot size makes visualising of raw data bins less meaningful as the position of dots seems to contribute to a similar linear line for “Apartment, Condo, Terrace”.\nThe purpose of rain cloud plots is to visualise raw data with dot plot, distribution of data with half-violin plot and key summary statistics with box-plot.\nHowever, key statistic annotations were not included on box plot, and the dot plot size is too tiny to see distribution of underlying data.\n\n\n5\nPlot II’s x-axis on Transacted Price ($) does not have values displayed.\nLack of labels on Transacted Price ($) x-axis for Plot II makes it difficult for viewers to understand the magnitude of the price distribution.\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nComparing Unit Price ($PSF) and Transacted Price ($) directly can be potentially misleading with unit size (Area (SQFT)) being another key influencing factor. For instance, while some detached houses have the lowest Unit ($PSF) it is not the most affordable due to its large unit sizes making total price much higher and less affordable.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo\nArea of Interest\nPotential turn-off\n\n\n\n\n1\nDifferent font size for Plot I and Plot II charts\nSub-title is a tongue twister and is over-generalised.\nSmaller title size of Plot II may lead to viewers de-priortizing it’s importance.\nReadability of subtitle can be improved such as including key statistics to capture reader’s attention and annotations to support the narrative of the disproportionate relationship between transacted price and unit price across property types.\n\n\n2\nPlot I’s color scheme is lacking contrast with grey plot with grey background\nWith grey plot on grey background, this gives the impression of a plain chart and does not capture viewer’s attention. Moreover, the characteristics of property type are not captured within the chart (e.g., High rise vs landed)\n\n\n3\nPlot II’s ridges are opaque (dark purple) and overlapping clusters at the left for most Property Type\nViewers are unable to identify the height of the sales distribution and with the density plot being based on each Property Type, the relative units sold is not included within the plot. (e.g., Apartment & Condo having much more sale than Terrace, but height is similar)\n\n\n4\nPlot I lack of grid lines to reference Unit Price ($PSF).\nWhile grid lines are enforced in Plot I’s underlying R code, the contrast is not obvious, especially for reference to Unit Price ($PSF) values that is of interest to viewers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOriginal Visualisation\nRecommendation\nReasoning\n\n\n\n\nX: Unit Price ($PSF)\nY: Property Type\nFlipping axis to X: Property Type and Y: Unit Price ($PSF).\nAlignment of 2 plots to similar size for comparison.\nAs property type is a categorical variable, placing it on x-axis enables easier comparison where viewers can scan across property types easily.\nMore importantly, “Unit Price ($PSF) is a continuous variable and y-axis enables easier scaling when combining 2 charts together.\n\n\nOrder of property type based on Alphabetical order from low to high\nRe-ordering property type axis variables for easier reference to comparables based on property type characteristics and arrange by median Unit Price ($PSF).\nIntroducing colors to group property of similar nature and making the chart more visually appealing.\nProperty types can be group into 2 clusters.\n\nHigh Rise Residential (EC, Condo, Apartment)\nLanded Properties (Terrace, Semi-D, Detached Houses)\n\nThis reordering helps viewers easily compare asset classes of similar nature, and reordering by median price makes it visually appealing to see the increase over asset class.\n\n\nGrid lines and color of background is not contrasting for viewers.\nInclude soft grid lines at Unit Price ($PSF) intervals to guide users when reading the Y-axis and enforce “0” line.\nAs the plot spreads across 6 property type, it is difficult to quickly identify the “Unit Price ($PSF) with viewer’s eyeballing. Grid lines will help guide more accurate.\n\n\n\n\n\n\n\n\n\n\nLoading relevant library and raw data file with read_csv.\nPre-processing of data to narrow scope of visualisation to Individual Purchases (No of Units Sold = 1) and Tenure of 99 years.\n\n\n\nCode\n# Loading packages\npacman::p_load(tidyverse,ggrepel, patchwork, hrbrthemes, forcats,ggdist, ggridges,\n               ggthemes,lubridate, knitr,ggiraph, plotly, gganimate, cowplot, grid, gridExtra)\n\n# Import data\nrealis_1 &lt;- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\nrealis_2 &lt;- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\nrealis_3 &lt;- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\nrealis_4 &lt;- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\nrealis_5 &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n\ncombined_data &lt;- rbind(realis_1, realis_2, realis_3, realis_4, realis_5)\n\n# Following the same data processing steps\n## Dropping records where Area (SQM) is not null\ncombined_data &lt;- combined_data %&gt;% \n                  filter(!is.na(`Area (SQM)`))\n\n## Converting sale date to date format\ncombined_data &lt;- combined_data %&gt;%\n  mutate(`Sale Date` = as.Date(`Sale Date`, format = \"%d %b %Y\"))\n\n## Removing duplicates - There are no dupicates. \nduplicates &lt;- combined_data[duplicated(combined_data$Address), ]\nfiltered_data &lt;- combined_data[combined_data$Address %in% duplicates$Address, ] \n\n## Including conditions to focus visualisation on individual sales and Tenure of 99 years. \n\n# Define the new labels for each category\n\ncombined_data = combined_data %&gt;%\n  mutate(`Property Type` = recode(`Property Type`, \n                        \"Apartment\" = \"Apartment\",\n                        \"Condominium\" = \"Condo\",\n                        \"Executive Condominium\" = \"Executive Condos\",\n                        \"Terrace House\" = \"Terrace\",\n                        \"Semi-Detached House\" = \"Semi- Detached\",\n                        \"Detached House\" = \"Detached\"))\n\n# Filter Conditions\nresale_data &lt;- combined_data %&gt;%\n  filter(`Number of Units` == 1)%&gt;%\n  filter(grepl(\"99 yrs\", Tenure, ignore.case = TRUE))\n\n\n\n\n\n\nAdding new category of prop_clust to label property type into “Landed” and “High Rise”.\nEnforcing factoring to reorder the Property Type to “Executive Condos”,“Apartment”, “Condo”, “Terrace”, “Semi- Detached”,“Detached”.\nIntroducing fixed color scheme of blue for “High Rise” and orange for “Landed”\n\nCalculating key statistics such as “Median” for subsequent annotation.\n\n\n\nCode\n## Segmenting into 2 clusters of property type and use facet_grid()\n\nresale_data &lt;- resale_data %&gt;% \n  mutate(prop_clust = case_when(\n  `Property Type` %in% c(\"Detached\", \"Semi- Detached\", \"Terrace\") ~ \"Landed\", \n  `Property Type` %in% c(\"Condo\", \"Apartment\", \"Executive Condos\") ~ \"High rise\"\n))\n\n## Introducing factors to reorder the records\nprop_order &lt;- c(\"Executive Condos\",\"Apartment\", \"Condo\", \"Terrace\", \"Semi- Detached\",\"Detached\")\n\nresale_data$`Property Type` &lt;- factor(resale_data$`Property Type`, levels = prop_order)\n\n\n\n## Introducing fill color to segment the different property types\nprop_col &lt;- c(\"Apartment\" = \"#CCE5FF\", \n              \"Executive Condos\" = \"#99FFFF\", \n              \"Condo\" = \"#99CCff\", \n              \"Terrace\" = \"#FFE5CC\", \n              \"Semi- Detached\" = \"#FFCC99\", \n              \"Detached\" = \"#FF9933\")\n\n\nmedian_prices &lt;- resale_data %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(Median_Price = median(`Unit Price ($ PSF)`))\n\n# Adjusting column header for kable display\nresale_data &lt;- resale_data %&gt;% \n  rename(\"Transacted_Price\" = \"Transacted Price ($)\") %&gt;% \n  rename(\"Area_SQFT\" = \"Area (SQFT)\") %&gt;%\n  rename(\"Unit_Price_PSF\" = \"Unit Price ($ PSF)\") %&gt;% \n  rename(\"Number_of_Units\" = \"Number of Units\") %&gt;% \n  rename(\"Project_Name\" = \"Project Name\")\n\n# Define the plot\nplot1 &lt;- ggplot(resale_data, aes(x = `Unit_Price_PSF`,\n                                 y = `Property Type`, \n                                 fill = `Property Type`)) +\n  geom_rect(\n    aes(ymin = 0.5, ymax = 3.475, xmin = 0, xmax = Inf), \n    fill = NA, color = \"#0080FF\", linewidth = 1, linetype = \"solid\") +\n  geom_rect(\n    aes(ymin = 3.525, ymax = 6.5, xmin = 0, xmax = Inf), \n    fill = NA, color = \"#FF8000\", linewidth = 1, linetype = \"solid\") + \n  # Color settings\n  scale_fill_manual(values = prop_col) +\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5)) +\n  \n  # Geometries\n  stat_halfeye(\n    adjust = 0.5, justification = -0.2, .width = 1, point_colour = NA) +\n  geom_boxplot(\n    width = 0.2, outlier.shape = NA) +\n  stat_dots(\n    side = \"left\", justification = 1.2, binwidth = 25, dotsize = 0.02) +\n  geom_text(data = median_prices, \n            aes(x = Median_Price, y = `Property Type`, \n                label = paste0(\"$\", Median_Price)),\n            hjust = -0.4, vjust = 0, size = 2) +\n   annotate(\"text\", x = Inf, y = 2, label = \"High Rise\", vjust = 1.5, fontface = \"bold\", color = \"#0080FF\", size = 3) +\n  annotate(\"text\", x = Inf, y = 5, label = \"Landed\", vjust = 1.5, fontface = \"bold\", color = \"#FF8000\", size = 3) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, NA)) +\n  \n  # Coordinate and theme settings\n  coord_flip() +\n  theme_ipsum(axis_title_size = 10, base_size = 7, grid = \"Y\") +\n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 10, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8),\n        axis.title.y = element_text(hjust = 0.5),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank(), \n        legend.position = \"top\", \n        legend.justification = \"center\", \n        legend.direction = \"horizontal\", \n        ) +\n  guides(fill = guide_legend(nrow = 1)) +\n  \n  # Labels and annotations\n  labs(x = \"Unit Price ($ PSF)\", y = NULL,\n       title = \"Distribution of Unit Price ($ PSF) across Property Types\") \n\n# Display the plot\nplot1\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Plotting for high rise\nhigh_rise_1 &lt;- subset(resale_data,  resale_data$`prop_clust` == \"High rise\")\nlanded_1 &lt;- subset(resale_data,  resale_data$`prop_clust` == \"Landed\")\n\n# Recalculating median price for hr\nmedian_prices_hr &lt;- high_rise_1 %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(Median_Price = median(`Unit_Price_PSF`))\n\n# Plot for high rise only\nplot1a &lt;- plot1 &lt;- ggplot(high_rise_1, aes(x = `Unit_Price_PSF`,\n                                 y = `Property Type`, \n                                 fill = `Property Type`)) +\n  # Color settings\n  scale_fill_manual(values = prop_col) +\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5)) +\n  \n  # Geometries\n  stat_halfeye(\n    adjust = 0.5, justification = -0.2, .width = 1, point_colour = NA) +\n  geom_boxplot(\n    width = 0.2, outlier.shape = NA) +\n  stat_dots(\n    side = \"left\", justification = 1.2, binwidth = 25, dotsize = 0.02) +\n  geom_text(data = median_prices_hr, \n            aes(x = Median_Price, y = `Property Type`, \n                label = paste0(\"$\", Median_Price)),\n            hjust = -0.8 , vjust = 0, size = 2) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, NA)) +\n  \n  # Coordinate and theme settings\n  coord_flip() +\n  theme_ipsum(base_size = 7, grid = \"Y\")+ \n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 12, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank(), \n        legend.position = \"top\", \n        legend.justification = \"center\", \n        legend.direction = \"horizontal\"\n       ) +\n  guides(fill = guide_legend(nrow = 1)) +\n  \n  # Labels and annotations\n  labs(x = \"Unit Price ($ PSF)\", y = NULL,\n       title = \"Unit Price Distribution\") \n\n# Display the plot\n#plot1a\n\n# Recalculating median price for hr\nmedian_prices_l &lt;- landed_1 %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(Median_Price = median(`Unit_Price_PSF`))\n\n\n# Plot for landed only\nplot1b &lt;- ggplot(landed_1, aes(x = `Unit_Price_PSF`,\n                                 y = `Property Type`, \n                                 fill = `Property Type`)) +\n  # Color settings\n  scale_fill_manual(values = prop_col) +\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5)) +\n  \n  # Geometries\n  stat_halfeye(\n    adjust = 0.5, justification = -0.2, .width = 1, point_colour = NA) +\n  geom_boxplot(\n    width = 0.2, outlier.shape = NA) +\n  stat_dots(\n    side = \"left\", justification = 1.2, binwidth = 25, dotsize = 0.02) +\n  geom_text(data = median_prices_l, \n            aes(x = Median_Price, y = `Property Type`, \n                label = paste0(\"$\", Median_Price)),\n            hjust = -0.8 , vjust = 0, size = 2) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, NA)) +\n  \n  # Coordinate and theme settings\n  coord_flip() +\n  theme_ipsum(base_size = 7, grid = \"Y\")+ \n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 12, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank(), \n        legend.position = \"top\", \n        legend.justification = \"center\", \n        legend.direction = \"horizontal\"\n       ) +\n  guides(fill = guide_legend(nrow = 1)) +\n  \n  # Labels and annotations\n  labs(x = \"Unit Price ($ PSF)\", y = NULL,\n       title = \"Unit Price Distribution\") \n\n# Display the plot\n#plot1b\n\n\n\n\n\n\nUnderstanding the key statistics for the 2 property cluster of “High Rise” and “Landed”.\n\n\n\n\nHigh Rise\nTransacted_Price\nArea_SQFT\nUnit_Price_PSF\n\n\n\n\nMin\n$440,000\n355.2\n$286\n\n\nQ1 (25%)\n$1,231,120\n710.4\n$1,343\n\n\nMedian\n$1,514,000\n968.8\n$1,676\n\n\nMean\n$1,711,129\n999.3\n$1,767\n\n\nQ3 (75%)\n$1,954,320\n1205.6\n$2,150\n\n\nMax\n$18,800,000\n8697.3\n$4,504\n\n\n\n\n\n\nLanded\nTransacted_Price\nArea_SQFT\nUnit_Price_PSF\n\n\n\n\nMin\n$780,000\n1,344\n$252\n\n\nQ1 (25%)\n$2,575,000\n1,778\n$1,027\n\n\nMedian\n$3,569,000\n2,580\n$1,389\n\n\nMean\n$4,098,191\n2,942\n$1,470\n\n\nQ3 (75%)\n$4,280,000\n3,577\n$1,814\n\n\nMax\n$36,500,000\n29,202\n$4,456\n\n\n\n\nPlotting ridge plot for the “High Rise” and “Landed” with the color codes by quantile.\nLimiting the range of `Transacted Price ($)` to visualise the majority of the data points. This is justified as the outliers form a statistically small proportion and is removed for better representation of distribution.\n\n\n\n\n\n\n\n\n\n\nProperty Cluster\nProperty Type\nRange of Transacted Price\nPoints Excluded\n\n\n\n\nHigh Rise\nEC, Apartment, Condo\n$ 0 - $ 4.5 Mil\n202 out of 18,329 records\n(Approx 1.10%)\n\n\nLanded\nTerrace, Semi-Detached, Detached\n$ 0 - $ 30 Mil\n1 out of 700 records\n(Approx 0.14%)\n\n\n\n\n\nCode\n# Creating subset to draw 2 ridges\n\nhigh_rise &lt;- subset(resale_data,  resale_data$`prop_clust` == \"High rise\")\nlanded &lt;- subset(resale_data,  resale_data$`prop_clust` == \"Landed\")\n\n# Summary \n#kable(summary(landed[,c(\"Transacted_Price\", \"Area_SQFT\", \"Unit_Price_PSF\", #\"Number_of_Units\")]))\n#kable(summary(high_rise[,c(\"Transacted_Price\", \"Area_SQFT\", \"Unit_Price_PSF\", #\"Number_of_Units\")]))\n\n# Creating Annotation\nmedian_Sprices &lt;- high_rise %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(Median_Price = median(`Transacted_Price`))\n\nmedian_S2prices &lt;- landed %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(Median_Price = median(`Transacted_Price`))\n\n#assigning color to quantile\nquan_col &lt;- c(\"Executive Condos.0.25\" = \"#DAFFFF\", \n              \"Executive Condos.0.5\" = \"#BBFFFF\", \n              \"Executive Condos.0.75\" = \"#99FFFF\",\n              \"Apartment.0.25\" = \"#E5F2FF\", \n              \"Apartment.0.5\" = \"#CCE5FF\",\n              \"Apartment.0.75\" = \"#C0DEFF\",\n              \"Condos.0.25\" = \"#99CCFF\", \n              \"Condos.0.5\" = \"#83C1FF\", \n              \"Condos.0.75\" = \"#66B2FF\")\n\n#\nplot2a &lt;- ggplot(high_rise, aes(x = `Transacted_Price`,\n                                 y = `Property Type`\n                                )) +\n  stat_density_ridges(aes(fill = stat(quantile)), \n    quantile_lines = FALSE,\n                      calc_ecdf = TRUE, geom = \"density_ridges_gradient\", \n                      height = 1 , color = NA, position = position_dodge(0.5), alpha = 0.5) +\n  \n  scale_fill_brewer()  +\n  \n  # Color settings\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5), expand = expansion(add = 0.1)) +\n  \n  # Geometries\n  geom_boxplot(\n    width = 0.15, outlier.shape = NA) +\n  stat_dots(\n    side = \"left\", justification = 1.1, binwidth = 50000, dotsize = 0.01) +\n  geom_text(data = median_Sprices, \n            aes(x = Median_Price, y = `Property Type`, \n                label = paste0(\"$\", Median_Price/1000, \"k\")),\n            hjust = -0.5, vjust = 0, size = 2) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, 4500000)) +\n  \n  # Coordinate and theme settings\n  coord_flip() +\n  theme_ipsum(base_size = 7, grid = \"Y\") +\n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 12, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank(), \n        legend.position = \"top\", \n        legend.justification = \"right\") +\n  \n  # Labels and annotations\n  labs(title = \"Transacted Price Distribution\", x = \"Transacted Price ($)\", y = NULL) \n\n# Display the plot\n# plot2a\n\n# Plotting for landed property only\nplot2b &lt;- ggplot(landed, aes(x = `Transacted_Price`,\n                                 y = `Property Type`\n                                )) +\n  stat_density_ridges(aes(fill = stat(quantile)), \n    quantile_lines = FALSE,\n                      calc_ecdf = TRUE, geom = \"density_ridges_gradient\", \n                      height = 1 , color = NA, position = position_dodge(0.5), alpha = 0.5) +\n  \n  scale_fill_brewer(palette = \"Oranges\")  +\n  \n  # Color settings\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5), expand = expansion(add = 0.1)) +\n  \n  # Geometries\n  geom_boxplot(\n    width = 0.15, outlier.shape = NA) +\n  stat_dots(\n    side = \"left\", justification = 1.1, binwidth = 100000, dotsize = 0.01) +\n  geom_text(data = median_S2prices, \n            aes(x = Median_Price, y = `Property Type`, \n                label = paste0(\"$\", Median_Price/1000, \"k\")),\n            hjust = -0.5, vjust = 0, size = 2) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, 30000000)) +\n  \n  # Coordinate and theme settings\n  coord_flip() +\n  theme_ipsum(base_size = 7, grid = \"Y\") +\n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 12, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank(), \n        legend.position = \"top\", \n        legend.justification = \"right\") +\n  \n  # Labels and annotations\n  labs(x = \"Transacted Price ($)\", y = NULL, title = \"Transacted Price Distribution\") \n\n# Display the plot\n#plot2b\n\n\n\n\n\n\n\n\nFuture Improvements\n\n\n\n\n1 dot = 10 units to minimise number of dots\nAttempt to recolor the respective quantiles with the following r code, but unable to relabel the colors for the respective property type.\n\n\nCode\nquan_col &lt;- c(\"Executive Condos.0.25\" = \"#DAFFFF\", \n              \"Executive Condos.0.5\" = \"#BBFFFF\", \n              \"Executive Condos.0.75\" = \"#99FFFF\",\n              \"Apartment.0.25\" = \"#E5F2FF\", \n              \"Apartment.0.5\" = \"#CCE5FF\",\n              \"Apartment.0.75\" = \"#C0DEFF\",\n              \"Condos.0.25\" = \"#99CCFF\", \n              \"Condos.0.5\" = \"#83C1FF\", \n              \"Condos.0.75\" = \"#66B2FF\")\n\n\nAttempt to minimize overlap for ggridges by:\n\nAdjusting height through stat_density_ridges(height = 0.5)\nIntroducing transparency with stat_density_ridges(alpha = 0.5)\nIncluding space between y-axis scale_y_discrete(expand = expansion(add = 0.1))\n\n\n\n\n\n\n\nFor High Rise building,\n\n\nCode\nhr_plot &lt;- grid.arrange(plot1a, plot2a, ncol = 2) \ngrid.rect(x = 0.5, y = 0.5, width = 1, height = 1, just = c(\"center\", \"center\"), \n         gp = gpar(col = \"#0080FF\", fill = NA, lwd = 2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights from High Rise (Unit Price $PSF vs Transacted Price $)\n\n\n\n\nWe observed that “Apartment” typically has the highest price for both Unit Price ($PSF) and Transacted Price ($), followed by “Condo” and lastly “Executive Condos”.\nWhile the unit price of Executive Condo and Apartment is denser on the higher spectrums, the transacted price of these units are\nWith Transacted Price ($) generally being the function of Unit Price ($PSF) and Area (SQFT) for new launches, working backwards, we can infer that “Apartment” are likely to have smaller unit sizes. (Rough estimation below, further visualization with Area (SQFT) is needed to validate this assumption as figures may be distorted with inflation from resale units)\n\n\n\n\n\n\n\n\n\n\nHigh Rise Type\nMedian Transacted Price ($)\nMedian Unit Price ($PSF)\nEstimated Area (SQFT)\n\n\n\n\nExecutive Condos\n$1,400,000\n$1,326\n1,055\n\n\nApartment\n$1,676,855\n$2,120.50\n790\n\n\nCondo\n$1520,000\n$1,631\n932\n\n\n\n\n\nFor Landed properties,\n\n\nCode\nl_plot &lt;- grid.arrange(plot1b, plot2b, ncol = 2) \ngrid.rect(x = 0.5, y = 0.5, width = 1, height = 1, just = c(\"center\", \"center\"), \n         gp = gpar(col = \"#FF8000\", fill = NA, lwd = 2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights from Landed Properties (Unit Price $PSF vs Transacted Price $)\n\n\n\n\nInterestingly, the unit price of “Terrace” is the highest at $1,416 psf, followed by “Semi-Detached” at $1,263 psf and lastly, “Detached” of lowest at $1,067 psf.\nNevertheless, aligned with common perception, the Transacted Price ($) for “Detached” is the highest, with 75% approximately $14 million, and median price of $ 6.3 million. This is largely attributed to unit size (Area (SQFT)) not included in this visualisation.\n\n\n\n\n\n\nTo understand the relationship between Unit Price ($PSF) and Transacted Price ($), the most direct method is to use a scatter plot to identify any correlation. However, extremely high Transacted Price ($) due to exceptional purchases makes the visualisation skewed and majority of the Unit Price ($PSF) and Transacted Price ($) are clustered near the median.\nHence, ranking the transaction by percentile will evenly distribute the points within the scatter plot and identify any patterns.\n\n\n\nWith Tableau, we plotted a scatter chart and a combined interactive view\n\n\n\n\n\nIntroducing trend line to show the correlation between Unit Price ($PSF) and Transacted Price ($).\nIntroducing separate views for each property type to de-clutter the scatter plot with ggplotly.\nIntroducing interactivity such that the viewer can either:\n(a) Select price range of interest and see the list of past projects with ggiraph\n(b) Select project of interest by filtering to see the price range of this project. (Test out in the sketch done in Tableau)\n\n\n\n\nTo minimise clutter, ggplotly is used to display different views based on the respective property types.\n\n\nCode\n# Processing data\npct &lt;- resale_data %&gt;%\n  mutate(\n    Tx_Percentile = percent_rank(Transacted_Price),\n    PSF_Percentile = percent_rank(Unit_Price_PSF)\n  )\n\n## plot to see across different property\nplot6 &lt;- ggplot(data = pct,\n                aes(x = PSF_Percentile, \n                    y = Tx_Percentile, \n                    colour = `Property Type`)) +\n  scale_color_manual(values = prop_col) +\n  labs(title = \"Correlation Plot\", \n       x = \"Percentile PSF\", \n       y = \"Percentile Transacted Price\") + \n  geom_point(aes(frame = `Property Type`)\n             , alpha = 0.5) + \n   scale_x_continuous(labels = scales::percent_format(scale = 100), \n                      limits = c(0, 1)) +\n  scale_y_continuous(labels = scales::percent_format(scale = 100), \n                     limits = c(0, 1)) + \n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 12, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        panel.background = element_rect(fill = \"#ffffff\"), \n        panel.grid.major = element_line(color = \"grey80\", size = 0.5), \n    panel.grid.major.x = element_line(color = \"grey80\", size = 0.5), \n    panel.grid.major.y = element_line(color = \"grey80\", size = 0.5))\n  \n\nggplotly(plot6)\n\n\n\n\n\n\n\n\n\nTo illustrate interactivity across plot, we will be focusing on “Apartment” and other property type results can be illustrated by repeating the set of codes. The steps taken include:\n\nIntroduce tooltip of Project Name, Transacted Price ($) and Unit Price ($PSF) into the respective dots by hovering above certain point of interest.\nIntroduce data_id to highlight the data points belonging to the same Project Name to see the range of Transacted Price ($) and Unit Price ($PSF)\nIntroduce best fit line with geom_smooth to identify the overall trend between Transacted Price ($) and Unit Price ($PSF)\nCombining with violin-plot and box–plot of Transacted Price ($) and Unit Price ($PSF) to visualise the relative distribution and position of this sale.\n\n\n\nCode\n# Split by subset and add interactive feature to identify project name\n\npct_apt &lt;- subset(pct, pct$`Property Type` == \"Apartment\")\npct_c &lt;- subset(pct, pct$`Property Type` == \"Condo\")\npct_ec &lt;- subset(pct, pct$`Property Type` == \"Executive Condos\")\npct_t &lt;- subset(pct, pct$`Property Type` == \"Terrace\")\npct_sd &lt;- subset(pct, pct$`Property Type` == \"Semi- Detached\")\npct_d &lt;- subset(pct, pct$`Property Type` == \"Detached\")\n\n# Defining Tooltip\npct_apt$tooltip &lt;- c(paste0(\"Project: \", pct_apt$Project_Name, \n                            \"\\n Tx Price: $ \", pct_apt$Transacted_Price, \n                            \"\\n Unit Price: $ \", pct_apt$Unit_Price_PSF))\n\n# Formatting to resolve error\npct_apt$Project_Name &lt;- gsub(\"'\", \"\", pct_apt$Project_Name)\n\n# Plotting interactive plot\nplot_apt_int &lt;- ggplot(data = pct_apt,\n                aes(x = PSF_Percentile, \n                    y = Tx_Percentile, \n                    colour = `Property Type`)) +\n  scale_color_manual(values = prop_col) +\n  labs(title = \"Correlation Plot\", \n       x = \"Percentile PSF\", \n       y = \"Percentile Transacted Price\") + \n   geom_point_interactive(aes(\n     tooltip = pct_apt$tooltip , \n     data_id = pct_apt$Project_Name), \n     alpha = 0.7) + \n  geom_smooth(method = \"lm\",   \n              se = TRUE, level = 0.95, color = \"black\", linewidth = 0.1, fill = \"#6f6f6f\") + \n  scale_x_continuous(\n    labels = scales::percent_format(accuracy = 1), breaks = seq(0, 1, by = 0.25)) +\n  scale_y_continuous(\n    labels = scales::percent_format(accuracy = 1), breaks = seq(0, 1, by = 0.25)) + theme(legend.position = \"none\")\n\napt_interactive &lt;- girafe(\n  ggobj = plot_apt_int,                             \n  width_svg = 6,                         \n  height_svg = 6 * 0.618,\n  options = list(                        \n    opts_hover(css = \"fill:#202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  ))\n\napt_interactive\n\n\n\n\n\n\n\n\nCode\n# Violin plot for unit price\nvplot1_apt &lt;- ggplot(data = pct_apt, aes(x = `Unit_Price_PSF`,\n                                 y = `Property Type`)) +\n  geom_jitter_interactive(width = 0.2, \n                          color = \"#004c99\", size = 0.3, alpha = 0.2, \n                          aes(data_id = pct_apt$Project_Name, \n                              tooltip = pct_apt$tooltip)) +\n  geom_violin(fill = \"#CCE5FF\", width = 0.3, alpha = 0.7) + \n  geom_boxplot(width = 0.1, fill = \"white\", alpha = 0.7) + \n  labs(title = \"Violin Plot\", x = \"Unit Price (PSF)\", y = \"Property Type\")\n\n#vplot1_apt\n\n# Violin plot for transacted price\nvplot2_apt &lt;- ggplot(data = pct_apt, aes(x = `Transacted_Price`,\n                                 y = `Property Type`)) +\n  geom_jitter_interactive(width = 0.2, \n                          color = \"#004c99\", size = 0.3, alpha = 0.2, \n                          aes(data_id = pct_apt$Project_Name, \n                              tooltip = pct_apt$tooltip)) +\n  geom_violin(fill = \"#CCE5FF\", width = 0.3, alpha = 0.7) + \n  geom_boxplot(width = 0.1, fill = \"white\", alpha = 0.7) + \n  labs(title = \"Violin Plot\", x = \"Transacted Price\", y = \"Property Type\") + \n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, 4500000)) + coord_flip()\n\n#vplot2_apt\n\n# Combining into single view \nlayout &lt;- c(\n  area(t=1, l=1, b=8, r=5),\n  area(t=1, l=1, b=2, r=8), \n  area(t=3, l=6, b=8, r=8)\n)\n\ncombined_plot &lt;- girafe(code = print((plot_apt_int + vplot1_apt + vplot2_apt + plot_layout(design = layout))), \n       width_svg = 10,\n       height_svg = 10,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\ncombined_plot\n\n\n\n\n\n\n\n\n\nDuring the assignment, the option of combining 3 existing plots was considered. However, looking at the combined plot below, too much information with the rainbow plot makes the information presented to the user less comprehensible.\nHence, to simplify, a violin plot was opted with the individual data points reflected in the background to increase the scale of the complementary 2 plots with the main scatter plot in percentile terms.\n\n\nCode\nplot1_apt &lt;- ggplot(pct_apt, aes(x = `Unit_Price_PSF`,\n                                 y = `Property Type`, \n                                 fill = `Property Type`)) +\n  # Color settings\n  scale_fill_manual(values = prop_col) +\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5)) +\n  \n  # Geometries\n  stat_halfeye(\n    adjust = 0.5, justification = -0.2, .width = 1, point_colour = NA) +\n  geom_boxplot_interactive(\n    width = 0.2, outlier.shape = NA, aes(data_id = pct_apt$Project_Name)) +\n  stat_dots(\n    side = \"left\", justification = 1.2, binwidth = 25, dotsize = 0.02) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, NA)) +\n  \n  # Coordinate and theme settings\n  theme_ipsum(axis_title_size = 10, base_size = 7, grid = \"Y\") +\n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 10, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8),\n        axis.title.y = element_text(hjust = 0.5),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank()) +\n  \n  # Labels and annotations\n  labs(x = \"Unit Price ($ PSF)\", y = NULL,\n       title = \"Distribution of Unit Price ($ PSF) across Property Types\",\n       subtitle = \"Higher Median Transaction Prices do not necessarily imply Higher Median Unit Price ($ PSF)\", size = 5) \n\n\nplot2_apt &lt;- ggplot(pct_apt, aes(x = `Transacted_Price`,\n                                 y = `Property Type`, \n                                 fill = `Property Type`)) +\n  # Color settings\n  scale_fill_manual(values = prop_col) +\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5)) +\n  \n  # Geometries\n  stat_halfeye(\n    adjust = 0.5, justification = -0.2, .width = 1, point_colour = NA) +\n  geom_boxplot_interactive(aes(data_id = pct_apt$Project_Name), \n    width = 0.2, outlier.shape = NA) +\n  stat_dots(\n    side = \"left\", justification = 1.2, binwidth = 25, dotsize = 0.02) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, 4500000)) +\n  \n  \n  # Coordinate and theme settings\n  coord_flip() +\n  theme_ipsum(axis_title_size = 10, base_size = 7, grid = \"Y\") +\n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 10, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8),\n        axis.title.y = element_text(hjust = 0.5),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank()) +\n  \n  # Labels and annotations\n  labs(x = \"Transacted Price ($)\", y = NULL,\n       title = \"Distribution of Unit Price ($ PSF) across Property Types\", size = 5) \n\n#plot2_apt\n\n#Recording attempt to combine, but ultimately sticking to simplicity to tell the story\n\ntest_1 &lt;- girafe(code = print((plot_apt_int + plot1_apt + plot2_apt + plot_layout(design = layout))), \n       width_svg = 10,\n       height_svg = 10,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\ntest_1"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#objective",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#objective",
    "title": "Take-home Exercise 1 Part 2",
    "section": "",
    "text": "This exercise seeks to improve the original visualisation with reference to Ben Jones’ article “A Tale of Four Quadrants”."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#key-elements-for-a-good-piece-of-visualisation",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#key-elements-for-a-good-piece-of-visualisation",
    "title": "Take-home Exercise 1 Part 2",
    "section": "",
    "text": "Clarity\nAesthetics\n\n\n\n\n\n2D columns facilitates easy gauge.\nY axis starts from 0 to prevent misleading comparison\nCall-outs with image and text aid recognition.\nRelevant title and lead-in verbiage provide context for readers\n\n\nReadable font, relevant to context of data\nInclusion of image, relevant to subject\nGood choice of color throughout\nSoft grid lines to prevent distraction\nElements are well aligned and spaced"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#recap-of-initial-data-set",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#recap-of-initial-data-set",
    "title": "Take-home Exercise 1 Part 2",
    "section": "",
    "text": "The transaction data of REALIS is downloaded from URA to cover private residential property transactions from 1st January 2023 to 31st March 2024.\nKey fields include:\n\n\n\n\n\n\n\n\nColumn Header\nDescription\nValue Range\n\n\n\n\nSale Date\nDate of transaction\n1 Jan 23 - 31 Mar 24\n\n\nProperty Type\nProperty category related to build type\nExecutive Condo, Condo, Apartment, Terrace, Semi-Detached, Detached House\n\n\nTransacted Price\nPrice agreed between the purchaser and the vendor for property and land. It excludes stamp duties, agency fees, legal and other professional fees.\nSGD 440,000 to SGD 392,180,000\n\n\nUnit Price ($ PSF)\nCost of property per square feet (generally provided by developers)\nSGD 138 to SGD 5,756"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualisation-selected-for-make-over",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualisation-selected-for-make-over",
    "title": "Take-home Exercise 1 Part 2",
    "section": "",
    "text": "The combined plot of (1) “Unit Price ($ PSF) across Property Types” and (2) “Transacted Price ($) across Property Types” aim to portray the narrative that “Higher Median Transaction Prices does not imply Higher Median Unit Price ($ PSF) due to other factors such as:\n\nType of property - not equitable to compare apple to oranges.\nDensity distribution of prices varies across property type.\n\n\n\n\n\n\n\n\nInsights derived from Take Home Assignment 1\n\n\n\nHere are some findings w.r.t PSFand Transaction Prices across all the Property Types:\n\nFinding1: Both the Interquartile Range (IQR) and density distribution is the narrowest for Executive Condominiums, closely followed by Apartments, Condominiums, Semi-Detached, and Terrace Houses. It is the widest for Detached Houses.\n\nWhat this means is that: The spread or variability of the PSF is the least for Executive Condominium, followed by Apartments, Condominiums, Semi-Detached, and Terrace Houses. In other words, the prices for these property types tend to cluster more closely around the median, as indicated by their smaller Interquartile Ranges (IQRs).On the other hand, Detached Houses have the largest IQR, indicating that the prices for Detached Houses are more spread out across a wider range. This means that there can be significant variability in prices for Detached Houses, with some properties priced much higher or lower than the median.\n\nFinding2: The Median is the lowest for Detached Houses, followed by Semi-Detached Houses, Executive Condominiums, and Terrace Houses. Condominiums and Apartments have the highest median PSF. However, upon comparing this with the distribution plot in Chart II, it becomes apparent that Property Types such as Apartments, Condominiums, and Executive Condominiums also generally have lower median Transacted Pricesdespite having higher PSF.\n\nWhat this means is that: Comparing PSF between dissimilar property types, such as a condo and a landed property, may not provide an accurate sense of value and affordability. When comparing properties for value, PSF is best used between two similar property type or better, within the same project or block.(Chong, 2020)\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo\nArea of Concern\nPotential confusion\n\n\n\n\n1\nMisaligned title of 2 separate charts of different font sizes\nPlot II on Transacted Price seems like a subplot of Plot I on Unit Price ($PSF) when the 2 plots should be equal comparable to convey the message of non-linear correlation.\n\n\n2\nPlot labels of “I” and “II” is not obvious with missing plot boundaries\nWith plot II’s label intersecting with plot I’s grid, it seems that both “I” and “II” are annotations on plot “I”, but does not contribute much meaningful insights as redundant labels.\n\n\n3\nMisaligned y axis makes it difficult to compare apple-to-apple for various Property Type.\nWith different plot size and un-level y-axis for Plot I and Plot II, viewers are subjected to transposition error when attempting to compare across Property Type.\n\n\n4\nSmall dot plot size makes visualising of raw data bins less meaningful as the position of dots seems to contribute to a similar linear line for “Apartment, Condo, Terrace”.\nThe purpose of rain cloud plots is to visualise raw data with dot plot, distribution of data with half-violin plot and key summary statistics with box-plot.\nHowever, key statistic annotations were not included on box plot, and the dot plot size is too tiny to see distribution of underlying data.\n\n\n5\nPlot II’s x-axis on Transacted Price ($) does not have values displayed.\nLack of labels on Transacted Price ($) x-axis for Plot II makes it difficult for viewers to understand the magnitude of the price distribution.\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nComparing Unit Price ($PSF) and Transacted Price ($) directly can be potentially misleading with unit size (Area (SQFT)) being another key influencing factor. For instance, while some detached houses have the lowest Unit ($PSF) it is not the most affordable due to its large unit sizes making total price much higher and less affordable.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo\nArea of Interest\nPotential turn-off\n\n\n\n\n1\nDifferent font size for Plot I and Plot II charts\nSub-title is a tongue twister and is over-generalised.\nSmaller title size of Plot II may lead to viewers de-priortizing it’s importance.\nReadability of subtitle can be improved such as including key statistics to capture reader’s attention and annotations to support the narrative of the disproportionate relationship between transacted price and unit price across property types.\n\n\n2\nPlot I’s color scheme is lacking contrast with grey plot with grey background\nWith grey plot on grey background, this gives the impression of a plain chart and does not capture viewer’s attention. Moreover, the characteristics of property type are not captured within the chart (e.g., High rise vs landed)\n\n\n3\nPlot II’s ridges are opaque (dark purple) and overlapping clusters at the left for most Property Type\nViewers are unable to identify the height of the sales distribution and with the density plot being based on each Property Type, the relative units sold is not included within the plot. (e.g., Apartment & Condo having much more sale than Terrace, but height is similar)\n\n\n4\nPlot I lack of grid lines to reference Unit Price ($PSF).\nWhile grid lines are enforced in Plot I’s underlying R code, the contrast is not obvious, especially for reference to Unit Price ($PSF) values that is of interest to viewers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOriginal Visualisation\nRecommendation\nReasoning\n\n\n\n\nX: Unit Price ($PSF)\nY: Property Type\nFlipping axis to X: Property Type and Y: Unit Price ($PSF).\nAlignment of 2 plots to similar size for comparison.\nAs property type is a categorical variable, placing it on x-axis enables easier comparison where viewers can scan across property types easily.\nMore importantly, “Unit Price ($PSF) is a continuous variable and y-axis enables easier scaling when combining 2 charts together.\n\n\nOrder of property type based on Alphabetical order from low to high\nRe-ordering property type axis variables for easier reference to comparables based on property type characteristics and arrange by median Unit Price ($PSF).\nIntroducing colors to group property of similar nature and making the chart more visually appealing.\nProperty types can be group into 2 clusters.\n\nHigh Rise Residential (EC, Condo, Apartment)\nLanded Properties (Terrace, Semi-D, Detached Houses)\n\nThis reordering helps viewers easily compare asset classes of similar nature, and reordering by median price makes it visually appealing to see the increase over asset class.\n\n\nGrid lines and color of background is not contrasting for viewers.\nInclude soft grid lines at Unit Price ($PSF) intervals to guide users when reading the Y-axis and enforce “0” line.\nAs the plot spreads across 6 property type, it is difficult to quickly identify the “Unit Price ($PSF) with viewer’s eyeballing. Grid lines will help guide more accurate."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#revamping",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#revamping",
    "title": "Take-home Exercise 1 Part 2",
    "section": "",
    "text": "Loading relevant library and raw data file with read_csv.\nPre-processing of data to narrow scope of visualisation to Individual Purchases (No of Units Sold = 1) and Tenure of 99 years.\n\n\n\nCode\n# Loading packages\npacman::p_load(tidyverse,ggrepel, patchwork, hrbrthemes, forcats,ggdist, ggridges,\n               ggthemes,lubridate, knitr,ggiraph, plotly, gganimate, cowplot, grid, gridExtra)\n\n# Import data\nrealis_1 &lt;- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\nrealis_2 &lt;- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\nrealis_3 &lt;- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\nrealis_4 &lt;- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\nrealis_5 &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n\ncombined_data &lt;- rbind(realis_1, realis_2, realis_3, realis_4, realis_5)\n\n# Following the same data processing steps\n## Dropping records where Area (SQM) is not null\ncombined_data &lt;- combined_data %&gt;% \n                  filter(!is.na(`Area (SQM)`))\n\n## Converting sale date to date format\ncombined_data &lt;- combined_data %&gt;%\n  mutate(`Sale Date` = as.Date(`Sale Date`, format = \"%d %b %Y\"))\n\n## Removing duplicates - There are no dupicates. \nduplicates &lt;- combined_data[duplicated(combined_data$Address), ]\nfiltered_data &lt;- combined_data[combined_data$Address %in% duplicates$Address, ] \n\n## Including conditions to focus visualisation on individual sales and Tenure of 99 years. \n\n# Define the new labels for each category\n\ncombined_data = combined_data %&gt;%\n  mutate(`Property Type` = recode(`Property Type`, \n                        \"Apartment\" = \"Apartment\",\n                        \"Condominium\" = \"Condo\",\n                        \"Executive Condominium\" = \"Executive Condos\",\n                        \"Terrace House\" = \"Terrace\",\n                        \"Semi-Detached House\" = \"Semi- Detached\",\n                        \"Detached House\" = \"Detached\"))\n\n# Filter Conditions\nresale_data &lt;- combined_data %&gt;%\n  filter(`Number of Units` == 1)%&gt;%\n  filter(grepl(\"99 yrs\", Tenure, ignore.case = TRUE))\n\n\n\n\n\n\nAdding new category of prop_clust to label property type into “Landed” and “High Rise”.\nEnforcing factoring to reorder the Property Type to “Executive Condos”,“Apartment”, “Condo”, “Terrace”, “Semi- Detached”,“Detached”.\nIntroducing fixed color scheme of blue for “High Rise” and orange for “Landed”\n\nCalculating key statistics such as “Median” for subsequent annotation.\n\n\n\nCode\n## Segmenting into 2 clusters of property type and use facet_grid()\n\nresale_data &lt;- resale_data %&gt;% \n  mutate(prop_clust = case_when(\n  `Property Type` %in% c(\"Detached\", \"Semi- Detached\", \"Terrace\") ~ \"Landed\", \n  `Property Type` %in% c(\"Condo\", \"Apartment\", \"Executive Condos\") ~ \"High rise\"\n))\n\n## Introducing factors to reorder the records\nprop_order &lt;- c(\"Executive Condos\",\"Apartment\", \"Condo\", \"Terrace\", \"Semi- Detached\",\"Detached\")\n\nresale_data$`Property Type` &lt;- factor(resale_data$`Property Type`, levels = prop_order)\n\n\n\n## Introducing fill color to segment the different property types\nprop_col &lt;- c(\"Apartment\" = \"#CCE5FF\", \n              \"Executive Condos\" = \"#99FFFF\", \n              \"Condo\" = \"#99CCff\", \n              \"Terrace\" = \"#FFE5CC\", \n              \"Semi- Detached\" = \"#FFCC99\", \n              \"Detached\" = \"#FF9933\")\n\n\nmedian_prices &lt;- resale_data %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(Median_Price = median(`Unit Price ($ PSF)`))\n\n# Adjusting column header for kable display\nresale_data &lt;- resale_data %&gt;% \n  rename(\"Transacted_Price\" = \"Transacted Price ($)\") %&gt;% \n  rename(\"Area_SQFT\" = \"Area (SQFT)\") %&gt;%\n  rename(\"Unit_Price_PSF\" = \"Unit Price ($ PSF)\") %&gt;% \n  rename(\"Number_of_Units\" = \"Number of Units\") %&gt;% \n  rename(\"Project_Name\" = \"Project Name\")\n\n# Define the plot\nplot1 &lt;- ggplot(resale_data, aes(x = `Unit_Price_PSF`,\n                                 y = `Property Type`, \n                                 fill = `Property Type`)) +\n  geom_rect(\n    aes(ymin = 0.5, ymax = 3.475, xmin = 0, xmax = Inf), \n    fill = NA, color = \"#0080FF\", linewidth = 1, linetype = \"solid\") +\n  geom_rect(\n    aes(ymin = 3.525, ymax = 6.5, xmin = 0, xmax = Inf), \n    fill = NA, color = \"#FF8000\", linewidth = 1, linetype = \"solid\") + \n  # Color settings\n  scale_fill_manual(values = prop_col) +\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5)) +\n  \n  # Geometries\n  stat_halfeye(\n    adjust = 0.5, justification = -0.2, .width = 1, point_colour = NA) +\n  geom_boxplot(\n    width = 0.2, outlier.shape = NA) +\n  stat_dots(\n    side = \"left\", justification = 1.2, binwidth = 25, dotsize = 0.02) +\n  geom_text(data = median_prices, \n            aes(x = Median_Price, y = `Property Type`, \n                label = paste0(\"$\", Median_Price)),\n            hjust = -0.4, vjust = 0, size = 2) +\n   annotate(\"text\", x = Inf, y = 2, label = \"High Rise\", vjust = 1.5, fontface = \"bold\", color = \"#0080FF\", size = 3) +\n  annotate(\"text\", x = Inf, y = 5, label = \"Landed\", vjust = 1.5, fontface = \"bold\", color = \"#FF8000\", size = 3) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, NA)) +\n  \n  # Coordinate and theme settings\n  coord_flip() +\n  theme_ipsum(axis_title_size = 10, base_size = 7, grid = \"Y\") +\n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 10, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8),\n        axis.title.y = element_text(hjust = 0.5),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank(), \n        legend.position = \"top\", \n        legend.justification = \"center\", \n        legend.direction = \"horizontal\", \n        ) +\n  guides(fill = guide_legend(nrow = 1)) +\n  \n  # Labels and annotations\n  labs(x = \"Unit Price ($ PSF)\", y = NULL,\n       title = \"Distribution of Unit Price ($ PSF) across Property Types\") \n\n# Display the plot\nplot1\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Plotting for high rise\nhigh_rise_1 &lt;- subset(resale_data,  resale_data$`prop_clust` == \"High rise\")\nlanded_1 &lt;- subset(resale_data,  resale_data$`prop_clust` == \"Landed\")\n\n# Recalculating median price for hr\nmedian_prices_hr &lt;- high_rise_1 %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(Median_Price = median(`Unit_Price_PSF`))\n\n# Plot for high rise only\nplot1a &lt;- plot1 &lt;- ggplot(high_rise_1, aes(x = `Unit_Price_PSF`,\n                                 y = `Property Type`, \n                                 fill = `Property Type`)) +\n  # Color settings\n  scale_fill_manual(values = prop_col) +\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5)) +\n  \n  # Geometries\n  stat_halfeye(\n    adjust = 0.5, justification = -0.2, .width = 1, point_colour = NA) +\n  geom_boxplot(\n    width = 0.2, outlier.shape = NA) +\n  stat_dots(\n    side = \"left\", justification = 1.2, binwidth = 25, dotsize = 0.02) +\n  geom_text(data = median_prices_hr, \n            aes(x = Median_Price, y = `Property Type`, \n                label = paste0(\"$\", Median_Price)),\n            hjust = -0.8 , vjust = 0, size = 2) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, NA)) +\n  \n  # Coordinate and theme settings\n  coord_flip() +\n  theme_ipsum(base_size = 7, grid = \"Y\")+ \n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 12, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank(), \n        legend.position = \"top\", \n        legend.justification = \"center\", \n        legend.direction = \"horizontal\"\n       ) +\n  guides(fill = guide_legend(nrow = 1)) +\n  \n  # Labels and annotations\n  labs(x = \"Unit Price ($ PSF)\", y = NULL,\n       title = \"Unit Price Distribution\") \n\n# Display the plot\n#plot1a\n\n# Recalculating median price for hr\nmedian_prices_l &lt;- landed_1 %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(Median_Price = median(`Unit_Price_PSF`))\n\n\n# Plot for landed only\nplot1b &lt;- ggplot(landed_1, aes(x = `Unit_Price_PSF`,\n                                 y = `Property Type`, \n                                 fill = `Property Type`)) +\n  # Color settings\n  scale_fill_manual(values = prop_col) +\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5)) +\n  \n  # Geometries\n  stat_halfeye(\n    adjust = 0.5, justification = -0.2, .width = 1, point_colour = NA) +\n  geom_boxplot(\n    width = 0.2, outlier.shape = NA) +\n  stat_dots(\n    side = \"left\", justification = 1.2, binwidth = 25, dotsize = 0.02) +\n  geom_text(data = median_prices_l, \n            aes(x = Median_Price, y = `Property Type`, \n                label = paste0(\"$\", Median_Price)),\n            hjust = -0.8 , vjust = 0, size = 2) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, NA)) +\n  \n  # Coordinate and theme settings\n  coord_flip() +\n  theme_ipsum(base_size = 7, grid = \"Y\")+ \n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 12, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank(), \n        legend.position = \"top\", \n        legend.justification = \"center\", \n        legend.direction = \"horizontal\"\n       ) +\n  guides(fill = guide_legend(nrow = 1)) +\n  \n  # Labels and annotations\n  labs(x = \"Unit Price ($ PSF)\", y = NULL,\n       title = \"Unit Price Distribution\") \n\n# Display the plot\n#plot1b\n\n\n\n\n\n\nUnderstanding the key statistics for the 2 property cluster of “High Rise” and “Landed”.\n\n\n\n\nHigh Rise\nTransacted_Price\nArea_SQFT\nUnit_Price_PSF\n\n\n\n\nMin\n$440,000\n355.2\n$286\n\n\nQ1 (25%)\n$1,231,120\n710.4\n$1,343\n\n\nMedian\n$1,514,000\n968.8\n$1,676\n\n\nMean\n$1,711,129\n999.3\n$1,767\n\n\nQ3 (75%)\n$1,954,320\n1205.6\n$2,150\n\n\nMax\n$18,800,000\n8697.3\n$4,504\n\n\n\n\n\n\nLanded\nTransacted_Price\nArea_SQFT\nUnit_Price_PSF\n\n\n\n\nMin\n$780,000\n1,344\n$252\n\n\nQ1 (25%)\n$2,575,000\n1,778\n$1,027\n\n\nMedian\n$3,569,000\n2,580\n$1,389\n\n\nMean\n$4,098,191\n2,942\n$1,470\n\n\nQ3 (75%)\n$4,280,000\n3,577\n$1,814\n\n\nMax\n$36,500,000\n29,202\n$4,456\n\n\n\n\nPlotting ridge plot for the “High Rise” and “Landed” with the color codes by quantile.\nLimiting the range of `Transacted Price ($)` to visualise the majority of the data points. This is justified as the outliers form a statistically small proportion and is removed for better representation of distribution.\n\n\n\n\n\n\n\n\n\n\nProperty Cluster\nProperty Type\nRange of Transacted Price\nPoints Excluded\n\n\n\n\nHigh Rise\nEC, Apartment, Condo\n$ 0 - $ 4.5 Mil\n202 out of 18,329 records\n(Approx 1.10%)\n\n\nLanded\nTerrace, Semi-Detached, Detached\n$ 0 - $ 30 Mil\n1 out of 700 records\n(Approx 0.14%)\n\n\n\n\n\nCode\n# Creating subset to draw 2 ridges\n\nhigh_rise &lt;- subset(resale_data,  resale_data$`prop_clust` == \"High rise\")\nlanded &lt;- subset(resale_data,  resale_data$`prop_clust` == \"Landed\")\n\n# Summary \n#kable(summary(landed[,c(\"Transacted_Price\", \"Area_SQFT\", \"Unit_Price_PSF\", #\"Number_of_Units\")]))\n#kable(summary(high_rise[,c(\"Transacted_Price\", \"Area_SQFT\", \"Unit_Price_PSF\", #\"Number_of_Units\")]))\n\n# Creating Annotation\nmedian_Sprices &lt;- high_rise %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(Median_Price = median(`Transacted_Price`))\n\nmedian_S2prices &lt;- landed %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(Median_Price = median(`Transacted_Price`))\n\n#assigning color to quantile\nquan_col &lt;- c(\"Executive Condos.0.25\" = \"#DAFFFF\", \n              \"Executive Condos.0.5\" = \"#BBFFFF\", \n              \"Executive Condos.0.75\" = \"#99FFFF\",\n              \"Apartment.0.25\" = \"#E5F2FF\", \n              \"Apartment.0.5\" = \"#CCE5FF\",\n              \"Apartment.0.75\" = \"#C0DEFF\",\n              \"Condos.0.25\" = \"#99CCFF\", \n              \"Condos.0.5\" = \"#83C1FF\", \n              \"Condos.0.75\" = \"#66B2FF\")\n\n#\nplot2a &lt;- ggplot(high_rise, aes(x = `Transacted_Price`,\n                                 y = `Property Type`\n                                )) +\n  stat_density_ridges(aes(fill = stat(quantile)), \n    quantile_lines = FALSE,\n                      calc_ecdf = TRUE, geom = \"density_ridges_gradient\", \n                      height = 1 , color = NA, position = position_dodge(0.5), alpha = 0.5) +\n  \n  scale_fill_brewer()  +\n  \n  # Color settings\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5), expand = expansion(add = 0.1)) +\n  \n  # Geometries\n  geom_boxplot(\n    width = 0.15, outlier.shape = NA) +\n  stat_dots(\n    side = \"left\", justification = 1.1, binwidth = 50000, dotsize = 0.01) +\n  geom_text(data = median_Sprices, \n            aes(x = Median_Price, y = `Property Type`, \n                label = paste0(\"$\", Median_Price/1000, \"k\")),\n            hjust = -0.5, vjust = 0, size = 2) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, 4500000)) +\n  \n  # Coordinate and theme settings\n  coord_flip() +\n  theme_ipsum(base_size = 7, grid = \"Y\") +\n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 12, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank(), \n        legend.position = \"top\", \n        legend.justification = \"right\") +\n  \n  # Labels and annotations\n  labs(title = \"Transacted Price Distribution\", x = \"Transacted Price ($)\", y = NULL) \n\n# Display the plot\n# plot2a\n\n# Plotting for landed property only\nplot2b &lt;- ggplot(landed, aes(x = `Transacted_Price`,\n                                 y = `Property Type`\n                                )) +\n  stat_density_ridges(aes(fill = stat(quantile)), \n    quantile_lines = FALSE,\n                      calc_ecdf = TRUE, geom = \"density_ridges_gradient\", \n                      height = 1 , color = NA, position = position_dodge(0.5), alpha = 0.5) +\n  \n  scale_fill_brewer(palette = \"Oranges\")  +\n  \n  # Color settings\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5), expand = expansion(add = 0.1)) +\n  \n  # Geometries\n  geom_boxplot(\n    width = 0.15, outlier.shape = NA) +\n  stat_dots(\n    side = \"left\", justification = 1.1, binwidth = 100000, dotsize = 0.01) +\n  geom_text(data = median_S2prices, \n            aes(x = Median_Price, y = `Property Type`, \n                label = paste0(\"$\", Median_Price/1000, \"k\")),\n            hjust = -0.5, vjust = 0, size = 2) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, 30000000)) +\n  \n  # Coordinate and theme settings\n  coord_flip() +\n  theme_ipsum(base_size = 7, grid = \"Y\") +\n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 12, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank(), \n        legend.position = \"top\", \n        legend.justification = \"right\") +\n  \n  # Labels and annotations\n  labs(x = \"Transacted Price ($)\", y = NULL, title = \"Transacted Price Distribution\") \n\n# Display the plot\n#plot2b\n\n\n\n\n\n\n\n\nFuture Improvements\n\n\n\n\n1 dot = 10 units to minimise number of dots\nAttempt to recolor the respective quantiles with the following r code, but unable to relabel the colors for the respective property type.\n\n\nCode\nquan_col &lt;- c(\"Executive Condos.0.25\" = \"#DAFFFF\", \n              \"Executive Condos.0.5\" = \"#BBFFFF\", \n              \"Executive Condos.0.75\" = \"#99FFFF\",\n              \"Apartment.0.25\" = \"#E5F2FF\", \n              \"Apartment.0.5\" = \"#CCE5FF\",\n              \"Apartment.0.75\" = \"#C0DEFF\",\n              \"Condos.0.25\" = \"#99CCFF\", \n              \"Condos.0.5\" = \"#83C1FF\", \n              \"Condos.0.75\" = \"#66B2FF\")\n\n\nAttempt to minimize overlap for ggridges by:\n\nAdjusting height through stat_density_ridges(height = 0.5)\nIntroducing transparency with stat_density_ridges(alpha = 0.5)\nIncluding space between y-axis scale_y_discrete(expand = expansion(add = 0.1))\n\n\n\n\n\n\n\nFor High Rise building,\n\n\nCode\nhr_plot &lt;- grid.arrange(plot1a, plot2a, ncol = 2) \ngrid.rect(x = 0.5, y = 0.5, width = 1, height = 1, just = c(\"center\", \"center\"), \n         gp = gpar(col = \"#0080FF\", fill = NA, lwd = 2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights from High Rise (Unit Price $PSF vs Transacted Price $)\n\n\n\n\nWe observed that “Apartment” typically has the highest price for both Unit Price ($PSF) and Transacted Price ($), followed by “Condo” and lastly “Executive Condos”.\nWhile the unit price of Executive Condo and Apartment is denser on the higher spectrums, the transacted price of these units are\nWith Transacted Price ($) generally being the function of Unit Price ($PSF) and Area (SQFT) for new launches, working backwards, we can infer that “Apartment” are likely to have smaller unit sizes. (Rough estimation below, further visualization with Area (SQFT) is needed to validate this assumption as figures may be distorted with inflation from resale units)\n\n\n\n\n\n\n\n\n\n\nHigh Rise Type\nMedian Transacted Price ($)\nMedian Unit Price ($PSF)\nEstimated Area (SQFT)\n\n\n\n\nExecutive Condos\n$1,400,000\n$1,326\n1,055\n\n\nApartment\n$1,676,855\n$2,120.50\n790\n\n\nCondo\n$1520,000\n$1,631\n932\n\n\n\n\n\nFor Landed properties,\n\n\nCode\nl_plot &lt;- grid.arrange(plot1b, plot2b, ncol = 2) \ngrid.rect(x = 0.5, y = 0.5, width = 1, height = 1, just = c(\"center\", \"center\"), \n         gp = gpar(col = \"#FF8000\", fill = NA, lwd = 2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInsights from Landed Properties (Unit Price $PSF vs Transacted Price $)\n\n\n\n\nInterestingly, the unit price of “Terrace” is the highest at $1,416 psf, followed by “Semi-Detached” at $1,263 psf and lastly, “Detached” of lowest at $1,067 psf.\nNevertheless, aligned with common perception, the Transacted Price ($) for “Detached” is the highest, with 75% approximately $14 million, and median price of $ 6.3 million. This is largely attributed to unit size (Area (SQFT)) not included in this visualisation.\n\n\n\n\n\n\nTo understand the relationship between Unit Price ($PSF) and Transacted Price ($), the most direct method is to use a scatter plot to identify any correlation. However, extremely high Transacted Price ($) due to exceptional purchases makes the visualisation skewed and majority of the Unit Price ($PSF) and Transacted Price ($) are clustered near the median.\nHence, ranking the transaction by percentile will evenly distribute the points within the scatter plot and identify any patterns.\n\n\n\nWith Tableau, we plotted a scatter chart and a combined interactive view\n\n\n\n\n\nIntroducing trend line to show the correlation between Unit Price ($PSF) and Transacted Price ($).\nIntroducing separate views for each property type to de-clutter the scatter plot with ggplotly.\nIntroducing interactivity such that the viewer can either:\n(a) Select price range of interest and see the list of past projects with ggiraph\n(b) Select project of interest by filtering to see the price range of this project. (Test out in the sketch done in Tableau)\n\n\n\n\nTo minimise clutter, ggplotly is used to display different views based on the respective property types.\n\n\nCode\n# Processing data\npct &lt;- resale_data %&gt;%\n  mutate(\n    Tx_Percentile = percent_rank(Transacted_Price),\n    PSF_Percentile = percent_rank(Unit_Price_PSF)\n  )\n\n## plot to see across different property\nplot6 &lt;- ggplot(data = pct,\n                aes(x = PSF_Percentile, \n                    y = Tx_Percentile, \n                    colour = `Property Type`)) +\n  scale_color_manual(values = prop_col) +\n  labs(title = \"Correlation Plot\", \n       x = \"Percentile PSF\", \n       y = \"Percentile Transacted Price\") + \n  geom_point(aes(frame = `Property Type`)\n             , alpha = 0.5) + \n   scale_x_continuous(labels = scales::percent_format(scale = 100), \n                      limits = c(0, 1)) +\n  scale_y_continuous(labels = scales::percent_format(scale = 100), \n                     limits = c(0, 1)) + \n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 12, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 8, face = \"bold\"),\n        panel.background = element_rect(fill = \"#ffffff\"), \n        panel.grid.major = element_line(color = \"grey80\", size = 0.5), \n    panel.grid.major.x = element_line(color = \"grey80\", size = 0.5), \n    panel.grid.major.y = element_line(color = \"grey80\", size = 0.5))\n  \n\nggplotly(plot6)\n\n\n\n\n\n\n\n\n\nTo illustrate interactivity across plot, we will be focusing on “Apartment” and other property type results can be illustrated by repeating the set of codes. The steps taken include:\n\nIntroduce tooltip of Project Name, Transacted Price ($) and Unit Price ($PSF) into the respective dots by hovering above certain point of interest.\nIntroduce data_id to highlight the data points belonging to the same Project Name to see the range of Transacted Price ($) and Unit Price ($PSF)\nIntroduce best fit line with geom_smooth to identify the overall trend between Transacted Price ($) and Unit Price ($PSF)\nCombining with violin-plot and box–plot of Transacted Price ($) and Unit Price ($PSF) to visualise the relative distribution and position of this sale.\n\n\n\nCode\n# Split by subset and add interactive feature to identify project name\n\npct_apt &lt;- subset(pct, pct$`Property Type` == \"Apartment\")\npct_c &lt;- subset(pct, pct$`Property Type` == \"Condo\")\npct_ec &lt;- subset(pct, pct$`Property Type` == \"Executive Condos\")\npct_t &lt;- subset(pct, pct$`Property Type` == \"Terrace\")\npct_sd &lt;- subset(pct, pct$`Property Type` == \"Semi- Detached\")\npct_d &lt;- subset(pct, pct$`Property Type` == \"Detached\")\n\n# Defining Tooltip\npct_apt$tooltip &lt;- c(paste0(\"Project: \", pct_apt$Project_Name, \n                            \"\\n Tx Price: $ \", pct_apt$Transacted_Price, \n                            \"\\n Unit Price: $ \", pct_apt$Unit_Price_PSF))\n\n# Formatting to resolve error\npct_apt$Project_Name &lt;- gsub(\"'\", \"\", pct_apt$Project_Name)\n\n# Plotting interactive plot\nplot_apt_int &lt;- ggplot(data = pct_apt,\n                aes(x = PSF_Percentile, \n                    y = Tx_Percentile, \n                    colour = `Property Type`)) +\n  scale_color_manual(values = prop_col) +\n  labs(title = \"Correlation Plot\", \n       x = \"Percentile PSF\", \n       y = \"Percentile Transacted Price\") + \n   geom_point_interactive(aes(\n     tooltip = pct_apt$tooltip , \n     data_id = pct_apt$Project_Name), \n     alpha = 0.7) + \n  geom_smooth(method = \"lm\",   \n              se = TRUE, level = 0.95, color = \"black\", linewidth = 0.1, fill = \"#6f6f6f\") + \n  scale_x_continuous(\n    labels = scales::percent_format(accuracy = 1), breaks = seq(0, 1, by = 0.25)) +\n  scale_y_continuous(\n    labels = scales::percent_format(accuracy = 1), breaks = seq(0, 1, by = 0.25)) + theme(legend.position = \"none\")\n\napt_interactive &lt;- girafe(\n  ggobj = plot_apt_int,                             \n  width_svg = 6,                         \n  height_svg = 6 * 0.618,\n  options = list(                        \n    opts_hover(css = \"fill:#202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  ))\n\napt_interactive\n\n\n\n\n\n\n\n\nCode\n# Violin plot for unit price\nvplot1_apt &lt;- ggplot(data = pct_apt, aes(x = `Unit_Price_PSF`,\n                                 y = `Property Type`)) +\n  geom_jitter_interactive(width = 0.2, \n                          color = \"#004c99\", size = 0.3, alpha = 0.2, \n                          aes(data_id = pct_apt$Project_Name, \n                              tooltip = pct_apt$tooltip)) +\n  geom_violin(fill = \"#CCE5FF\", width = 0.3, alpha = 0.7) + \n  geom_boxplot(width = 0.1, fill = \"white\", alpha = 0.7) + \n  labs(title = \"Violin Plot\", x = \"Unit Price (PSF)\", y = \"Property Type\")\n\n#vplot1_apt\n\n# Violin plot for transacted price\nvplot2_apt &lt;- ggplot(data = pct_apt, aes(x = `Transacted_Price`,\n                                 y = `Property Type`)) +\n  geom_jitter_interactive(width = 0.2, \n                          color = \"#004c99\", size = 0.3, alpha = 0.2, \n                          aes(data_id = pct_apt$Project_Name, \n                              tooltip = pct_apt$tooltip)) +\n  geom_violin(fill = \"#CCE5FF\", width = 0.3, alpha = 0.7) + \n  geom_boxplot(width = 0.1, fill = \"white\", alpha = 0.7) + \n  labs(title = \"Violin Plot\", x = \"Transacted Price\", y = \"Property Type\") + \n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, 4500000)) + coord_flip()\n\n#vplot2_apt\n\n# Combining into single view \nlayout &lt;- c(\n  area(t=1, l=1, b=8, r=5),\n  area(t=1, l=1, b=2, r=8), \n  area(t=3, l=6, b=8, r=8)\n)\n\ncombined_plot &lt;- girafe(code = print((plot_apt_int + vplot1_apt + vplot2_apt + plot_layout(design = layout))), \n       width_svg = 10,\n       height_svg = 10,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\ncombined_plot\n\n\n\n\n\n\n\n\n\nDuring the assignment, the option of combining 3 existing plots was considered. However, looking at the combined plot below, too much information with the rainbow plot makes the information presented to the user less comprehensible.\nHence, to simplify, a violin plot was opted with the individual data points reflected in the background to increase the scale of the complementary 2 plots with the main scatter plot in percentile terms.\n\n\nCode\nplot1_apt &lt;- ggplot(pct_apt, aes(x = `Unit_Price_PSF`,\n                                 y = `Property Type`, \n                                 fill = `Property Type`)) +\n  # Color settings\n  scale_fill_manual(values = prop_col) +\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5)) +\n  \n  # Geometries\n  stat_halfeye(\n    adjust = 0.5, justification = -0.2, .width = 1, point_colour = NA) +\n  geom_boxplot_interactive(\n    width = 0.2, outlier.shape = NA, aes(data_id = pct_apt$Project_Name)) +\n  stat_dots(\n    side = \"left\", justification = 1.2, binwidth = 25, dotsize = 0.02) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, NA)) +\n  \n  # Coordinate and theme settings\n  theme_ipsum(axis_title_size = 10, base_size = 7, grid = \"Y\") +\n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 10, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8),\n        axis.title.y = element_text(hjust = 0.5),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank()) +\n  \n  # Labels and annotations\n  labs(x = \"Unit Price ($ PSF)\", y = NULL,\n       title = \"Distribution of Unit Price ($ PSF) across Property Types\",\n       subtitle = \"Higher Median Transaction Prices do not necessarily imply Higher Median Unit Price ($ PSF)\", size = 5) \n\n\nplot2_apt &lt;- ggplot(pct_apt, aes(x = `Transacted_Price`,\n                                 y = `Property Type`, \n                                 fill = `Property Type`)) +\n  # Color settings\n  scale_fill_manual(values = prop_col) +\n  scale_y_discrete(labels = function(y) str_wrap(y, width = 5)) +\n  \n  # Geometries\n  stat_halfeye(\n    adjust = 0.5, justification = -0.2, .width = 1, point_colour = NA) +\n  geom_boxplot_interactive(aes(data_id = pct_apt$Project_Name), \n    width = 0.2, outlier.shape = NA) +\n  stat_dots(\n    side = \"left\", justification = 1.2, binwidth = 25, dotsize = 0.02) +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 5), labels = scales::label_number(scale = 1), limits = c(0, 4500000)) +\n  \n  \n  # Coordinate and theme settings\n  coord_flip() +\n  theme_ipsum(axis_title_size = 10, base_size = 7, grid = \"Y\") +\n  theme(plot.margin = margin(10, 10, 10, 10),\n        plot.title = element_text(size = 10, hjust = 0.3),\n        axis.title.x = element_text(hjust = 0.5, size = 8),\n        axis.title.y = element_text(hjust = 0.5),\n        plot.background = element_rect(fill = \"#FFFFFF\", colour = \"#f5f5f5\"),\n        panel.border = element_blank()) +\n  \n  # Labels and annotations\n  labs(x = \"Transacted Price ($)\", y = NULL,\n       title = \"Distribution of Unit Price ($ PSF) across Property Types\", size = 5) \n\n#plot2_apt\n\n#Recording attempt to combine, but ultimately sticking to simplicity to tell the story\n\ntest_1 &lt;- girafe(code = print((plot_apt_int + plot1_apt + plot2_apt + plot_layout(design = layout))), \n       width_svg = 10,\n       height_svg = 10,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\ntest_1"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take-home Exercise 03",
    "section": "",
    "text": "Loading data\n\npacman::p_load(jsonlite, tidyverse, tidyr)\n\n\nmc2_data &lt;- fromJSON(\"data/mc2.json\")\n\n\n# Overview of links\nmc2_edges &lt;- as_tibble(mc2_data$links)\n\n# Modifying the data type\nmc2_edges &lt;- as_tibble(mc2_data$links) %&gt;%\n  distinct() %&gt;%\n  mutate(source = as.character(source), \n         target = as.character(target), \n         type = as.character(type)) %&gt;%\n  group_by(source, target, type) %&gt;%\n  summarise(weights = n()) %&gt;%\n  filter(source != target) %&gt;%\n  ungroup()"
  }
]