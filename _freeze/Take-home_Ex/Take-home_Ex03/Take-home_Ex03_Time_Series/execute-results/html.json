{
  "hash": "9da1a0a15fa879b6e570517fa44db635",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 3 - Time Series\"\nauthor: \"Seng Jing Yi\"\ndate: \"June 18, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\neditor: visual\n\nformat:\n  html:\n    code-fold: true\n---\n\n\nTesting out time series analysis based on mapped records\n\nImporting packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(jsonlite, tidyverse, tidyr, \n               knitr, lubridate, dplyr, \n               igraph, ggraph, ggdist, ggplot2, \n               SmartEDA, sf, tidygraph, reshape2, readr,\n               DT, patchwork,plotly)\n```\n:::\n\n\nImporting data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntx_qty <- read_csv(\"data/tx_qty.csv\")\nping_activity <- read_csv(\"data/ping_activity.csv\")\nE_Hbrpt_v <- read_csv(\"data/hbrpt.csv\")\nN_vessel <- read_csv(\"data/N_vessel.csv\")\nlocation_legend <- read_csv(\"data/location_legend.csv\")\nNL_City <- read_csv(\"data/NL_City.csv\")\nvessel_movement <- read_rds(\"data/rds/vessel_movement_data.rds\")\nnearest_tx_date <- read_csv(\"data/mapped_records.csv\")\n```\n:::\n\n\nImporting geographical data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nOceanusGeography = st_read(\"data/Oceanus Geography.geojson\") %>%\n  st_transform(crs = 4326)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Oceanus Geography' from data source \n  `C:\\sengjingyi\\ISSS608\\Take-home_Ex\\Take-home_Ex03\\data\\Oceanus Geography.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 29 features and 7 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -167.0654 ymin: 38.07452 xmax: -163.2723 ymax: 40.67775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nOceanusLocations <- st_read(dsn = \"data/shp\",\n  layer = \"Oceanus Geography\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Oceanus Geography' from data source \n  `C:\\sengjingyi\\ISSS608\\Take-home_Ex\\Take-home_Ex03\\data\\shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 27 features and 7 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -167.0654 ymin: 38.07452 xmax: -163.2723 ymax: 40.67775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\ncoords <- st_coordinates(OceanusLocations)\n\nOceanusLocations_df <- OceanusLocations %>%\n  st_drop_geometry()\n\nOceanusLocations_df$XCOORD <- coords[, \"X\"]\nOceanusLocations_df$YCOORD <- coords[, \"Y\"]\n\nOceanusLocations_df <- OceanusLocations_df %>%\n  select(Name, X.Kind, XCOORD, YCOORD) %>%\n  rename(Loc_Type = X.Kind)\n\nggplot() +\n  geom_sf(data = OceanusGeography) +\n  theme_minimal() +\n  labs(title = \"Map of Oceanus\", \n  x = \"Longitude\", y = \"Latitude\", color = \"ID\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_Time_Series_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nMerging the vessel details back with the mapped records in the dataframe `nearest_tx_date`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmapped_records <- nearest_tx_date %>% \n  left_join(N_vessel %>% \n              select(vessel_id, vessel_name, flag_country, \n                     vessel_company, tonnage, length_overall, vessel_type), \n                            by = c(\"vessel_id\" = \"vessel_id\"))\n```\n:::\n\n\nExploring potentially suspicious records where matching algorithm matched to \"non-fishing\" vessels.\n\n-   Type: Cargo_vessels\n\n-   44 unique vessel_id returned for total 1898 unique cargo_ids\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnon_fishing_match <- mapped_records %>% filter(vessel_type != \"Fishing\")\n\nnon_fishing_match_vessel_id <- unique(non_fishing_match$vessel_id)\nnon_fishing_match_cargo_count <- unique(non_fishing_match$cargo_id)\n\nnon_fishing_match_country <- non_fishing_match %>% \n  group_by(flag_country, vessel_id, fish_species) %>% \n  summarise(cargo_count = n_distinct(cargo_id))\n\nflag_country_order <- non_fishing_match_country %>%\n  group_by(flag_country) %>%\n  summarise(total_cargo_count = sum(cargo_count)) %>%\n  arrange(total_cargo_count) %>%\n  pull(flag_country)\n\n# Reorder flag_country based on the total cargo count\nnon_fishing_match_country$flag_country <- factor(non_fishing_match_country$flag_country, levels = flag_country_order)\n\n# manually assigning fish species color\nspecies_colors <- c(\n  \"gadusnspecificatae4ba\" = \"#FF6347\",  # Illegal\n  \"habeaspisces4eb\" = \"#99CCFF\",        # Legal\n  \"labridaenrefert9be\" = \"#99CCFF\",     # Legal\n  \"piscesfoetidaae7\" = \"#FF6666\",       # Illegal\n  \"piscesfrigus900\" = \"#99CCFF\",        # Legal\n  \"piscessatisb87\" = \"#FF6666\",         # Illegal\n  \"piscisosseusb6d\" = \"#FF6666\",        # Illegal\n  \"piscissapidum9b7\" = \"#99CCFF\",       # Legal\n  \"thunnininveradb7\" = \"#99CCFF\"        # Legal\n)\n\n# Create the plot\nnon_fishing_match_country_plot <- ggplot(non_fishing_match_country, aes(x = flag_country, y = cargo_count, fill = fish_species)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(x = \"Flag Country\", y = \"Cargo Count\", title = \"Cargo Count by Flag Country, and Fish Species\", fill = \"Fish Species\") +\n  scale_fill_manual(values = species_colors) + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1), \n        legend.text = element_text(angle = 45, hjust = 1)) +\n  theme_minimal() +\n  facet_wrap(~ fish_species) \n  coord_flip()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<ggproto object: Class CoordFlip, CoordCartesian, Coord, gg>\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: FALSE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  <ggproto object: Class CoordFlip, CoordCartesian, Coord, gg>\n```\n\n\n:::\n\n```{.r .cell-code}\nnon_fishing_match_country_plot\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_Time_Series_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n-   Zooming into cargo vessels with illegal fish species, we observe the months which they are delivered\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnon_fishing_illegal_match <- mapped_records %>% \n  filter(vessel_type != \"Fishing\", \n         fish_species %in% c(\"piscisosseusb6d\", \"piscessatisb87\", \"gadusnspecificatae4ba\"))\n\nunique(non_fishing_illegal_match$vessel_id) #35 distinct vessel ids\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"seasphere38e\"         \"transpacific5ada\"     \"maritimematrix7755\"  \n [4] \"harborhelios585\"      \"freightfusion141\"     \"nauticalnirvana874\"  \n [7] \"cargocentric4d0\"      \"transatlantic77d\"     \"blueharbor2c1\"       \n[10] \"nauticalnexus1a5d\"    \"freightfrontiers7134\" \"maritimemomentumfab\" \n[13] \"vesselvanguard5d06\"   \"maritimemover13f\"     \"oceanicoasisd3f\"     \n[16] \"seasystem3e22\"        \"vesselvictoryafd\"     \"seawayspectra490\"    \n[19] \"aquatransit6bc\"       \"seasentinel24e\"       \"oceanicoracle9da\"    \n[22] \"maritimemiraclef85\"   \"maritimemagnitude2e9\" \"harborhalo9dd6\"      \n[25] \"transoceane48\"        \"seasolutions4d5\"      \"transcontinentalcf3\" \n[28] \"oceanicline3de\"       \"seawayspectrumca2\"    \"seasystem375\"        \n[31] \"harborhavenf91\"       \"nauticalnexus6cc\"     \"cargocynosure29d\"    \n[34] \"seasentry2e28\"        \"vesselvistad0c\"      \n```\n\n\n:::\n\n```{.r .cell-code}\nunique(non_fishing_illegal_match$flag_country) # 30 distinct countries\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Orvietola\"       \"Arreciviento\"    \"Alverossia\"      \"Lumakari\"       \n [5] \"Solovarossa\"     \"Rio Solovia\"     \"Lumindoria\"      \"Luminkind\"      \n [9] \"Mawalara\"        \"Riodelsol\"       \"Azurionix\"       \"Playa Solis\"    \n[13] \"Khamseena\"       \"Brindisola\"      \"Kethanor\"        \"Nalaloria\"      \n[17] \"Oceanus\"         \"Korvelonia\"      \"Ariuzima\"        \"Coralmarica\"    \n[21] \"Gavanovia\"       \"Calabrand\"       \"Yggdrasonia\"     \"Nyxonix\"        \n[25] \"Isla Solmar\"     \"Thessalandia\"    \"Utoporiana\"      \"Islavaria\"      \n[29] \"Kuzalanda\"       \"Anderia del Mar\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# loading packages for parallel plots\npacman::p_load(GGally, parallelPlot)\n\n# summarizing cargo records into month\n\nnon_fishing_illegal_match_summary <- non_fishing_illegal_match %>%\n  mutate(month = floor_date(tx_date, \"month\")) %>%\n  group_by(dest, month, fish_species) %>%\n  summarise(total_qty_tons = sum(qty_tons), \n            vessel_count = n_distinct(vessel_id)) %>%\n  ungroup()\n\n# plotting the summary over month \nggplot(non_fishing_illegal_match_summary, aes(x = month, y = total_qty_tons, color = fish_species, group = fish_species)) +\n  geom_line() +\n  geom_point() +\n  labs(x = \"Month\", y = \"Total Cargo Quantity (tons)\", title = \"Cargo Quantity Over Time by Destination and Fish Species\") +\n  facet_wrap(~ dest, ncol = 1) +\n  scale_fill_manual(values = species_colors) +  \n  theme_minimal() +\n  scale_x_date(date_labels = \"%b %Y\", date_breaks = \"1 month\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_Time_Series_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nContrasting with the cargo data (full population)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntx_qty$tx_date <- as.Date(tx_qty$tx_date)\n\ntx_by_mth <- tx_qty %>%\n  mutate(month = floor_date(tx_date, \"month\")) %>%\n  group_by(dest, month, fish_species) %>%\n  summarise(total_qty_tons = sum(qty_tons))\n\n# fish species color with salmon \nspecies_colors <- c(\n  \"gadusnspecificatae4ba\" = \"#FF6666\",  # Illegal\n  \"habeaspisces4eb\" = \"#99CCFF\",        # Legal\n  \"labridaenrefert9be\" = \"#99CCFF\",     # Legal\n  \"piscesfoetidaae7\" = \"#FF6666\",       # Illegal\n  \"piscesfrigus900\" = \"#99CCFF\",        # Legal\n  \"piscessatisb87\" = \"#FF6666\",         # Illegal\n  \"piscisosseusb6d\" = \"#FF6666\",        # Illegal\n  \"piscissapidum9b7\" = \"#99CCFF\",       # Legal\n  \"thunnininveradb7\" = \"#99CCFF\",       # Legal\n  \"oncorhynchusrosea790\" = \"#FFFF99\"    # Salmon\n)\n\n## plot\nggplot(tx_by_mth, aes(x = month, y = total_qty_tons, color = fish_species, group = fish_species)) +\n  geom_line() +\n  geom_point() +\n  labs(x = \"Month\", y = \"Total Cargo Quantity (tons)\", title = \"Cargo Quantity Over Time by Destination and Fish Species\") +\n  facet_wrap(~ dest, ncol = 1, strip.position = \"left\") +\n  scale_color_manual(values = species_colors) +  \n  theme_minimal() +\n  scale_x_date(date_labels = \"%b %Y\", date_breaks = \"1 month\") +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    strip.placement = \"outside\",\n    strip.text.y.left = element_text(angle = 0),  # Rotate facet labels\n    panel.spacing = unit(1, \"lines\")  # Increase space between panels\n  ) +\n  coord_cartesian(clip = \"off\") \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_Time_Series_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nComparing with the cargo mapped to suspicious vessel for South Seafood Corp\n\n-   10 cargo mapped\n\n-   Summary only to 2 ports, of 2 months\n\n![](images/clipboard-3140560244.png)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nss_cargo <- mapped_records %>% \n  filter(vessel_id %in% c(\"snappersnatcher7be\", \"roachrobberdb6\"))\n\n# formatting to align with tx_by_month dataframe \n\nss_by_month <- ss_cargo %>%\n  mutate(month = floor_date(tx_date, \"month\")) %>%\n  group_by(dest, month, fish_species) %>%\n  summarise(total_qty_tons = sum(qty_tons))\n\nggplot(tx_by_mth, aes(x = month, y = total_qty_tons, color = fish_species, group = fish_species)) +\n  geom_line() +\n  geom_point() +\n  geom_point(data = ss_by_month, aes(x = month, y = total_qty_tons), color = \"purple\", size = 1) +  # Highlight points in purple\n  labs(x = \"Month\", y = \"Total Cargo Quantity (tons)\", title = \"Cargo Quantity Over Time by Destination and Fish Species\") +\n  facet_wrap(~ dest, ncol = 1, strip.position = \"left\") +\n  scale_color_manual(values = species_colors) +  \n  theme_minimal() +\n  scale_x_date(date_labels = \"%b %Y\", date_breaks = \"1 month\") +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    strip.placement = \"outside\",\n    strip.text.y.left = element_text(angle = 0),  # Rotate facet labels\n    panel.spacing = unit(1, \"lines\")  # Increase space between panels\n  ) +\n  coord_cartesian(clip = \"off\") \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_Time_Series_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nComparing with vessels of similar size to South Seafood Corp vessels.\n\n![](images/clipboard-1490142367.png)\n\n![](images/clipboard-1253613874.png)\n\nIntroducing filter to identify vessels of certain tonnage.\n\n-   9 other small fishing vessels of \\<= 100 tonnage similar to Snapper Snatcher\n\n-   7 other large vessels of \\>= 11700 tonnage similar to Roach Robber\n\n-   Issue: No linked cargo to Roach Robber\n\n\n::: {.cell}\n\n```{.r .cell-code}\nss_vessel <- N_vessel %>% filter(vessel_company %in% \"SouthSeafood Express Corp\")\n\n# Returning vessels that are unusually small like Snapper Snatcher\n\nsus_small_tonnage <- 100\nsus_small_vessels <- N_vessel %>% \n  filter(tonnage <= sus_small_tonnage, vessel_type == \"Fishing\") %>% \n  mutate(sus_type = \"abnormally_small\")\n\n# Returning vessels that are unusually large like Roach Robber\n\nsus_large_tonnage <- 11700\nsus_large_vessels <- N_vessel %>% \n  filter(tonnage >= sus_large_tonnage, vessel_type == \"Fishing\") %>% \n  mutate(sus_type = \"abnormally_large\")\n\nsus_size_fish_vessel <- rbind(sus_small_vessels, sus_large_vessels)\n\n# identifying matching cargo for small vessels \n\nsus_size_vessels_cargo <- mapped_records %>% \n  filter(vessel_id %in% sus_size_fish_vessel$vessel_id) %>%\n  left_join(sus_size_fish_vessel %>% \n              select(vessel_id, sus_type), by = c(\"vessel_id\" = \"vessel_id\"))\n\n#write_csv(sus_size_vessels_cargo, \"data/sus_vessel_cargo.csv\")\n\nsus_size_vessels_cargo_summary <- sus_size_vessels_cargo %>%\n  group_by(vessel_id, dest, sus_type) %>%\n  summarize(median_qty_tons = median(qty_tons, na.rm = TRUE)) %>%\n  ungroup()\n\n# Create the parallel coordinates plot\ndata_wide <- sus_size_vessels_cargo_summary %>%\n  pivot_wider(names_from = dest, values_from = median_qty_tons) %>%\n  replace(is.na(.), 0)\n\n# Assigning color for South Seafood vessels \nvessel_colors <- c(\"snappersnatcher7be\" = \"#FF6666\", \n                    \"roachrobberdb6\" = \"#FF6666\", \n                   \"default\" = \"grey\") \n\n# Create a color column based on vessel_id\ndata_wide$color <- ifelse(data_wide$vessel_id %in% names(vessel_colors),\n                          vessel_colors[data_wide$vessel_id],\n                          vessel_colors[\"default\"])\n\n# Create the parallel coordinates plot with facet wrap for sus_type\nggparcoord(data = data_wide, \n           columns = 3:ncol(data_wide), # Columns for median_qty_tons\n           groupColumn = 1, # Column index for vessel_id\n           scale = \"globalminmax\",\n           alphaLines = 0.5, \n           boxplot = TRUE) +\n  scale_color_manual(values = vessel_colors) + \n  labs(title = \"Parallel Coordinates Plot of Vessel Cargo Data\",\n       x = \"Port\",\n       y = \"Median Quantity in Tons\",\n       color = \"Vessel ID\") +\n  theme_minimal() +\n  facet_wrap(~ sus_type, ncol = 1)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_Time_Series_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nCreating parallel plot for median fish quantity cargo declared at each port.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# summarizing median cargo qty \nvessels_cargo_summary <- mapped_records %>%\n  mutate(month = floor_date(tx_date, \"month\")) %>%\n  group_by(vessel_id, dest, fish_species, month) %>%\n  summarize(median_qty_tons = median(qty_tons, na.rm = TRUE)) %>%\n  ungroup()\n\n\n# filter of destination of interest\nvessel_cargo_summary_paackland <- vessels_cargo_summary %>% \n  filter(dest == \"City of Paackland\")\n\n# converting to format for plot\ndata_wide <- vessel_cargo_summary_paackland %>%\n  pivot_wider(names_from = month, values_from = median_qty_tons) \n\n# scatter plot \nggplot(vessel_cargo_summary_paackland, aes(x = month, y = median_qty_tons)) +\n  geom_jitter(alpha = 0.6) + # Scatter plot with jitter for each vessel\n  geom_boxplot(aes(group = month), alpha = 0.3, outlier.shape = NA) + # Box plot\n  labs(title = \"Median Quantity of Fish Species Over Time\",\n       x = \"Month\",\n       y = \"Median Quantity in Tons\") +\n  facet_wrap(~ fish_species) + \n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_Time_Series_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Take-home_Ex03_Time_Series_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}