{
  "hash": "6bdcb3f639535aecc5f0c2e039921383",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 3 - Exploratory Data Analysis\"\nauthor: \"Seng Jing Yi\"\ndate: \"May 18, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\neditor: visual\n\nformat:\n  html:\n    code-fold: true\n---\n\n\n# Exploring Vast Challenge 2024 - Mini-challenge 2\n\n## 1. Introduction:\n\n### 1.1 Setting the scene:\n\nFishEye has learned that SouthSeafood Express Corp has been caught fishing illegally. The scandal caused a major disruption in the close-knit fishing community. FishEye has been collecting data on ship movements and shipping records in hopes that they could assemble a cohesive store of knowledge that will allow them to better understand local commercial fishing behavior.\n\n### 1.2 Key Objectives of this assignment:\n\nFishEye analysts need help to perform geographic and temporal analysis of the CatchNet data so they can prevent illegal fishing from happening again. This assignment will focus on sub-questions 1 & 4, namely:\n\n+---------+----------------------------------------------------------------------------------------------------------------------------------------------------+-------------------+\n| Sub-qn  | Objectives                                                                                                                                         | Techniques used   |\n+=========+====================================================================================================================================================+===================+\n| 1       | Visualization system to associate vessels with their probable cargos, including seasonality analysis to detect any anomalies in port exit records. |                   |\n+---------+----------------------------------------------------------------------------------------------------------------------------------------------------+-------------------+\n| 4       | Visualizing changes in fishing activities after SouthSeafood Express was caught.                                                                   | Temporal Analysis |\n+---------+----------------------------------------------------------------------------------------------------------------------------------------------------+-------------------+\n\n## 2. Data Import & Processing\n\n### 2.1 Loading relevant packages and data\n\n+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+\n| Packages Used                                            | Purpose                                                                                                            |\n+==========================================================+====================================================================================================================+\n| jsonlite, sf                                             | Importing JSON file and geojson for geographical data                                                              |\n+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+\n| tidyverse, lubridate, dplyr, readr, reshape2, data.table | Data wrangling and reshaping in preparation for visualisation and wrap text function                               |\n+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+\n| ggplot2, tidygraph, patchwork, sf, ggrepel               | Statistical graph and geographical plots with points and polygons and tidying of graphs for clarity and aesthetics |\n+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+\n| DT, igraph, ggraph, plotly, visNetwork, ggiraph          | For interactive graph and data table for user to drill down on area of interest                                    |\n+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load package\npacman::p_load(jsonlite, tidyverse, tidyr, \n               knitr, lubridate, dplyr, \n               igraph, ggraph, ggdist, ggplot2, \n               sf, tidygraph, reshape2, readr,\n               DT, patchwork,plotly, data.table, ggrepel)\n\n# load data\nmc2_data <- fromJSON(\"data/mc2.json\")\n```\n:::\n\n\n### 2.2. Data Cleaning\n\n*Reference: [Kickstarter 2](https://isss608-ay2023-24apr.netlify.app/vast/kickstarter2) by Prof Kam*\n\n#### 2.2.1 Extracting edges & understanding edge tibble data table.\n\n1.  Extracting JSON file `edges` to tibble data frame and removing duplicates\n2.  Converting to the correct data types for datetime\n3.  Renaming columns starting with \"\\_ xx\\_\" to minimize downstream syntax errors.\n4.  Creating subsets of data tables based on column of \"type\"\n5.  Renaming of columns to provide context and unique identifiers for downstream data mapping.\n6.  Specifically for `tx_c`, adjustment of transaction date, T0 to T-1 as fish import generally leave harbor one day after delivery\n7.  Resultant data sets include:\n\n+------------------------------------+--------------------------------------------------------------------------------------------------------+\n| Resultant Edges Data Set           | Unique columns                                                                                         |\n+====================================+========================================================================================================+\n| Transactions (i.e., tx_c)          | Cargo_id, Destination, Transaction date, Fish species                                                  |\n+------------------------------------+--------------------------------------------------------------------------------------------------------+\n| Transponder Ping (i.e., E_Tping_c) | Start_time, Dwell, Ping source, Vessel_id                                                              |\n+------------------------------------+--------------------------------------------------------------------------------------------------------+\n| Habor Arrival Report (E_Hbrpt_c)   | Vessel_id, Port, Key, Arrival date, Port master, Aphorism, Holiday Greeting, Saying of the Sea, Wisdom |\n+------------------------------------+--------------------------------------------------------------------------------------------------------+\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#assigning to mc2_edges2\nmc2_edges <- as_tibble(mc2_data$links) %>% \n  distinct() \n\n#correcting data type - converting to date format\nmc2_edges$time <- as_datetime(mc2_edges$time)\nmc2_edges$\"_last_edited_date\" <- as_datetime(mc2_edges$\"_last_edited_date\")\nmc2_edges$\"_date_added\" <- as_datetime(mc2_edges$\"_date_added\")\nmc2_edges$date <- as_datetime(mc2_edges$date)\n\n\n#renaming headers with \"_\" to prevent errors. \nmc2_edges <- mc2_edges %>%\n  rename(\"last_edited_by\" = \"_last_edited_by\",\n         \"date_added\" = \"_date_added\",\n         \"last_edited_date\" = \"_last_edited_date\",\n         \"raw_source\" = \"_raw_source\",\n         \"algorithm\" = \"_algorithm\") \n\n#checking data format\n#glimpse(mc2_edges)\n\n# Breaking into subsets based on event category\nE_TransponderPing <- subset(mc2_edges,  mc2_edges$type == \"Event.TransportEvent.TransponderPing\")\nE_HarborRpt <- subset(mc2_edges,  mc2_edges$type == \"Event.HarborReport\")\nE_Tx <- subset(mc2_edges, mc2_edges$type == \"Event.Transaction\")\n\n# Dropping columns that are NULL and renaming variables to separate them\n\n# Transactions\nE_Tx_c <- E_Tx %>%\n  rename(\n  cargo_id = source, \n  dest = target,\n  tx_date = date) %>%\n  mutate(tx_date = tx_date -1) %>% # adjustment for records\n  select(-c(key, algorithm, `raw_source`, `type`, `data_author`, `aphorism`, `holiday_greeting`, `wisdom`, `saying of the sea`, `time`, `dwell`)) \n\n# Separating the fish species for the respective cargo \ntx_sub1 <- E_Tx_c[grep(\"^City of\", E_Tx_c$dest), ]\ntx_sub2 <- E_Tx_c[!grepl(\"^City of\", E_Tx_c$dest), ]\ntx_sub2 <- tx_sub2 %>% rename(fish_species = dest)\n\ntx_c <- left_join(tx_sub1, tx_sub2 %>% select(cargo_id, fish_species), by = \"cargo_id\")\n\n# Dropping raw source: All Oceanus Centralized Export/Import Archive and Notatification Service (OCEANS)\n# Dropping algorithm: CatchMate ('arrrr' edition)\n# Null columns - Data author, aphorism, holiday_greeting, wisdom, saying of the sea, time, dwell\n\n# Transponder Ping\nE_Tping_c <- E_TransponderPing %>%\n  rename(vessel_id = target, \n         ping_source = source,\n         start_time = time) %>%\n  select(-c(key, `algorithm`, `raw_source`, `type`, `date`, `data_author`, `aphorism`, `holiday_greeting`, `wisdom`, `saying of the sea`)) \n\n#Dropping raw_source: All Oceanus Vessel Locator System\n#Dropping algorithm: All OVLS-Catch&Hook\n# Null columns - Date, Data author, aphorism, holiday_greeting, wisdom, saying of the sea\n\n# Habour Report\nE_Hbrpt_c <- E_HarborRpt %>% rename(\n  vessel_id = source, \n  port = target, \n  arr_date = date, \n  port_master = data_author, \n  saying = `saying of the sea`\n) %>%\n  select(-c(`algorithm`, `type`, `time`, `dwell`)) \n\n#Dropping algorithm: All HarborReportMaster 3.11\n#Retain raw_source: Differing values depending on which Port / City\n\nrm(tx_sub1, tx_sub2, E_TransponderPing,  E_HarborRpt, E_Tx, mc2_edges, E_Tx_c)\n```\n:::\n\n\n#### 2.2.2 Extracting nodes & understanding nodes tibble data table.\n\nRepeating similar steps for `nodes` records, we obtained the following resultant data set. To minimize the number of data sets, we appended nodes information on vessels and region into a combined data set, with an assigned label to identify it's category. (e.g., vessel_type)\n\n+------------------------------------------+--------------------------------------------------------------------------------------------+\n| Resultant Nodes Data Sets                | Unique Columns                                                                             |\n+==========================================+============================================================================================+\n| N_fish (Fishes and their description)    | Fish_id, fish species                                                                      |\n+------------------------------------------+--------------------------------------------------------------------------------------------+\n| N_Delivery_Doc (Cargo and details)       | Cargo_id, quantity in tons, delivery date                                                  |\n+------------------------------------------+--------------------------------------------------------------------------------------------+\n| N_vessel (Vessels and their description) | Vessel_id, vessel name, vessel company, flag country, tonnage, overall length, vessel type |\n+------------------------------------------+--------------------------------------------------------------------------------------------+\n| Location_legend (Point, City, Region)    | Area, activities, kind, fish_species                                                       |\n+------------------------------------------+--------------------------------------------------------------------------------------------+\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#segmenting nodes data and checking for distinct records\nmc2_nodes <- as_tibble(mc2_data$nodes) %>%\n  distinct()\n\n#renaming to remove the \"_\" \nmc2_nodes <- mc2_nodes %>%\n  rename(\"last_edited_by\" = \"_last_edited_by\",\n         \"date_added\" = \"_date_added\",\n         \"last_edited_date\" = \"_last_edited_date\",\n         \"raw_source\" = \"_raw_source\",\n         \"algorithm\" = \"_algorithm\") \n\n#tidying the text data to remove nested list.\n\nmc2_nodes_tidied <- mc2_nodes %>%\n  mutate(Activities = gsub(\"c[(]\", \"\", Activities)) %>% \n  mutate(Activities = gsub(\"\\\"\", \"\", Activities)) %>%\n  mutate(Activities = gsub(\"[)]\", \"\", Activities)) \n\nmc2_nodes_tidied <- mc2_nodes_tidied %>%\n  mutate(fish_species_present = gsub(\"c[(]\", \"\", fish_species_present)) %>% \n  mutate(fish_species_present = gsub(\"\\\"\", \"\", fish_species_present)) %>%\n  mutate(fish_species_present = gsub(\"[)]\", \"\", fish_species_present)) \n\n# Creating subset on nodes information\nN_fish <- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Commodity.Fish\") %>%\n  select_if(~ !any(is.na(.))) %>% \n  select(-c(`type`, `raw_source`, `algorithm`, `Activities`, `fish_species_present`)) %>%\n  rename(fish_species = name, \n         fish_id = id)\n\nNL_City <- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Location.City\") %>%\n  select_if(~ !any(is.na(.))) %>%\n  select(-c(`raw_source`, `algorithm`, `type`, `fish_species_present`)) %>%\n  rename(city_name = Name, \n         city_id = id)\n\n\nNL_Point <- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Location.Point\") %>%\n  select_if(~ !any(is.na(.))) %>%\n  select(-c(`raw_source`, `algorithm`, `kind`, `fish_species_present`)) %>%\n  rename(point_name = Name, \n         point_id = id)\n\n## Need to tidy NL Region\nNL_Region <- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Location.Region\") %>%\n  select_if(~ !any(is.na(.))) %>%\n  select(-c(`raw_source`, `algorithm`, `type`, `Description`)) %>%\n  rename(region_name = Name, \n         region_id = id, \n         region_kind = kind)\n\nN_Delivery_doc <- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Document.DeliveryReport\") %>%\n  select_if(~ !any(is.na(.))) %>%\n  rename(deliver_date = date,\n         cargo_id = id) %>%\n  select(-c(`algorithm`, `type`, `raw_source`, `Activities`, `fish_species_present`)) \n\n## consider adding back more columns, it dropped some columns where values were partial NA\n\nN_vessel <- mc2_nodes_tidied %>%\n  filter(grepl(\"Entity.Vessel\", type)) %>%\n  mutate(vessel_type = case_when(\n    grepl(\"FishingVessel\", type, ignore.case = TRUE) ~ \"Fishing\",\n    grepl(\"Ferry.Passenger\", type, ignore.case = TRUE) ~ \"Ferry_Passenger\",\n    grepl(\"Ferry.Cargo\", type, ignore.case = TRUE) ~ \"Ferry_Cargo\",\n    grepl(\"Research\", type, ignore.case = TRUE) ~ \"Research\", \n    grepl(\"Other\", type, ignore.case = TRUE) ~ \"Other\", \n    grepl(\"Tour\", type, ignore.case = TRUE) ~ \"Tour\", \n    grepl(\"CargoVessel\", type, ignore.case = TRUE) ~ \"Cargo_Vessel\"\n    )) %>% \n  mutate(company = ifelse(is.na(company), \"Unknown\", company)) %>% # Handle NA values by replacing NA with unknown\n  select(-c(`algorithm`, `type`, `raw_source`, `Activities`, `fish_species_present`, `Description`, `kind`, `style`, `name`, `qty_tons`,`date`)) %>%\n  rename(vessel_id = id, \n         vessel_name = Name, \n         vessel_company = company)\n\n\n# Further exploring records where there is null values\npartial_na_records <- N_vessel[!complete.cases(N_vessel), ] %>% \n    select(-c(last_edited_by, date_added, last_edited_date)) \n\npartial_na_sum <- partial_na_records %>% \n  group_by(vessel_type) %>% \n  summarize(count = n()) \n\n# Plot NA records\npartial_na_plot <- ggplot(partial_na_sum, aes(x = vessel_type, y = count)) + \n  geom_bar(stat = \"identity\", fill = \"grey\") + \n  geom_text(aes(label = count), vjust = -0.2, size = 4) + \n  labs(title = \"Breakdown of vessel type for partial NA records\", \n       x = \"Vessel Type\",\n       y = \"Count of vessel with NA\") + theme_minimal(base_size = 12) + \n  theme(axis.line = element_line(color = \"black\"))\n\npartial_na_plot\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_EDA_1_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Display partial na records\ndatatable(partial_na_records, \n          options = list(pageLength = 5)) \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-6b82a277199356818c59\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-6b82a277199356818c59\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\"],[\"webigailba7\",\"venerable89c\",\"sturdyd7f\",\"stout369\",\"inquisitive8c0\",\"dewie961\",\"himarkroyal032\",\"mrray9c4\",\"manatee17ea\",\"hewey2ef\",\"honorablea6e\",\"clownfishe3d\",\"louietheii3e0\",\"respectable717\",\"spiritofoceanus404\",\"louieda4\",\"athenad34\",\"heartofoceanusf11\"],[\"Webigail\",\"Venerable\",\"Sturdy\",\"Stout\",\"Inquisitive\",\"Dewie\",\"Himark Royal\",\"Mr. Ray\",\"Manatee 1\",\"Hewey\",\"Honorable\",\"Clown Fish\",\"Louie the II\",\"Respectable\",\"Spirit of Oceanus\",\"Louie\",\"Athena\",\"Heart of Oceanus\"],[\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\"],[\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\"],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[50,null,null,null,null,75,null,null,null,75,null,null,75,null,null,75,null,null],[\"Other\",\"Ferry_Passenger\",\"Ferry_Cargo\",\"Ferry_Cargo\",\"Research\",\"Other\",\"Tour\",\"Tour\",\"Tour\",\"Other\",\"Ferry_Passenger\",\"Tour\",\"Other\",\"Ferry_Passenger\",\"Tour\",\"Other\",\"Research\",\"Tour\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>vessel_id<\\/th>\\n      <th>vessel_name<\\/th>\\n      <th>flag_country<\\/th>\\n      <th>vessel_company<\\/th>\\n      <th>tonnage<\\/th>\\n      <th>length_overall<\\/th>\\n      <th>vessel_type<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[5,6]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"vessel_id\",\"targets\":1},{\"name\":\"vessel_name\",\"targets\":2},{\"name\":\"flag_country\",\"targets\":3},{\"name\":\"vessel_company\",\"targets\":4},{\"name\":\"tonnage\",\"targets\":5},{\"name\":\"length_overall\",\"targets\":6},{\"name\":\"vessel_type\",\"targets\":7}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\n# merging ping with location details (region_id, city_id, point_id)\n## See how to deal with list within activites, and how to include region_kind\n## See if want to retain some description to identify point, region vs city\n\ncity_legend <- NL_City %>% \n  select(c(`city_id`, `Activities`, `kind`)) %>%\n  mutate(fish_species_present = \"NA\") %>%\n  rename(area = city_id)\n\npoint_legend <- NL_Point %>% \n  select(c(`point_id`, `Activities`))  %>%\n  mutate(kind = \"point\", \n         fish_species_present = \"NA\") %>%\n  rename(area = point_id)\n\nregion_legend <- NL_Region %>% \n  select(c(`region_id`, `Activities`, `region_kind`, `fish_species_present`))  %>%\n  rename(area = region_id, kind = region_kind)\n\nlocation_legend <- rbind(city_legend, point_legend, region_legend) \n\nwrite_csv(N_vessel, \"data/N_vessel.csv\")\nwrite_csv(location_legend, \"data/location_legend.csv\")\n\n#dropping unnecessary tables\nrm(mc2_data, mc2_nodes_tidied, partial_na_records, city_legend, point_legend, region_legend, partial_na_sum, partial_na_plot, mc2_nodes)\n```\n:::\n\n\n[Insights:]{.underline}\n\n-   Total of 18 vessels with partial NA\n-   All vessel company is \"Unknown\", belonging to Oceanus (flag_country = Oceanus)\n-   All 18 vessels fall under non fishing and non cargo_vessel type, hence, they will be excluded from our analysis.\n\n#### 2.2.5 Merging back the data after processing.\n\nTo incorporate context of the nodes details into the various edges, the related description of the nodes were appended to edge data sets. This helped to streamline the records into 3 consolidated data sets.\n\n+-------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n| Consolidated Data Set                                                                     | Resultant Edge Data Set                                                                                             | Mapped with Nodes Data Set                                                                             |\n+===========================================================================================+=====================================================================================================================+========================================================================================================+\n| Transaction (with cargo weight)                                                           | `tx_c`: Cargo_id, Destination, Transaction date, Fish species                                                       | `N_delivery_doc`: Cargo_id, quantity in tons, delivery date                                            |\n+-------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n| Ping activity (with vessel details by vessel_id, possible fish caught by location_legend) | `E_Tping_c`: Start_time, Dwell, Ping source, Vessel_id                                                              | `N_vessel`: Vessel_id, vessel name, vessel company, flag country, tonnage, overall length, vessel type |\n|                                                                                           |                                                                                                                     |                                                                                                        |\n|                                                                                           |                                                                                                                     | `location_legend`: Area, activities, kind, fish_species                                                |\n+-------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n| Habor Arrival Report\\                                                                     | `E_Hbrpt_c`: Vessel_id, Port, Key, Arrival date, Port master, Aphorism, Holiday Greeting, Saying of the Sea, Wisdom | `N_vessel`: Vessel_id, vessel name, vessel company, flag country, tonnage, overall length, vessel type |\n| (with vessel details)                                                                     |                                                                                                                     |                                                                                                        |\n+-------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# merging the quantity from delivery_doc with transaction based on cargo id\ntx_qty <- left_join(tx_c, N_Delivery_doc %>% select(cargo_id, qty_tons, deliver_date), by = \"cargo_id\")\n\n# Merging habor report with vessel details to identify type of vessel, tonnage and overall length \n\nE_Hbrpt_v <- left_join(E_Hbrpt_c, N_vessel %>% select(vessel_id, vessel_name, tonnage, length_overall, flag_country, vessel_company, vessel_type), by = \"vessel_id\")\n\n# Merging ping transaction with the location type\nE_Tping_c2 <- E_Tping_c %>% rename(area = ping_source)\nping_activity <- left_join(E_Tping_c2, location_legend %>% select(area, Activities, kind, fish_species_present), by = \"area\")\nping_activity <- left_join(ping_activity, N_vessel %>% select(vessel_id, vessel_name, tonnage, length_overall, flag_country, vessel_company, vessel_type), by = \"vessel_id\")\n\n# removing \"City of\" from the \"area column\" \nvessel_movement <- ping_activity %>%\n  mutate(area = gsub(\"^City of\", \"\", area)) %>%\n  mutate(area = gsub(\"^\\\\s+\", \"\", area))\n\n#write_csv(tx_qty, \"data/tx_qty.csv\")\n#write_csv(ping_activity, \"data/ping_activity.csv\")\n#write_csv(E_Hbrpt_v, \"data/hbrpt.csv\")\n\nrm(tx_c, E_Tping_c2, E_Tping_c, E_Hbrpt_c)\n```\n:::\n\n\n## 3. Exploratory Data Analysis\n\n### 3.0 Understanding areas in Oceanus\n\n*Reference: [Kickstarter 3](https://isss608-ay2023-24apr.netlify.app/vast/kickstarter3#overview) by Prof Kam*\n\n[Steps taken:]{.underline}\n\n1.  Import ESRI layer including the centriod details of geographical areas.\n2.  Extract coordinates from geographical data frame and appending to vessel movement data frame to plot the movement of vessels.\n3.  Filter the vessels of interest to the vessels belonging to \"South Seafood Express Corp\" and plot the routes taken by the 2 vessels, namely \"\"Snappersnatcher7be\", \"Roachrobberdb6\".\n\n[Visualisation improvement:]{.underline}\n\n1.  Color coding the regions for better identification of the type of region. (e.g., Beige for island, blue for fishing region and green for ecological reserves).\n\n[Insights from South Seafood Express Corp Vessels:]{.underline}\n\n-   For \"Snappersnatcher7be\", common cities visited are City of Lomark, City of Packland, with legal fishing area of Wrasse Beds and Cod Table and possible illegal fishing activity at Ghoti Reserve.\n\n-   For \"Roachrobberdb6\", common cities visited are City of Himark and City of Lomark, with legal fishing area of Wrasse Beds, and potential illegal fishing activity at Ghoti Reserve.\n\n\n::: {.cell}\n\n```{.r .cell-code}\noceanus_geog = st_read(\"data/Oceanus Geography.geojson\") %>% st_transform(crs = 4326)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Oceanus Geography' from data source \n  `C:\\sengjingyi\\ISSS608\\Take-home_Ex\\Take-home_Ex03\\data\\Oceanus Geography.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 29 features and 7 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -167.0654 ymin: 38.07452 xmax: -163.2723 ymax: 40.67775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n# basic plot of underlying geography (polygons, points)\n# ggplot(data = oceanus_geog) + geom_sf()\n# write_rds(oceanus_geog, \"data/rds/OceanusGeography.rds\")\n\nOceanusLocations <- st_read(dsn = \"data/shp\",\n  layer = \"Oceanus Geography\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Oceanus Geography' from data source \n  `C:\\sengjingyi\\ISSS608\\Take-home_Ex\\Take-home_Ex03\\data\\shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 27 features and 7 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -167.0654 ymin: 38.07452 xmax: -163.2723 ymax: 40.67775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nwrite_rds(OceanusLocations, \n  \"data/rds/OceanusLocations.rds\")\n\n# extract coordinates from df\ncoords <- st_coordinates(OceanusLocations)\n\n# drop geometry columns\nOceanusLocations_df <- OceanusLocations %>%\n  st_drop_geometry()\n\n# append x and y coordinates into df as columns\nOceanusLocations_df$XCOORD <- coords[, \"X\"]\nOceanusLocations_df$YCOORD <- coords[, \"Y\"]\n\n# tidy df by renaming column \nOceanusLocations_df <- OceanusLocations_df %>%\n  select(Name, X.Kind, XCOORD, YCOORD) %>%\n  rename(Loc_Type = X.Kind)\n\n# left join to append back to vessel movement \n\nvessel_movement <- vessel_movement %>%\n  left_join(OceanusLocations_df,\n            by = c(\"area\" = \"Name\"))\n\n# save file as vessel_movement_data.data.frame\n\nwrite_rds(vessel_movement, \"data/rds/vessel_movement_data.rds\")\n\n# convert vessel movement data.frame into sf point data.frame \nvessel_movement_sf <- vessel_movement %>%\n  st_as_sf(coords = c(\"XCOORD\", \"YCOORD\"), \n           crs = 4326)\n\n# arrange record based on vessel name and navigation time \nvessel_movement_sf <- vessel_movement_sf %>%\n  arrange(vessel_id, start_time)\n\n# convert vessel movement sf from point into linestring features known as vessel trajectory\nvessel_trajectory <- vessel_movement_sf %>%\n  group_by(vessel_id) %>%\n  summarize(do_union = FALSE) %>%\n  st_cast(\"LINESTRING\")\n\n## include placeholder for vessel of interest and colors assigned\n\nvessels_of_interest <- c(\"snappersnatcher7be\", \"roachrobberdb6\")\nvessel_colors <- c(\"snappersnatcher7be\" = \"red\", \"roachrobberdb6\" = \"purple\")\n\n# creating route for selected vessel \nvessel_trajectory_selected <- vessel_trajectory %>%\n  filter(vessel_id %in% vessels_of_interest)\n\n# defining colors for X.kind\n\nkind_colors <- c(\n  \"Island\" = \"beige\", \n  \"Fishing Ground\" = \"lightblue\", \n  \"Ecological Preserve\" = \"lightgreen\", \n  \"city\" = \"purple\", \n  \"buoy\" = \"blue\")\n\nggplot() +\n  geom_sf(data = oceanus_geog, aes(fill = X.Kind), color = \"black\") +\n  scale_fill_manual(values = kind_colors) + \n  geom_sf(data = vessel_trajectory_selected, \n          aes(color = vessel_id), \n          size = 1) +\n  scale_color_manual(values = vessel_colors) + \n  geom_text(data = OceanusLocations_df, \n            aes(x = XCOORD, y = YCOORD, label = Name), \n            size = 2, hjust = 1, vjust = 1) +\n  theme_minimal() +\n  labs(title = \"Trajectories of South Seafood Express Corp\", \n       x = \"Longitude\", y = \"Latitude\", color = \"Vessel ID\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_EDA_1_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### 3.1 Understanding possible fish species and signs of illegal fishing\n\n[Steps taken:]{.underline}\n\n1.  Unlist the fish species appended in the initial node of `region` and spread it across the table to form a matrix to identify the possible fish species identified in each region.\n2.  Contrast the fish species from region identified with the fish species caught based on the cargo transactions to detect any deviation that requires further investigation.\n3.  Plot a bar graph to visualisation the\n\n[Visualisation improvement:]{.underline}\n\n1.  Color coding the fish species representation for easier identification of illegal fish species in `red` and commonly caught fish species in `blue`, with additional fish species of \"Salmon\" in `yellow` for further investigation.\n2.  Factoring the `fish species` in order to reorder the layers of the stacked bar graph such that illegal fish species are clustered together at the base, followed by regular fish species and lastly the unexpected fish species at the top.\n3.  Factoring the `destination city` such that the graph is ordered in descending order based on transaction quantity in tons.\n4.  Including variable time frame (with `earliest_date` and `latest_date`) for selection of period of interest when looking at the summary of cargo of interest.\n\n[Insights]{.underline}\n\n-   3 fish species are only present in ecological reserves: (1) Offidiaa/Piscis osseus, (2) Sockfish/Pisces foetida and (3) Helenaa/Pisces satis.\n\n-   Hence, any cargo with these fish species have likely violated fishing regulations and fished in ecological reserves. (1) Don Limpet Preserve, (2) Ghoti Preserve and (3) Nemo Reefs.\n\n-   Additional species of \"oncorhynchusrosea790\" identified with the cargo transactions. Referencing the internet fish species, this refers to the commonly known species of \"Salmon\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Formatting region data to identify fish type in region\nregion_species <- NL_Region %>%\n  mutate(fish_species_present = gsub('c\\\\(|\\\\)|\"', \"\", fish_species_present), \n    fish_species_present = strsplit(as.character(fish_species_present), \", \")) %>%\n  unnest(fish_species_present) %>%\n  mutate(presence = 1) %>%\n  spread(key = fish_species_present, value = presence, fill = 0)\n\nregion_species_c <- region_species %>% \n  select( -region_id, -last_edited_by, -last_edited_date, -date_added)\n\nkable(region_species_c)\n```\n\n::: {.cell-output-display}\n\n\n|region_name         |Activities                        |region_kind         | Beauvoir/Habeas pisces| Birdseye/Pisces frigus| Cod/Gadus n.specificatae| Harland/Piscis sapidum| Helenaa/Pisces satis| Offidiaa/Piscis osseus| Sockfish/Pisces foetida| Tuna/Thunnini n.vera| Wrasse/Labridae n.refert|\n|:-------------------|:---------------------------------|:-------------------|----------------------:|----------------------:|------------------------:|----------------------:|--------------------:|----------------------:|-----------------------:|--------------------:|------------------------:|\n|Don Limpet Preserve |Recreation, Tourism               |Ecological Preserve |                      1|                      1|                        0|                      0|                    1|                      0|                       1|                    1|                        0|\n|Cod Table           |Commercial fishing                |Fishing Ground      |                      1|                      1|                        1|                      0|                    0|                      0|                       0|                    0|                        0|\n|Tuna Shelf          |Commercial fishing, Sport fishing |Fishing Ground      |                      1|                      1|                        0|                      1|                    0|                      0|                       0|                    1|                        0|\n|Ghoti Preserve      |Research, Tourism, Recreation     |Ecological Preserve |                      1|                      0|                        0|                      0|                    1|                      1|                       0|                    0|                        1|\n|Nemo Reef           |Recreation, Tourism               |Ecological Preserve |                      1|                      1|                        0|                      0|                    1|                      0|                       0|                    1|                        1|\n|Wrasse Beds         |Commercial fishing                |Fishing Ground      |                      1|                      1|                        0|                      0|                    0|                      0|                       0|                    0|                        1|\n\n\n:::\n\n```{.r .cell-code}\n# comparing the list of unique fish species in the tx_qty\nunique_fish_cargo <- unique(tx_qty$fish_species)\n\n# unique_fish_cargo has additional species of salmon - oncorhynchusrosea790\n\n#Aligning the naming convention for fish species\n\nfish_species_labels <- c(\n  \"gadusnspecificatae4ba\" = \"Cod/Gadus n.specificatae\", \n  \"piscesfrigus900\" = \"Birdseye/Pisces frigus\", \n  \"piscesfoetidaae7\" = \"Sockfish/Pisces foetida\", # illegal\n  \"labridaenrefert9be\" = \"Wrasse/Labridae n.refert\", \n  \"habeaspisces4eb\" = \"Beauvoir/Habeas pisces\", \n  \"piscissapidum9b7\" = \"Harland/Piscis sapidum\", \n  \"thunnininveradb7\" = \"Tuna/Thunnini n.vera\", \n  \"piscisosseusb6d\" = \"Offidiaa/Piscis osseus\", # illegal\n  \"piscessatisb87\" = \"Helenaa/Pisces satis\" # illegal\n)\n\n## assign specific colors to fish species, red for illegal. \n\nfish_species_color <- c(\"piscesfoetidaae7\" = \"#FF6666\", \n                        \"piscisosseusb6d\" = \"#FF9999\", \n                        \"piscessatisb87\" = \"#FFCCCC\", \n                        \"gadusnspecificatae4ba\" = \"#CCE5FF\", \n                        \"piscissapidum9b7\" = \"#99CCFF\", \n                        \"habeaspisces4eb\" = \"#66B2ff\", \n                        \"piscesfrigus900\" = \"#CCE5FF\", \n                        \"oncorhynchusrosea790\" = \"#FFFF99\", \n                        \"labridaenrefert9be\" = \"#99CCFF\", \n                        \"thunnininveradb7\" = \"#66b2ff\"\n                        )\n\n# include paramters for users to change for timeframe\ntx_qty$tx_date <- as.Date(tx_qty$tx_date, format = \"%Y-%m-%d\")\n\nearliest_date <- min(tx_qty$tx_date, na.rm = TRUE)\nlatest_date <- max(tx_qty$tx_date, na.rm = TRUE)\n\n## filtering the data set of interest \n\ntx_qty_of_interest <- tx_qty %>% \n  filter(tx_date >= earliest_date & tx_date <= latest_date)\n\n# summarise total tons of fish per location\ntotal_qty_tons_per_dest <- tx_qty_of_interest %>%\n  group_by(dest, fish_species) %>%\n  summarize(total_qty_tons = sum(qty_tons, na.rm = TRUE)) %>%\n  ungroup()\n\n# reordering levels for fish species for tidier plot\ntotal_qty_tons_per_dest$fish_species <- factor(\n  total_qty_tons_per_dest$fish_species, \n  levels = c(\"gadusnspecificatae4ba\", \"piscissapidum9b7\", \"habeaspisces4eb\", \n             \"piscesfrigus900\", \"labridaenrefert9be\", \"thunnininveradb7\", \n             \"oncorhynchusrosea790\", # unidentified - Salmon\n             \"piscesfoetidaae7\",\"piscisosseusb6d\", \"piscessatisb87\" )) #illegal\n\n# reordering levels to arrange bars in descending order \ntotal_qty_tons_per_dest$dest <- factor(\n  total_qty_tons_per_dest$dest, \n  levels = c(\"City of Paackland\", \"City of Himark\", \"City of Lomark\", \"City of South Paackland\", \"City of Haacklee\" )) \n\n\n# plot identifying occurence of illegal fish species at various port - identifying all unique fish species in cargo report (tx_qty)\n\np_qty_dest <- ggplot(total_qty_tons_per_dest, \n       aes(x = dest, y = total_qty_tons, fill = fish_species)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = fish_species_color,  labels = fish_species_labels) +\n  labs(title = \"Total Quantity of Fish by Destination and Species\",\n       x = \"Destination\",\n       y = \"Total Quantity (tons)\",\n       fill = \"Fish Species\") +\n  theme_minimal(base_size = 8) +\n  theme(axis.line = element_line(color = \"black\"))\n\np_qty_dest\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_EDA_1_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### 3.2 Understanding Ownership of Vessels\n\n[Steps taken:]{.underline}\n\n1.  Group vessels by company and type to count the number of vessel type per company.\n2.  Arrange the calculated table by descending order of vessels.\n3.  Focusing on the key categories of \"Fishing\", plot a bar chart on the count of company that owns the \"x\" no. of vessels.\n4.  Hence we will visualise the mapping of company to vessels for company that owns 4 or more vessels. (\"No of vessels of interest\" is set to adjustable threshold)\n\n[Visualisation Improvements:]{.underline}\n\n1.  Summed the count of known companies with \"Fishing Vessels\"\n2.  Highlighted the names of companies with 4 or more fishing vessels, likely to be larger companies, based on adjustable parameter of `no_of_interest`.\n3.  Mapped the name of the fishing vessels associated with these companies of interest.\n\n[Insights:]{.underline}\n\n-   For Cargo_vessels, 99 counts of vessels with \"Unknown\" company, only 1 \"Cargo vessel\" with known company of \"Saltwater Sisters Company Marine\".\n\n-   Only Saltwater Sisters Company Marine has 2 types of vessel, vessels of other vessel_types (Tour, Research, Other) belong to \"Unknown\" companies.\n\n-   All other known companies own fishing vessels, where 45 companies own 1 vessel, 36 companies own 2, 13 companies own 3 and 5 companies own 4 or more.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvessel_per_type_company <- N_vessel %>% \n  group_by(vessel_company, vessel_type) %>% \n  summarise(vessel_type_count = n()) %>% \n  arrange(vessel_type_count)\n\nvessel_type_company <- vessel_per_type_company %>% \n  group_by(vessel_company) %>% \n  summarise(vessel_count = n()) %>% \n  arrange(vessel_count)\n\n# expose datatable on the count of vessel type per company. \n\ndatatable(vessel_per_type_company, \n          options = list(pageLength = 5), \n          filter = \"top\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-fca9050436880bb916f1\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-fca9050436880bb916f1\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td><\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"integer\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"1\\\" data-max=\\\"99\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\"],[\"Adkins LLC\",\"Bailey-Mccullough\",\"BaringoAmerica Marine Ges.m.b.H.\",\"Barnes and Sons\",\"Brewer-Massey\",\"Chambers, Hall and Walker\",\"Chase, Long and Anderson\",\"Collins, Johnson and Lloyd\",\"Conley, Benton and Miller\",\"Cox-Donovan\",\"Cox-Mason\",\"Davis, Harris and West\",\"Dry CreekWorldLogistics Ltd. Liability Co\",\"Fischer, Graham and Robinson\",\"FlounderLeska Marine BV\",\"French Ltd\",\"George-Brown\",\"Goodman LLC\",\"Harper and Sons\",\"Henry-Alvarez\",\"Hernandez Group\",\"Horne Group\",\"Lake Malawi  Corp United\",\"Maacama Ocean Worldwide LLC\",\"Martin-Case\",\"Mcdonald-Jones\",\"Miller, Smith and Reed\",\"MonarchCreek Shipping S.p.A.\",\"Newton-Meyer\",\"Norman LLC\",\"NortheastSeafood Carriers Ltd\",\"Osborne and Sons\",\"Rasmussen, Nelson and King\",\"Reid, Thomas and Gill\",\"Riley Inc\",\"Rivera Group\",\"Roth, Logan and Moreno\",\"Saltwater Sisters Company Marine\",\"Saltwater Sisters Company Marine\",\"SamakaDredgeTransport OJSC\",\"ScaniaSeafood Holdings Ltd. Liability Co\",\"Sparmans Marine Carriers Oyj\",\"Stewart, Perkins and Sanchez\",\"Vasquez-Gonzalez\",\"Wiley LLC\",\"Wolf and Sons\",\"Bennett, Jones and Miller\",\"Bowers Group\",\"Brown, Clarke and Martinez\",\"Brown-Allen\",\"Callahan-Green\",\"Carter, Mcdonald and Miller\",\"Clark, Hall and Cole\",\"Cordova, Ritter and Flores\",\"Costa de Oro Enterprises\",\"Decker PLC\",\"Dyer-Campbell\",\"Franco, Olson and Long\",\"Green, Vincent and Thompson\",\"Jacobson Inc\",\"Jordan and Sons\",\"Lane Group\",\"Lowery-Myers\",\"Mcpherson-Wright\",\"Mercado, French and Graham\",\"Mooney, Stevenson and Miller\",\"Mullins-Carrillo\",\"Murphy and Sons\",\"Parks Ltd\",\"Rodriguez, Henry and Woodard\",\"Schmidt Ltd\",\"Smith, Davis and Acosta\",\"Solis PLC\",\"SouthSeafood Express Corp\",\"Steele PLC\",\"Sutton PLC\",\"Tainamarine Fishing Co\",\"Taylor-Sawyer\",\"Thompson-Padilla\",\"Unknown\",\"Unknown\",\"Weaver-Baker\",\"WestRiver Shipping KgaA\",\"Williams, Horn and Morales\",\"Ballard-Bailey\",\"Bell, Reynolds and Forbes\",\"Brown-Haas\",\"Chavez and Sons\",\"Cisneros-Meyer\",\"Faulkner, Shaffer and Moyer\",\"Garcia-Sanchez\",\"Garcia-Wallace\",\"Gomez-Mccormick\",\"House Group\",\"Mendez-Tyler\",\"Smith, Collins and Johnson\",\"Terry, Smith and Lyons\",\"Unknown\",\"Mccormick Group\",\"Nielsen, Valentine and Bell\",\"Robinson, Mcmillan and Watson\",\"Solis-Lopez\",\"Unknown\",\"Ritter Ltd\",\"Unknown\",\"Unknown\"],[\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Cargo_Vessel\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Ferry_Cargo\",\"Research\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Ferry_Passenger\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Other\",\"Fishing\",\"Tour\",\"Cargo_Vessel\"],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,5,6,6,99]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>vessel_company<\\/th>\\n      <th>vessel_type<\\/th>\\n      <th>vessel_type_count<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"vessel_company\",\"targets\":1},{\"name\":\"vessel_type\",\"targets\":2},{\"name\":\"vessel_type_count\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\n# Hence for plot, we will focus on vessel_type = \"fishing\" and \"cargo_vessel\"\n\nfish_vessel <- vessel_per_type_company %>% filter(vessel_type == \"Fishing\") %>% as.data.table\nfish_vessel_sum <- fish_vessel[, .(company_count = .N, company_names = toString(vessel_type_count)), by = vessel_type_count]\n\n#enforcing all x axis values for clearer depiction by introducing breaks\nfish_v_count_range <- seq(min(fish_vessel_sum$vessel_type_count), max(fish_vessel_sum$vessel_type_count))\n\n# introduce wrap text function to limit company name within the column\nwrap_text <- function(text, width = 15) {\n  sapply(text, function(x) {\n    paste(strwrap(x, width = width), collapse = \"\\n\")\n  })\n}\n\n# applying to column\nfish_vessel_sum$wrapped_company_names <- wrap_text(fish_vessel_sum$company_names)\n\n# creating plot\ncompany_vessel_count <- ggplot(fish_vessel_sum, aes(x = vessel_type_count, y = company_count)) +\n  geom_bar(stat = \"identity\", fill = \"#00CCCC\", color = \"black\") +\n  geom_text(aes(label = company_count), vjust = -0.5, size = 3) +\n  scale_x_continuous(breaks = fish_v_count_range) +\n  labs(title = \"No. of fishing vessels Owned by companies\",\n       x = \"Number of Vessels Owned\",\n       y = \"Count of Companies\") +\n  theme_minimal(base_size = 8) + \n  theme(axis.line = element_line(color = \"black\"))+ \n\n# including annotation ()\n annotate(\"rect\", xmin = 3.5, xmax = 6.5, ymin = 0, ymax = Inf, \n           alpha = 0, color = \"#FFBF00\", fill = NA) +\n\n annotate(\"text\", x = 6, y = 5, label = \"Ritter Ltd\", size = 2) +\n  annotate(\"text\", x = 4, y = 20, label = \"McCormick Group,\\nNielsen,\\nValentine and Bell,\\nRobinson,\\nMcMillan and Watson,\\nSolis-Lopez\", size = 2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# creating subset\nno_of_interest = 4\ncompany_of_interest <- fish_vessel %>% filter(vessel_type_count >= no_of_interest)\n\nint_fish_v_mapping <- N_vessel %>% filter(vessel_company %in% company_of_interest$vessel_company) %>% select(vessel_id, vessel_company, tonnage)\n\n# data wrangling to fit into network graph\nedges <- int_fish_v_mapping %>%\n  select(vessel_id, vessel_company)\n\n# Create nodes for vessels\nnodes <- int_fish_v_mapping %>%\n  select(vessel_id, tonnage) %>%\n  distinct() %>%\n  rename(name = vessel_id) %>%\n  mutate(type = \"vessel\")\n\n# Create nodes for companies\ncompany_nodes <- data.frame(name = unique(int_fish_v_mapping$vessel_company)) %>%\n  mutate(type = \"company\")\n\n# Combine nodes\nall_nodes <- bind_rows(nodes, company_nodes)\n\n# Create the graph object using igraph\nnetwork <- graph_from_data_frame(d = edges, vertices = all_nodes, directed = FALSE)\n\n# Add tonnage as a vertex attribute, ensuring NA values are handled\nV(network)$tonnage <- ifelse(is.na(V(network)$tonnage), 0, V(network)$tonnage)\n\n# Add node type as a vertex attribute\nV(network)$type <- all_nodes$type\n\n# Plot the network graph using ggraph\nmap_vessel_company <- ggraph(network, layout = 'fr') +\n  geom_edge_link(aes(edge_alpha = 0.5), show.legend = FALSE) +\n  geom_node_point(aes(size = tonnage, color = type), show.legend = TRUE) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 2) +\n  scale_color_manual(values = c(\"vessel\" = \"#00CCCC\", \"company\" = \"black\")) +\n  theme_void(base_size = 8) +\n  labs(title = \"Network Graph of Vessels and Companies\",\n       size = \"Tonnage\",\n       color = \"Node Type\") + theme(legend.position = \"bottom\")\n\ncompany_vessel_count | map_vessel_company\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_EDA_1_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# cleaning environment\nrm(no_of_interest, company_of_interest, int_fish_v_mapping, edges, nodes, company_nodes, all_nodes, network, map_vessel_company)\n```\n:::\n\n\n### 3.3 Exploring distribution of Vessels by Tonnage\n\n[Steps taken:]{.underline}\n\n1.  \n\n[Visualisation improvements:]{.underline}\n\n[Insights:]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Defining vessel colors \nvessel_colors <- c(\"Fishing\" = \"#00CCCC\", \n    \"Cargo_Vessel\" = \"#994C00\", \n    \"Ferry_Cargo\" = \"#C0C0C0\", \n    \"Ferry_Passenger\" = \"#C0C0C0\",\n    \"Research\" = \"#C0C0C0\",\n    \"Tour\" = \"#C0C0C0\", \n    \"Other\" = \"#C0C0C0\")\n\n#unique(N_vessel$vessel_type)\n\nscatter_ton_len <- ggplot(data= N_vessel, \n            aes(x= tonnage, \n                y= length_overall, \n                color= vessel_type)) +\n  geom_point() + \n  scale_color_manual(values = vessel_colors) + \nlabs(title = \"Scatter Plot of Vessels by Size\", \nx = \"Vessel Tonnage\", \ny = \"Vessel Length\") + \n  theme_minimal(base_size = 8) + \n  theme(legend.position = \"top\", \n        axis.line = element_line(color = \"black\"))\n\nvessel_count <- N_vessel %>%\n  group_by(vessel_type) %>%\n  summarize(vessel_no = n()) %>% \n  mutate(vessel_type = reorder(vessel_type, - vessel_no))\n\n\nbar_vessel_type <- ggplot(data = vessel_count, \n                          aes(x = vessel_type, \n                              y = vessel_no, fill = vessel_type)) + \n  geom_bar(stat = \"identity\") + \n  scale_fill_manual(values = vessel_colors) + \n  geom_text(aes(label = vessel_no), vjust = -0.8, size = 2) +\n  labs(title = \"Count of Vessels by Type\", \nx = \"Type of vessels registered\", \ny = \"No. of vessels\") + \n  theme_minimal(base_size = 8) + \n  theme(axis.text.x = element_text(size = 5), \n        axis.line = element_line(color = \"black\")) \n\nscatter_ton_len | bar_vessel_type\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_EDA_1_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nrm(scatter_ton_len, bar_vessel_type, vessel_count)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# segmenting data set to focus on fishing and cargo vessels \n\nfishing_v <- N_vessel %>% filter(vessel_type == \"Fishing\")\ncargo_v <- N_vessel %>% filter(vessel_type == \"Cargo_Vessel\")\n\n# calculating the quantiles for the respective vessel type \n\nfishing_v_ton_quant <- fishing_v %>%\n  summarise(\n    q25 = quantile(tonnage, 0.25),\n    median = median(tonnage),\n    q75 = quantile(tonnage, 0.75)\n  )\n\ncargo_v_ton_quant <- cargo_v %>%\n  summarise(\n    q25 = quantile(tonnage, 0.25),\n    median = median(tonnage),\n    q75 = quantile(tonnage, 0.75)\n  )\n\n# plot for fishing vessel distribution of tonnage\nfishing_v_dist <- ggplot(fishing_v, aes(x = tonnage)) +\n  geom_histogram(binwidth = 500, fill = \"#00CCCC\", color = \"black\") +\n  annotate(\"rect\", xmin = 12500, xmax = Inf, ymin = -Inf, ymax = Inf, \n    alpha = 0, color = \"#FFBF00\") +\n  geom_vline(aes(xintercept = fishing_v_ton_quant$q25), \n    color = \"blue\", linetype = \"dashed\") +\n  geom_vline(aes(xintercept = fishing_v_ton_quant$median),\n   color = \"red\", linetype = \"dashed\") +\n  geom_vline(aes(xintercept = fishing_v_ton_quant$q75), \n    color = \"blue\", linetype = \"dashed\") +\n  annotate(\"text\", x = fishing_v_ton_quant$q25, y = 30, \n    label = paste(\"25%\", fishing_v_ton_quant$q25) , vjust = -1, size = 3) +\n  annotate(\"text\", x = fishing_v_ton_quant$median, y = 30, \n    label = paste(\"50%\",fishing_v_ton_quant$median), vjust = -1, size = 3) +\n  annotate(\"text\", x = fishing_v_ton_quant$q75, y = 30, \n    label = paste(\"75%\", fishing_v_ton_quant$q75),  vjust = -1, size = 3) + \n  labs(title = \"Distribution of Fishing Vessels by Tonnage\",\n       x = \"Tonnage\",\n       y = \"Frequency\") +\n  theme_minimal(base_size = 8) + \n  theme(axis.line = element_line(color = \"black\")) + \n  coord_flip()\n\n# Adjust label to readable format \n# Adjust order so that the text is above the \n\ncargo_v_dist <- ggplot(cargo_v, aes(x = tonnage)) +\n  geom_histogram(binwidth = 500, fill = \"#994C00\", color = \"black\") +\n annotate(\"rect\", xmin = -Inf, xmax = 5000, ymin = -Inf, ymax = Inf, alpha = 0, color = \"#FFBF00\") +\n  annotate(\"rect\", xmin = 70000, xmax = Inf, ymin = -Inf, ymax = Inf, alpha = 0, color = \"#FFBF00\") +\n  geom_vline(aes(xintercept = cargo_v_ton_quant$q25), color = \"blue\", linetype = \"dashed\") +\n  geom_vline(aes(xintercept = cargo_v_ton_quant$median), color = \"red\", linetype = \"dashed\") +\n  geom_vline(aes(xintercept = cargo_v_ton_quant$q75), color = \"blue\", linetype = \"dashed\") +\n  annotate(\"text\", x = cargo_v_ton_quant$q25, y = 30, \n    label = paste(\"25%\", cargo_v_ton_quant$q25), vjust = -1, size = 3) +\n  annotate(\"text\", x = cargo_v_ton_quant$median, y = 30, \n    label = paste(\"50%\",cargo_v_ton_quant$median), vjust = -1, size = 3) +\n  annotate(\"text\", x = cargo_v_ton_quant$q75, y = 30, \n    label = paste(\"75%\", cargo_v_ton_quant$q75), vjust = -1, size = 3) +\n  labs(title = \"Distribution of Cargo Vessels by Tonnage\",\n       x = \"Tonnage\",\n       y = \"Frequency\") +\n  theme_minimal(base_size = 8) + \n  theme(axis.line = element_line(color = \"black\")) + \n  coord_flip()\n\n#summary(fishing_v) - min: 100, q1: 600, median: 2400, q3: 4850, max: 17200 - investigate\n#summary(cargo_v) - min: 2100, q1: 2100, median: 23750, q3: 74925, max: 76300 - Investigate \n\nfishing_v_dist | cargo_v_dist\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_EDA_1_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### 3.4 Exploring Dwell of Vessels of Interest \n",
    "supporting": [
      "Take-home_Ex03_EDA_1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/nouislider-7.0.10/jquery.nouislider.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/nouislider-7.0.10/jquery.nouislider.min.js\"></script>\n<link href=\"../../site_libs/selectize-0.12.0/selectize.bootstrap3.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/selectize-0.12.0/selectize.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}