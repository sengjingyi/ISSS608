{
  "hash": "e9ff61129e3cd1321b6403ce99e9f004",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 3 - Exploratory Data Analysis\"\nauthor: \"Seng Jing Yi\"\ndate: \"May 18, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\neditor: visual\n\nformat:\n  html:\n    code-fold: true\n---\n\n\n# Exploring Vast Challenge 2024 - Mini-challenge 2\n\n## 1. Introduction:\n\n### 1.1 Setting the scene:\n\nFishEye has learned that SouthSeafood Express Corp has been caught fishing illegally. The scandal caused a major disruption in the close-knit fishing community. FishEye has been collecting data on ship movements and shipping records in hopes that they could assemble a cohesive store of knowledge that will allow them to better understand local commercial fishing behavior.\n\n### 1.2 Key Objectives of this assignment:\n\nFishEye analysts need help to perform geographic and temporal analysis of the CatchNet data so they can prevent illegal fishing from happening again. This assignment will focus on sub-questions 1 & 4, namely:\n\n+------------+----------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------+\n| Sub-qn     | Objectives                                                                                                                                         | Techniques Used                                              |\n+============+====================================================================================================================================================+==============================================================+\n| 1          | Visualization system to associate vessels with their probable cargos, including seasonality analysis to detect any anomalies in port exit records. | Visualising geographical data                                |\n|            |                                                                                                                                                    |                                                              |\n|            |                                                                                                                                                    | Visualisation with Treemap                                   |\n+------------+----------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------+\n| 4          | Visualizing changes in fishing activities after SouthSeafood Express was caught.                                                                   | Analysing time series                                        |\n|            |                                                                                                                                                    |                                                              |\n|            |                                                                                                                                                    | Visual multi-variate analysis with parallel coordinates plot |\n+------------+----------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------+\n\n## 2. Data Import & Processing\n\n### 2.1 Loading relevant packages and data\n\n+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+\n| Packages Used                                            | Purpose                                                                                                            |\n+==========================================================+====================================================================================================================+\n| jsonlite, sf                                             | Importing JSON file and geojson for geographical data                                                              |\n+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+\n| tidyverse, lubridate, dplyr, readr, reshape2, data.table | Data wrangling and reshaping in preparation for visualisation and wrap text function                               |\n+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+\n| ggplot2, tidygraph, patchwork, sf, ggrepel               | Statistical graph and geographical plots with points and polygons and tidying of graphs for clarity and aesthetics |\n+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+\n| DT, igraph, ggraph, plotly, visNetwork, ggiraph          | For interactive graph and data table for user to drill down on area of interest                                    |\n+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load package\npacman::p_load(jsonlite, tidyverse, tidyr, \n               knitr, lubridate, dplyr, \n               igraph, ggraph, ggdist, ggplot2, \n               sf, tidygraph, reshape2, readr,\n               DT, patchwork,plotly, data.table, ggrepel)\n\n# load data\nmc2_data <- fromJSON(\"data/mc2.json\")\n```\n:::\n\n\n### 2.2. Data Cleaning\n\n*Reference: [Kickstarter 2](https://isss608-ay2023-24apr.netlify.app/vast/kickstarter2) by Prof Kam*\n\n#### 2.2.1 Extracting edges & understanding edge tibble data table.\n\n1.  Extracting JSON file `edges` to tibble data frame and removing duplicates\n2.  Converting to the correct data types for datetime\n3.  Renaming columns starting with \"\\_ xx\\_\" to minimize downstream syntax errors.\n4.  Creating subsets of data tables based on column of \"type\"\n5.  Renaming of columns to provide context and unique identifiers for downstream data mapping.\n6.  Specifically for `tx_c`, adjustment of transaction date, T0 to T-1 as fish import generally leave harbor one day after delivery\n7.  Resultant data sets include:\n\n+------------------------------------+--------------------------------------------------------------------------------------------------------+\n| Resultant Edges Data Set           | Unique columns                                                                                         |\n+====================================+========================================================================================================+\n| Transactions (i.e., tx_c)          | Cargo_id, Destination, Transaction date, Fish species                                                  |\n+------------------------------------+--------------------------------------------------------------------------------------------------------+\n| Transponder Ping (i.e., E_Tping_c) | Start_time, Dwell, Ping source, Vessel_id                                                              |\n+------------------------------------+--------------------------------------------------------------------------------------------------------+\n| Habor Arrival Report (E_Hbrpt_c)   | Vessel_id, Port, Key, Arrival date, Port master, Aphorism, Holiday Greeting, Saying of the Sea, Wisdom |\n+------------------------------------+--------------------------------------------------------------------------------------------------------+\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#assigning to mc2_edges2\nmc2_edges <- as_tibble(mc2_data$links) %>% \n  distinct() \n\n#correcting data type - converting to date format\nmc2_edges$time <- as_datetime(mc2_edges$time)\nmc2_edges$\"_last_edited_date\" <- as_datetime(mc2_edges$\"_last_edited_date\")\nmc2_edges$\"_date_added\" <- as_datetime(mc2_edges$\"_date_added\")\nmc2_edges$date <- as_datetime(mc2_edges$date)\n\n\n#renaming headers with \"_\" to prevent errors. \nmc2_edges <- mc2_edges %>%\n  rename(\"last_edited_by\" = \"_last_edited_by\",\n         \"date_added\" = \"_date_added\",\n         \"last_edited_date\" = \"_last_edited_date\",\n         \"raw_source\" = \"_raw_source\",\n         \"algorithm\" = \"_algorithm\") \n\n#checking data format\n#glimpse(mc2_edges)\n\n# Breaking into subsets based on event category\nE_TransponderPing <- subset(mc2_edges,  mc2_edges$type == \"Event.TransportEvent.TransponderPing\")\nE_HarborRpt <- subset(mc2_edges,  mc2_edges$type == \"Event.HarborReport\")\nE_Tx <- subset(mc2_edges, mc2_edges$type == \"Event.Transaction\")\n\n# Dropping columns that are NULL and renaming variables to separate them\n\n# Transactions\nE_Tx_c <- E_Tx %>%\n  rename(\n  cargo_id = source, \n  dest = target,\n  tx_date = date) %>%\n  mutate(tx_date = tx_date -1) %>% # adjustment for records\n  select(-c(key, algorithm, `raw_source`, `type`, `data_author`, `aphorism`, `holiday_greeting`, `wisdom`, `saying of the sea`, `time`, `dwell`)) \n\n# Separating the fish species for the respective cargo \ntx_sub1 <- E_Tx_c[grep(\"^City of\", E_Tx_c$dest), ]\ntx_sub2 <- E_Tx_c[!grepl(\"^City of\", E_Tx_c$dest), ]\ntx_sub2 <- tx_sub2 %>% rename(fish_species = dest)\n\ntx_c <- left_join(tx_sub1, tx_sub2 %>% select(cargo_id, fish_species), by = \"cargo_id\")\n\n# Dropping raw source: All Oceanus Centralized Export/Import Archive and Notatification Service (OCEANS)\n# Dropping algorithm: CatchMate ('arrrr' edition)\n# Null columns - Data author, aphorism, holiday_greeting, wisdom, saying of the sea, time, dwell\n\n# Transponder Ping\nE_Tping_c <- E_TransponderPing %>%\n  rename(vessel_id = target, \n         ping_source = source,\n         start_time = time) %>%\n  select(-c(key, `algorithm`, `raw_source`, `type`, `date`, `data_author`, `aphorism`, `holiday_greeting`, `wisdom`, `saying of the sea`)) \n\n#Dropping raw_source: All Oceanus Vessel Locator System\n#Dropping algorithm: All OVLS-Catch&Hook\n# Null columns - Date, Data author, aphorism, holiday_greeting, wisdom, saying of the sea\n\n# Habour Report\nE_Hbrpt_c <- E_HarborRpt %>% rename(\n  vessel_id = source, \n  port = target, \n  arr_date = date, \n  port_master = data_author, \n  saying = `saying of the sea`\n) %>%\n  select(-c(`algorithm`, `type`, `time`, `dwell`)) \n\n#Dropping algorithm: All HarborReportMaster 3.11\n#Retain raw_source: Differing values depending on which Port / City\n\nrm(tx_sub1, tx_sub2, E_TransponderPing,  E_HarborRpt, E_Tx, mc2_edges, E_Tx_c)\n```\n:::\n\n\n#### 2.2.2 Extracting nodes & understanding nodes tibble data table.\n\nRepeating similar steps for `nodes` records, we obtained the following resultant data set. To minimize the number of data sets, we appended nodes information on vessels and region into a combined data set, with an assigned label to identify it's category. (e.g., vessel_type)\n\n+------------------------------------------+--------------------------------------------------------------------------------------------+\n| Resultant Nodes Data Sets                | Unique Columns                                                                             |\n+==========================================+============================================================================================+\n| N_fish (Fishes and their description)    | Fish_id, fish species                                                                      |\n+------------------------------------------+--------------------------------------------------------------------------------------------+\n| N_Delivery_Doc (Cargo and details)       | Cargo_id, quantity in tons, delivery date                                                  |\n+------------------------------------------+--------------------------------------------------------------------------------------------+\n| N_vessel (Vessels and their description) | Vessel_id, vessel name, vessel company, flag country, tonnage, overall length, vessel type |\n+------------------------------------------+--------------------------------------------------------------------------------------------+\n| Location_legend (Point, City, Region)    | Area, activities, kind, fish_species                                                       |\n+------------------------------------------+--------------------------------------------------------------------------------------------+\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#segmenting nodes data and checking for distinct records\nmc2_nodes <- as_tibble(mc2_data$nodes) %>%\n  distinct()\n\n#renaming to remove the \"_\" \nmc2_nodes <- mc2_nodes %>%\n  rename(\"last_edited_by\" = \"_last_edited_by\",\n         \"date_added\" = \"_date_added\",\n         \"last_edited_date\" = \"_last_edited_date\",\n         \"raw_source\" = \"_raw_source\",\n         \"algorithm\" = \"_algorithm\") \n\n#tidying the text data to remove nested list.\n\nmc2_nodes_tidied <- mc2_nodes %>%\n  mutate(Activities = gsub(\"c[(]\", \"\", Activities)) %>% \n  mutate(Activities = gsub(\"\\\"\", \"\", Activities)) %>%\n  mutate(Activities = gsub(\"[)]\", \"\", Activities)) \n\nmc2_nodes_tidied <- mc2_nodes_tidied %>%\n  mutate(fish_species_present = gsub(\"c[(]\", \"\", fish_species_present)) %>% \n  mutate(fish_species_present = gsub(\"\\\"\", \"\", fish_species_present)) %>%\n  mutate(fish_species_present = gsub(\"[)]\", \"\", fish_species_present)) \n\n# Creating subset on nodes information\nN_fish <- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Commodity.Fish\") %>%\n  select_if(~ !any(is.na(.))) %>% \n  select(-c(`type`, `raw_source`, `algorithm`, `Activities`, `fish_species_present`)) %>%\n  rename(fish_species = name, \n         fish_id = id)\n\nNL_City <- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Location.City\") %>%\n  select_if(~ !any(is.na(.))) %>%\n  select(-c(`raw_source`, `algorithm`, `type`, `fish_species_present`)) %>%\n  rename(city_name = Name, \n         city_id = id)\n\n\nNL_Point <- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Location.Point\") %>%\n  select_if(~ !any(is.na(.))) %>%\n  select(-c(`raw_source`, `algorithm`, `kind`, `fish_species_present`)) %>%\n  rename(point_name = Name, \n         point_id = id)\n\n## Need to tidy NL Region\nNL_Region <- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Location.Region\") %>%\n  select_if(~ !any(is.na(.))) %>%\n  select(-c(`raw_source`, `algorithm`, `type`, `Description`)) %>%\n  rename(region_name = Name, \n         region_id = id, \n         region_kind = kind)\n\nN_Delivery_doc <- subset(mc2_nodes_tidied,  mc2_nodes_tidied$type == \"Entity.Document.DeliveryReport\") %>%\n  select_if(~ !any(is.na(.))) %>%\n  rename(deliver_date = date,\n         cargo_id = id) %>%\n  select(-c(`algorithm`, `type`, `raw_source`, `Activities`, `fish_species_present`)) \n\n## consider adding back more columns, it dropped some columns where values were partial NA\n\nN_vessel <- mc2_nodes_tidied %>%\n  filter(grepl(\"Entity.Vessel\", type)) %>%\n  mutate(vessel_type = case_when(\n    grepl(\"FishingVessel\", type, ignore.case = TRUE) ~ \"Fishing\",\n    grepl(\"Ferry.Passenger\", type, ignore.case = TRUE) ~ \"Ferry_Passenger\",\n    grepl(\"Ferry.Cargo\", type, ignore.case = TRUE) ~ \"Ferry_Cargo\",\n    grepl(\"Research\", type, ignore.case = TRUE) ~ \"Research\", \n    grepl(\"Other\", type, ignore.case = TRUE) ~ \"Other\", \n    grepl(\"Tour\", type, ignore.case = TRUE) ~ \"Tour\", \n    grepl(\"CargoVessel\", type, ignore.case = TRUE) ~ \"Cargo_Vessel\"\n    )) %>% \n  mutate(company = ifelse(is.na(company), \"Unknown\", company)) %>% # Handle NA values by replacing NA with unknown\n  select(-c(`algorithm`, `type`, `raw_source`, `Activities`, `fish_species_present`, `Description`, `kind`, `style`, `name`, `qty_tons`,`date`)) %>%\n  rename(vessel_id = id, \n         vessel_name = Name, \n         vessel_company = company)\n\n\n# Further exploring records where there is null values\npartial_na_records <- N_vessel[!complete.cases(N_vessel), ] %>% \n    select(-c(last_edited_by, date_added, last_edited_date)) \n\npartial_na_sum <- partial_na_records %>% \n  group_by(vessel_type) %>% \n  summarize(count = n()) \n\n# Plot NA records\npartial_na_plot <- ggplot(partial_na_sum, aes(x = vessel_type, y = count)) + \n  geom_bar(stat = \"identity\", fill = \"grey\") + \n  geom_text(aes(label = count), vjust = -0.2, size = 4) + \n  labs(title = \"Breakdown of vessel type for partial NA records\", \n       x = \"Vessel Type\",\n       y = \"Count of vessel with NA\") + theme_minimal(base_size = 12) + \n  theme(axis.line = element_line(color = \"black\"))\n\npartial_na_plot\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex03_EDA_0906_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Display partial na records\n\ndatatable(partial_na_sum, options = list(pageLength = 5)\n          , filter = \"top\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-84e0137d56f4beae3386\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-84e0137d56f4beae3386\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td><\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"integer\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"2\\\" data-max=\\\"6\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\"],[\"Ferry_Cargo\",\"Ferry_Passenger\",\"Other\",\"Research\",\"Tour\"],[2,3,5,2,6]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>vessel_type<\\/th>\\n      <th>count<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":2},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"vessel_type\",\"targets\":1},{\"name\":\"count\",\"targets\":2}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\n# merging ping with location details (region_id, city_id, point_id)\n## See how to deal with list within activites, and how to include region_kind\n## See if want to retain some description to identify point, region vs city\n\ncity_legend <- NL_City %>% \n  select(c(`city_id`, `Activities`, `kind`)) %>%\n  mutate(fish_species_present = \"NA\") %>%\n  rename(area = city_id)\n\npoint_legend <- NL_Point %>% \n  select(c(`point_id`, `Activities`))  %>%\n  mutate(kind = \"point\", \n         fish_species_present = \"NA\") %>%\n  rename(area = point_id)\n\nregion_legend <- NL_Region %>% \n  select(c(`region_id`, `Activities`, `region_kind`, `fish_species_present`))  %>%\n  rename(area = region_id, kind = region_kind)\n\nlocation_legend <- rbind(city_legend, point_legend, region_legend) \n\nwrite_csv(N_vessel, \"data/N_vessel.csv\")\nwrite_csv(location_legend, \"data/location_legend.csv\")\n\n#dropping unnecessary tables\nrm(mc2_data, mc2_nodes_tidied, partial_na_records, city_legend, point_legend, region_legend, partial_na_sum, partial_na_plot, mc2_nodes)\n```\n:::\n\n\n[Insights:]{.underline}\n\n-   Total of 18 vessels with partial NA\n-   All vessel company is \"Unknown\", belonging to Oceanus (flag_country = Oceanus)\n-   All 18 vessels fall under non fishing and non cargo_vessel type, hence, they will be excluded from our analysis.\n\n#### 2.2.5 Merging back the data after processing.\n\nTo incorporate context of the nodes details into the various edges, the related description of the nodes were appended to edge data sets. This helped to streamline the records into 3 consolidated data sets.\n\n+-------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n| Consolidated Data Set                                                                     | Resultant Edge Data Set                                                                                             | Mapped with Nodes Data Set                                                                             |\n+===========================================================================================+=====================================================================================================================+========================================================================================================+\n| Transaction (with cargo weight)                                                           | `tx_c`: Cargo_id, Destination, Transaction date, Fish species                                                       | `N_delivery_doc`: Cargo_id, quantity in tons, delivery date                                            |\n+-------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n| Ping activity (with vessel details by vessel_id, possible fish caught by location_legend) | `E_Tping_c`: Start_time, Dwell, Ping source, Vessel_id                                                              | `N_vessel`: Vessel_id, vessel name, vessel company, flag country, tonnage, overall length, vessel type |\n|                                                                                           |                                                                                                                     |                                                                                                        |\n|                                                                                           |                                                                                                                     | `location_legend`: Area, activities, kind, fish_species                                                |\n+-------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n| Habor Arrival Report\\                                                                     | `E_Hbrpt_c`: Vessel_id, Port, Key, Arrival date, Port master, Aphorism, Holiday Greeting, Saying of the Sea, Wisdom | `N_vessel`: Vessel_id, vessel name, vessel company, flag country, tonnage, overall length, vessel type |\n| (with vessel details)                                                                     |                                                                                                                     |                                                                                                        |\n+-------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# merging the quantity from delivery_doc with transaction based on cargo id\ntx_qty <- left_join(tx_c, N_Delivery_doc %>% select(cargo_id, qty_tons, deliver_date), by = \"cargo_id\")\n\n# Merging habor report with vessel details to identify type of vessel, tonnage and overall length \n\nE_Hbrpt_v <- left_join(E_Hbrpt_c, N_vessel %>% select(vessel_id, vessel_name, tonnage, length_overall, flag_country, vessel_company, vessel_type), by = \"vessel_id\")\n\n# Merging ping transaction with the location type\nE_Tping_c2 <- E_Tping_c %>% rename(area = ping_source)\nping_activity <- left_join(E_Tping_c2, location_legend %>% select(area, Activities, kind, fish_species_present), by = \"area\")\nping_activity <- left_join(ping_activity, N_vessel %>% select(vessel_id, vessel_name, tonnage, length_overall, flag_country, vessel_company, vessel_type), by = \"vessel_id\")\n\n# removing \"City of\" from the \"area column\" \nvessel_movement <- ping_activity %>%\n  mutate(area = gsub(\"^City of\", \"\", area)) %>%\n  mutate(area = gsub(\"^\\\\s+\", \"\", area))\n\n#write_csv(tx_qty, \"data/tx_qty.csv\")\n#write_csv(ping_activity, \"data/ping_activity.csv\")\n#write_csv(E_Hbrpt_v, \"data/hbrpt.csv\")\n\nrm(tx_c, E_Tping_c2, E_Tping_c, E_Hbrpt_c)\n```\n:::\n\n\n## 3. Exploratory Data Analysis\n\n### 3.0 Understanding areas in Oceanus\n\n*Reference: [Kickstarter 3](https://isss608-ay2023-24apr.netlify.app/vast/kickstarter3#overview) by Prof Kam*\n\n[Steps taken:]{.underline}\n\n1.  Import ESRI layer including the centriod details of geographical areas.\n2.  Extract coordinates from geographical data frame and appending to vessel movement data frame to plot the movement of vessels.\n3.  Filter the vessels of interest to the vessels belonging to \"South Seafood Express Corp\" and plot the routes taken by the 2 vessels, namely \"\"Snappersnatcher7be\", \"Roachrobberdb6\".\n\n[Visualisation improvement:]{.underline}\n\n1.  Color coding the regions for better identification of the type of region. (e.g., Beige for island, blue for fishing region and green for ecological reserves).\n\n[Insights from South Seafood Express Corp Vessels:]{.underline}\n\n-   For \"Snappersnatcher7be\", common cities visited are City of Lomark, City of Packland, with legal fishing area of Wrasse Beds and Cod Table and possible illegal fishing activity at Ghoti Reserve.\n\n-   For \"Roachrobberdb6\", common cities visited are City of Himark and City of Lomark, with legal fishing area of Wrasse Beds, and potential illegal fishing activity at Ghoti Reserve.\n\n\n::: {.cell}\n\n```{.r .cell-code}\noceanus_geog = st_read(\"data/Oceanus Geography.geojson\") %>% st_transform(crs = 4326)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Oceanus Geography' from data source \n  `C:\\sengjingyi\\ISSS608\\Take-home_Ex\\Take-home_Ex03\\data\\Oceanus Geography.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 29 features and 7 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -167.0654 ymin: 38.07452 xmax: -163.2723 ymax: 40.67775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n# basic plot of underlying geography (polygons, points)\n# ggplot(data = oceanus_geog) + geom_sf()\n# write_rds(oceanus_geog, \"data/rds/OceanusGeography.rds\")\n\nOceanusLocations <- st_read(dsn = \"data/shp\",\n  layer = \"Oceanus Geography\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Oceanus Geography' from data source \n  `C:\\sengjingyi\\ISSS608\\Take-home_Ex\\Take-home_Ex03\\data\\shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 27 features and 7 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -167.0654 ymin: 38.07452 xmax: -163.2723 ymax: 40.67775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nwrite_rds(OceanusLocations, \n  \"data/rds/OceanusLocations.rds\")\n\n# extract coordinates from df\ncoords <- st_coordinates(OceanusLocations)\n\n# drop geometry columns\nOceanusLocations_df <- OceanusLocations %>%\n  st_drop_geometry()\n\n# append x and y coordinates into df as columns\nOceanusLocations_df$XCOORD <- coords[, \"X\"]\nOceanusLocations_df$YCOORD <- coords[, \"Y\"]\n\n# tidy df by renaming column \nOceanusLocations_df <- OceanusLocations_df %>%\n  select(Name, X.Kind, XCOORD, YCOORD) %>%\n  rename(Loc_Type = X.Kind)\n\n# left join to append back to vessel movement \n\nvessel_movement <- vessel_movement %>%\n  left_join(OceanusLocations_df,\n            by = c(\"area\" = \"Name\"))\n\n# save file as vessel_movement_data.data.frame\n\nwrite_rds(vessel_movement, \"data/rds/vessel_movement_data.rds\")\n\n# convert vessel movement data.frame into sf point data.frame \nvessel_movement_sf <- vessel_movement %>%\n  st_as_sf(coords = c(\"XCOORD\", \"YCOORD\"), \n           crs = 4326)\n\n# arrange record based on vessel name and navigation time \nvessel_movement_sf <- vessel_movement_sf %>%\n  arrange(vessel_id, start_time)\n\n# convert vessel movement sf from point into linestring features known as vessel trajectory\nvessel_trajectory <- vessel_movement_sf %>%\n  group_by(vessel_id) %>%\n  summarize(do_union = FALSE) %>%\n  st_cast(\"LINESTRING\")\n\n## include placeholder for vessel of interest and colors assigned\n\nvessels_of_interest <- c(\"snappersnatcher7be\", \"roachrobberdb6\")\nvessel_colors <- c(\"snappersnatcher7be\" = \"red\", \"roachrobberdb6\" = \"purple\")\n\n# creating route for selected vessel \nvessel_trajectory_selected <- vessel_trajectory %>%\n  filter(vessel_id %in% vessels_of_interest)\n\n# defining colors for X.kind\n\nkind_colors <- c(\n  \"Island\" = \"beige\", \n  \"Fishing Ground\" = \"lightblue\", \n  \"Ecological Preserve\" = \"lightgreen\", \n  \"city\" = \"purple\", \n  \"buoy\" = \"blue\")\n\nggplot() +\n  geom_sf(data = oceanus_geog, aes(fill = X.Kind), color = \"black\") +\n  scale_fill_manual(values = kind_colors) + \n  geom_sf(data = vessel_trajectory_selected, \n          aes(color = vessel_id), \n          size = 1) +\n  scale_color_manual(values = vessel_colors) + \n  geom_text(data = OceanusLocations_df, \n            aes(x = XCOORD, y = YCOORD, label = Name), \n            size = 2, hjust = 1, vjust = 1) +\n  theme_minimal() +\n  labs(title = \"Trajectories of South Seafood Express Corp\", \n       x = \"Longitude\", y = \"Latitude\", color = \"Vessel ID\")\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex03_EDA_0906_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### 3.1 Understanding possible fish species and signs of illegal fishing\n\n[Steps taken:]{.underline}\n\n1.  Unlist the fish species appended in the initial node of `region` and spread it across the table to form a matrix to identify the possible fish species identified in each region.\n2.  Contrast the fish species from region identified with the fish species caught based on the cargo transactions to detect any deviation that requires further investigation.\n3.  Plot a bar graph to visualisation the\n\n[Visualisation improvement:]{.underline}\n\n1.  Color coding the fish species representation for easier identification of illegal fish species in `red` and commonly caught fish species in `blue`, with additional fish species of \"Salmon\" in `yellow` for further investigation.\n2.  Factoring the `fish species` in order to reorder the layers of the stacked bar graph such that illegal fish species are clustered together at the base, followed by regular fish species and lastly the unexpected fish species at the top.\n3.  Factoring the `destination city` such that the graph is ordered in descending order based on transaction quantity in tons.\n4.  Including variable time frame (with `earliest_date` and `latest_date`) for selection of period of interest when looking at the summary of cargo of interest.\n\n[Insights]{.underline}\n\n-   3 fish species are only present in ecological reserves: (1) Offidiaa/Piscis osseus, (2) Sockfish/Pisces foetida and (3) Helenaa/Pisces satis.\n\n-   Hence, any cargo with these fish species have likely violated fishing regulations and fished in ecological reserves. (1) Don Limpet Preserve, (2) Ghoti Preserve and (3) Nemo Reefs.\n\n-   Additional species of \"oncorhynchusrosea790\" identified with the cargo transactions. Referencing the internet fish species, this refers to the commonly known species of \"Salmon\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Formatting region data to identify fish type in region\nregion_species <- NL_Region %>%\n  mutate(fish_species_present = gsub('c\\\\(|\\\\)|\"', \"\", fish_species_present), \n    fish_species_present = strsplit(as.character(fish_species_present), \", \")) %>%\n  unnest(fish_species_present) %>%\n  mutate(presence = 1) %>%\n  spread(key = fish_species_present, value = presence, fill = 0)\n\nregion_species_c <- region_species %>% \n  select( -region_id, -last_edited_by, -last_edited_date, -date_added)\n\nkable(region_species_c)\n```\n\n::: {.cell-output-display}\n\n\n|region_name         |Activities                        |region_kind         | Beauvoir/Habeas pisces| Birdseye/Pisces frigus| Cod/Gadus n.specificatae| Harland/Piscis sapidum| Helenaa/Pisces satis| Offidiaa/Piscis osseus| Sockfish/Pisces foetida| Tuna/Thunnini n.vera| Wrasse/Labridae n.refert|\n|:-------------------|:---------------------------------|:-------------------|----------------------:|----------------------:|------------------------:|----------------------:|--------------------:|----------------------:|-----------------------:|--------------------:|------------------------:|\n|Don Limpet Preserve |Recreation, Tourism               |Ecological Preserve |                      1|                      1|                        0|                      0|                    1|                      0|                       1|                    1|                        0|\n|Cod Table           |Commercial fishing                |Fishing Ground      |                      1|                      1|                        1|                      0|                    0|                      0|                       0|                    0|                        0|\n|Tuna Shelf          |Commercial fishing, Sport fishing |Fishing Ground      |                      1|                      1|                        0|                      1|                    0|                      0|                       0|                    1|                        0|\n|Ghoti Preserve      |Research, Tourism, Recreation     |Ecological Preserve |                      1|                      0|                        0|                      0|                    1|                      1|                       0|                    0|                        1|\n|Nemo Reef           |Recreation, Tourism               |Ecological Preserve |                      1|                      1|                        0|                      0|                    1|                      0|                       0|                    1|                        1|\n|Wrasse Beds         |Commercial fishing                |Fishing Ground      |                      1|                      1|                        0|                      0|                    0|                      0|                       0|                    0|                        1|\n\n\n:::\n\n```{.r .cell-code}\n# comparing the list of unique fish species in the tx_qty\nunique_fish_cargo <- unique(tx_qty$fish_species)\n\n# unique_fish_cargo has additional species of salmon - oncorhynchusrosea790\n\n#Aligning the naming convention for fish species\n\nfish_species_labels <- c(\n  \"gadusnspecificatae4ba\" = \"Cod/Gadus n.specificatae\", \n  \"piscesfrigus900\" = \"Birdseye/Pisces frigus\", \n  \"piscesfoetidaae7\" = \"Sockfish/Pisces foetida\", # illegal\n  \"labridaenrefert9be\" = \"Wrasse/Labridae n.refert\", \n  \"habeaspisces4eb\" = \"Beauvoir/Habeas pisces\", \n  \"piscissapidum9b7\" = \"Harland/Piscis sapidum\", \n  \"thunnininveradb7\" = \"Tuna/Thunnini n.vera\", \n  \"piscisosseusb6d\" = \"Offidiaa/Piscis osseus\", # illegal\n  \"piscessatisb87\" = \"Helenaa/Pisces satis\" # illegal\n)\n\n## assign specific colors to fish species, red for illegal. \n\nfish_species_color <- c(\"piscesfoetidaae7\" = \"#FF6666\", \n                        \"piscisosseusb6d\" = \"#FF9999\", \n                        \"piscessatisb87\" = \"#FFCCCC\", \n                        \"gadusnspecificatae4ba\" = \"#CCE5FF\", \n                        \"piscissapidum9b7\" = \"#99CCFF\", \n                        \"habeaspisces4eb\" = \"#66B2ff\", \n                        \"piscesfrigus900\" = \"#CCE5FF\", \n                        \"oncorhynchusrosea790\" = \"#FFFF99\", \n                        \"labridaenrefert9be\" = \"#99CCFF\", \n                        \"thunnininveradb7\" = \"#66b2ff\"\n                        )\n\n# include paramters for users to change for timeframe\ntx_qty$tx_date <- as.Date(tx_qty$tx_date, format = \"%Y-%m-%d\")\n\nearliest_date <- min(tx_qty$tx_date, na.rm = TRUE)\nlatest_date <- max(tx_qty$tx_date, na.rm = TRUE)\n\n## filtering the data set of interest \n\ntx_qty_of_interest <- tx_qty %>% \n  filter(tx_date >= earliest_date & tx_date <= latest_date)\n\n# summarise total tons of fish per location\ntotal_qty_tons_per_dest <- tx_qty_of_interest %>%\n  group_by(dest, fish_species) %>%\n  summarize(total_qty_tons = sum(qty_tons, na.rm = TRUE)) %>%\n  ungroup()\n\n# reordering levels for fish species for tidier plot\ntotal_qty_tons_per_dest$fish_species <- factor(\n  total_qty_tons_per_dest$fish_species, \n  levels = c(\"gadusnspecificatae4ba\", \"piscissapidum9b7\", \"habeaspisces4eb\", \n             \"piscesfrigus900\", \"labridaenrefert9be\", \"thunnininveradb7\", \n             \"oncorhynchusrosea790\", # unidentified - Salmon\n             \"piscesfoetidaae7\",\"piscisosseusb6d\", \"piscessatisb87\" )) #illegal\n\n# reordering levels to arrange bars in descending order \ntotal_qty_tons_per_dest$dest <- factor(\n  total_qty_tons_per_dest$dest, \n  levels = c(\"City of Paackland\", \"City of Himark\", \"City of Lomark\", \"City of South Paackland\", \"City of Haacklee\" )) \n\n\n# plot identifying occurence of illegal fish species at various port - identifying all unique fish species in cargo report (tx_qty)\n\np_qty_dest <- ggplot(total_qty_tons_per_dest, \n       aes(x = dest, y = total_qty_tons, fill = fish_species)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = fish_species_color,  labels = fish_species_labels) +\n  labs(title = \"Total Quantity of Fish by Destination and Species\",\n       x = \"Destination\",\n       y = \"Total Quantity (tons)\",\n       fill = \"Fish Species\") +\n  theme_minimal(base_size = 8) +\n  theme(axis.line = element_line(color = \"black\"))\n\np_qty_dest\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex03_EDA_0906_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n[**Work-in-progress:**]{.underline} Attempt to plot the type of fish species location of origin and the port received based on cargo transaction. Currently missing overlap of geographical point and polygons.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Network analysis to see mapping of fish species delivered to which port at what quantity\n\nedges <- total_qty_tons_per_dest %>%\n  select(from = fish_species, to = dest, weight = total_qty_tons, dest = dest)\n\n# Create graph from data frame\ngraph <- graph_from_data_frame(edges, directed = FALSE)\n\n# Convert to tbl_graph object\ngraph_tbl <- as_tbl_graph(graph)\n\n# Plot the network graph using ggraph\nfish_dest_map <- ggraph(graph_tbl, layout = 'nicely') + \n  geom_edge_link(aes(width = weight), alpha = 0.8) +\n  geom_node_point(aes(color = ifelse(name %in% edges$from, \"Fish Species\", \"Destination\")), size = 2) +\n  geom_node_text(aes(label = name), vjust = 1.5, hjust = 1.5, size = 2)+\n  scale_edge_width(range = c(0.5, 5)) +\n  scale_color_manual(values = c(\"Fish Species\" = \"lightblue\", \"Destination\" = \"beige\")) +\n  theme_void(base_size = 8) +\n  labs(title = \"Network Analysis of Fish Species per Destination\", color = \"Node Type\", edge_width = \"Total Quantity (tons)\") + \n  facet_edges(~dest) + th_foreground(foreground = \"grey\",border = TRUE) + theme(legend.position = \"bottom\")\n\nfish_dest_map\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex03_EDA_0906_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nrm(edges, graph, graph_tbl, fish_dest_map)\n```\n:::\n\n\n[Steps taken:]{.underline}\n\n1.  Plot combined box plot, stats_dot to highlight the quantity of cargo receive per fish species per destination with `facet_grid( ~dest)`.\n\n[Visualisation improvement]{.underline}\n\n1.  Highlight abnormal cargo records where quantity \\<0 and blue line to show reference of 0 tonnes.\n2.  Implement facet_grid to show the reference of fish species received across various ports.\n\n[Insights:]{.underline}\n\n1.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tx_qty, aes(x = fish_species, y = qty_tons)) + \n  geom_boxplot(\n    width = .15, \n    ## remove outliers\n    outlier.color = NA ## `outlier.shape = NA` or `outlier.alpha = 0` works as well\n  ) +\n  ## add dot plots from {ggdist} package\n  ggdist::stat_dots(\n    ## orientation to the right\n    side = \"right\", \n    justification = -0.2,\n    ## adjust grouping (binning) of observations \n    binwidth = 1, \n    dotsize = 0.1\n  ) +\n  ## add highlighted dots where qty_tons <= 0\n  ggdist::stat_dots(\n    data = subset(tx_qty, qty_tons <= 0),\n    side = \"right\",\n    justification = -0.2,\n    binwidth = 1,\n    dotsize = 0.1,\n    color = \"red\"\n  ) +\n  ## add horizontal line at qty_tons = 0\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(title = \"Quantity of Fish Species by Weight (Tons)\",\n       x = \"Fish Species\",\n       y = \"Quantity (Tons)\") +\n  theme(axis.text.x = element_text(hjust = 1, size = 7),\n    axis.text.y = element_text(size = 7),\n    plot.title = element_text(size = 12, face = \"bold\"),\n    strip.text = element_text(size = 7),\n    plot.margin = unit(c(1, 1, 1, 1), \"mm\"), \n    panel.spacing = unit(0.5,\"lines\")) + \n  facet_grid(. ~ dest)\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex03_EDA_0906_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n### 3.2 Understanding Ownership of Vessels\n\n[Steps taken:]{.underline}\n\n1.  Group vessels by company and type to count the number of vessel type per company.\n2.  Arrange the calculated table by descending order of vessels.\n\n#### 3.2.1: Ownership of \"Fishing Vessels\" largely belonging to \"Oceanus\"\n\n[Steps taken:]{.underline}\n\n1.  Focusing on the key categories of \"Fishing\", plot a bar chart on the count of company that owns the \"x\" no. of vessels.\n2.  Hence we will visualise the mapping of company to vessels for company that owns 4 or more vessels. (\"No of vessels of interest\" is set to adjustable threshold)\n\n[Visualisation Improvements:]{.underline}\n\n1.  Summed the count of known companies with \"Fishing Vessels\"\n2.  Highlighted the names of companies with 4 or more fishing vessels, likely to be larger companies, based on adjustable parameter of `no_of_interest`.\n3.  Mapped the name of the fishing vessels associated with these companies of interest.\n\n[Insights:]{.underline}\n\n-   For Cargo_vessels, 99 counts of vessels with \"Unknown\" company, only 1 \"Cargo vessel\" with known company of \"Saltwater Sisters Company Marine\".\n\n-   Only Saltwater Sisters Company Marine has 2 types of vessel, vessels of other vessel_types (Tour, Research, Other) belong to \"Unknown\" companies.\n\n-   All other known companies own fishing vessels, where 45 companies own 1 vessel, 36 companies own 2, 13 companies own 3 and 5 companies own 4 or more.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvessel_per_type_company <- N_vessel %>% \n  group_by(vessel_company, vessel_type) %>% \n  summarise(vessel_type_count = n()) %>% \n  arrange(vessel_type_count)\n\nvessel_type_company <- vessel_per_type_company %>% \n  group_by(vessel_company) %>% \n  summarise(vessel_count = n()) %>% \n  arrange(vessel_count)\n\n# expose datatable on the count of vessel type per company. \n\ndatatable(vessel_per_type_company, \n          options = list(pageLength = 5), \n          filter = \"top\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-612e010384b5ed7cd3e1\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-612e010384b5ed7cd3e1\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td><\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"integer\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"1\\\" data-max=\\\"99\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\"],[\"Adkins LLC\",\"Bailey-Mccullough\",\"BaringoAmerica Marine Ges.m.b.H.\",\"Barnes and Sons\",\"Brewer-Massey\",\"Chambers, Hall and Walker\",\"Chase, Long and Anderson\",\"Collins, Johnson and Lloyd\",\"Conley, Benton and Miller\",\"Cox-Donovan\",\"Cox-Mason\",\"Davis, Harris and West\",\"Dry CreekWorldLogistics Ltd. Liability Co\",\"Fischer, Graham and Robinson\",\"FlounderLeska Marine BV\",\"French Ltd\",\"George-Brown\",\"Goodman LLC\",\"Harper and Sons\",\"Henry-Alvarez\",\"Hernandez Group\",\"Horne Group\",\"Lake Malawi  Corp United\",\"Maacama Ocean Worldwide LLC\",\"Martin-Case\",\"Mcdonald-Jones\",\"Miller, Smith and Reed\",\"MonarchCreek Shipping S.p.A.\",\"Newton-Meyer\",\"Norman LLC\",\"NortheastSeafood Carriers Ltd\",\"Osborne and Sons\",\"Rasmussen, Nelson and King\",\"Reid, Thomas and Gill\",\"Riley Inc\",\"Rivera Group\",\"Roth, Logan and Moreno\",\"Saltwater Sisters Company Marine\",\"Saltwater Sisters Company Marine\",\"SamakaDredgeTransport OJSC\",\"ScaniaSeafood Holdings Ltd. Liability Co\",\"Sparmans Marine Carriers Oyj\",\"Stewart, Perkins and Sanchez\",\"Vasquez-Gonzalez\",\"Wiley LLC\",\"Wolf and Sons\",\"Bennett, Jones and Miller\",\"Bowers Group\",\"Brown, Clarke and Martinez\",\"Brown-Allen\",\"Callahan-Green\",\"Carter, Mcdonald and Miller\",\"Clark, Hall and Cole\",\"Cordova, Ritter and Flores\",\"Costa de Oro Enterprises\",\"Decker PLC\",\"Dyer-Campbell\",\"Franco, Olson and Long\",\"Green, Vincent and Thompson\",\"Jacobson Inc\",\"Jordan and Sons\",\"Lane Group\",\"Lowery-Myers\",\"Mcpherson-Wright\",\"Mercado, French and Graham\",\"Mooney, Stevenson and Miller\",\"Mullins-Carrillo\",\"Murphy and Sons\",\"Parks Ltd\",\"Rodriguez, Henry and Woodard\",\"Schmidt Ltd\",\"Smith, Davis and Acosta\",\"Solis PLC\",\"SouthSeafood Express Corp\",\"Steele PLC\",\"Sutton PLC\",\"Tainamarine Fishing Co\",\"Taylor-Sawyer\",\"Thompson-Padilla\",\"Unknown\",\"Unknown\",\"Weaver-Baker\",\"WestRiver Shipping KgaA\",\"Williams, Horn and Morales\",\"Ballard-Bailey\",\"Bell, Reynolds and Forbes\",\"Brown-Haas\",\"Chavez and Sons\",\"Cisneros-Meyer\",\"Faulkner, Shaffer and Moyer\",\"Garcia-Sanchez\",\"Garcia-Wallace\",\"Gomez-Mccormick\",\"House Group\",\"Mendez-Tyler\",\"Smith, Collins and Johnson\",\"Terry, Smith and Lyons\",\"Unknown\",\"Mccormick Group\",\"Nielsen, Valentine and Bell\",\"Robinson, Mcmillan and Watson\",\"Solis-Lopez\",\"Unknown\",\"Ritter Ltd\",\"Unknown\",\"Unknown\"],[\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Cargo_Vessel\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Ferry_Cargo\",\"Research\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Ferry_Passenger\",\"Fishing\",\"Fishing\",\"Fishing\",\"Fishing\",\"Other\",\"Fishing\",\"Tour\",\"Cargo_Vessel\"],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,5,6,6,99]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>vessel_company<\\/th>\\n      <th>vessel_type<\\/th>\\n      <th>vessel_type_count<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"vessel_company\",\"targets\":1},{\"name\":\"vessel_type\",\"targets\":2},{\"name\":\"vessel_type_count\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\n# Hence for plot, we will focus on vessel_type = \"fishing\" and \"cargo_vessel\"\n\nfish_vessel <- vessel_per_type_company %>% filter(vessel_type == \"Fishing\") %>% as.data.table\nfish_vessel_sum <- fish_vessel[, .(company_count = .N, company_names = toString(vessel_type_count)), by = vessel_type_count]\n\n#enforcing all x axis values for clearer depiction by introducing breaks\nfish_v_count_range <- seq(min(fish_vessel_sum$vessel_type_count), max(fish_vessel_sum$vessel_type_count))\n\n# introduce wrap text function to limit company name within the column\nwrap_text <- function(text, width = 15) {\n  sapply(text, function(x) {\n    paste(strwrap(x, width = width), collapse = \"\\n\")\n  })\n}\n\n# applying to column\nfish_vessel_sum$wrapped_company_names <- wrap_text(fish_vessel_sum$company_names)\n\n# creating plot\ncompany_vessel_count <- ggplot(fish_vessel_sum, aes(x = vessel_type_count, y = company_count)) +\n  geom_bar(stat = \"identity\", fill = \"#00CCCC\", color = \"black\") +\n  geom_text(aes(label = company_count), vjust = -0.5, size = 3) +\n  scale_x_continuous(breaks = fish_v_count_range) +\n  labs(title = \"No. of fishing vessels Owned by companies\",\n       x = \"Number of Vessels Owned\",\n       y = \"Count of Companies\") +\n  theme_minimal(base_size = 8) + \n  theme(axis.line = element_line(color = \"black\"))+ \n\n# including annotation ()\n annotate(\"rect\", xmin = 3.5, xmax = 6.5, ymin = 0, ymax = Inf, \n           alpha = 0, color = \"#FFBF00\", fill = NA) +\n\n annotate(\"text\", x = 6, y = 5, label = \"Ritter Ltd\", size = 2) +\n  annotate(\"text\", x = 4, y = 20, label = \"McCormick Group,\\nNielsen,\\nValentine and Bell,\\nRobinson,\\nMcMillan and Watson,\\nSolis-Lopez\", size = 2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# creating subset\nno_of_interest = 4\ncompany_of_interest <- fish_vessel %>% filter(vessel_type_count >= no_of_interest)\n\nint_fish_v_mapping <- N_vessel %>% filter(vessel_company %in% company_of_interest$vessel_company) %>% select(vessel_id, vessel_company, tonnage)\n\n# data wrangling to fit into network graph\nedges <- int_fish_v_mapping %>%\n  select(vessel_id, vessel_company)\n\n# Create nodes for vessels\nnodes <- int_fish_v_mapping %>%\n  select(vessel_id, tonnage) %>%\n  distinct() %>%\n  rename(name = vessel_id) %>%\n  mutate(type = \"vessel\")\n\n# Create nodes for companies\ncompany_nodes <- data.frame(name = unique(int_fish_v_mapping$vessel_company)) %>%\n  mutate(type = \"company\")\n\n# Combine nodes\nall_nodes <- bind_rows(nodes, company_nodes)\n\n# Create the graph object using igraph\nnetwork <- graph_from_data_frame(d = edges, vertices = all_nodes, directed = FALSE)\n\n# Add tonnage as a vertex attribute, ensuring NA values are handled\nV(network)$tonnage <- ifelse(is.na(V(network)$tonnage), 0, V(network)$tonnage)\n\n# Add node type as a vertex attribute\nV(network)$type <- all_nodes$type\n\n# Plot the network graph using ggraph\nmap_vessel_company <- ggraph(network, layout = 'fr') +\n  geom_edge_link(aes(edge_alpha = 0.5), show.legend = FALSE) +\n  geom_node_point(aes(size = tonnage, color = type), show.legend = TRUE) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 2) +\n  scale_color_manual(values = c(\"vessel\" = \"#00CCCC\", \"company\" = \"black\")) +\n  theme_void(base_size = 8) +\n  labs(title = \"Network Graph of Vessels and Companies\",\n       size = \"Tonnage\",\n       color = \"Node Type\") + theme(legend.position = \"bottom\")\n\ncompany_vessel_count | map_vessel_company\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex03_EDA_0906_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# cleaning environment\nrm(no_of_interest, company_of_interest, int_fish_v_mapping, edges, nodes, company_nodes, all_nodes, network, map_vessel_company)\n```\n:::\n\n\n#### 3.2.2: Ownership of Cargo Vessels which are largely unknown\n\n[Steps taken:]{.underline}\n\n1.  Filter vessels that are unregistered, where `vessel_company` = \"Unknown\", and include detail of country based on their flags\n2.  Plot the count of unknown vessels by `flag country` and generate data table to list these countries\n3.  Calculate their median dwell time at each geographical area and highlight the records of vessels with unknown company in \"hot pink\".\n4.  Return the list of suspicious vessels that have over-stayed (median dwell \\> 75% per area) and the regions which they over-stayed.\n\n[Visualisation Improvements:]{.underline}\n\n1.  Common color scheme included to identify type of vessels, e.g., brown for cargo vessels, and different shades of grey for other types of vessels.\n2.  Reordering the bar chart by no. of vessel counts to make it more readable.\n3.  Reordering the geographical areas by regions and assigning the common color scheme as background\n4.  Limit the y-axis on median `dwell` time as there are no records from \"Unknown\" companies beyond this. This allows us to scale appropriately and have clarity on the \"Unknown\" vessels' dwell times.\n\n[Insights:]{.underline}\n\n1.  Of the vessels from unknown companies, there are no fishing vessels identified. This may be reasonable as only registered vessels with Oceanus should be authorised to fish within Oceanus' waters.\n2.  27 foreign countries have 2 or more vessels registered as Cargo Vessels within Oceanus vessel records.\n3.  While we expect foreign countries cargo vessels to have short dwell time, considering that they are passing by Oceanus waters during their journey to other locations. There are notably long dwell time from certain vessels which are likely to be suspicious as they are over-staying.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# exploring ships that have unknown companies\n\nunknown_v <- N_vessel %>% filter(vessel_company == \"Unknown\")\n\ntotal_vessel_count <- unknown_v %>%\n  group_by(flag_country) %>%\n  summarize(total_vessel_count = n()) %>%\n  arrange(desc(total_vessel_count))\n\n# reorder flag_country to ensure \"Oceanus\" is first, followed by descending order of vessel count\nordered_countries <- c(\"Oceanus\", setdiff(total_vessel_count$flag_country, \"Oceanus\"))\n\n# Summarizing to see where unknown vessels come from\nunknown_v_sum <- unknown_v %>% \n  group_by(vessel_type, flag_country) %>% \n  summarize(vessel_count = n()) %>%\n  mutate(\n    # Reorder flag_country with Oceanus first and the rest in descending order of vessel count\n    flag_country = factor(flag_country, levels = ordered_countries),\n    # Reorder vessel_type to ensure \"Cargo_Vessel\" is at the bottom\n    vessel_type = factor(vessel_type, levels = c(\"Cargo_Vessel\", setdiff(unique(vessel_type), \"Cargo_Vessel\"))))\n\n# reordering variable \n\n# defining vessel colors\nvessel_colors <- c(\"Cargo_Vessel\" = \"#994C00\", \n    \"Ferry_Cargo\" = \"#C0C0C0\", \n    \"Ferry_Passenger\" = \"#E0E0E0\",\n    \"Research\" = \"#A0A0A0\",\n    \"Tour\" = \"#606060\", \n    \"Other\" = \"#000000\")\n\nunknown_dist <- ggplot(unknown_v_sum, \n                       aes(x = flag_country, y = vessel_count, \n                           fill = vessel_type)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = vessel_colors) + \n  theme_minimal() +\n  labs(title = \"Vessel Count by Flag Country and Vessel Type\",\n       x = \"Flag Country\",\n       y = \"Vessel Count\",\n       fill = \"Vessel Type\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5), \n        axis.line = element_line(color = \"black\")) \n\nunknown_dist \n```\n\n::: {.cell-output-display}\n![](Take_home_Ex03_EDA_0906_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndatatable(unknown_v_sum, \n          options = list(pageLength = 5), \n          filter = \"top\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-e77ccc609c14c9e42ce5\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e77ccc609c14c9e42ce5\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td><\\/td>\\n  <td data-type=\\\"factor\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"width: 100%; display: none;\\\">\\n      <select multiple=\\\"multiple\\\" style=\\\"width: 100%;\\\" data-options=\\\"[&quot;Cargo_Vessel&quot;,&quot;Ferry_Cargo&quot;,&quot;Ferry_Passenger&quot;,&quot;Other&quot;,&quot;Research&quot;,&quot;Tour&quot;]\\\"><\\/select>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"factor\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"width: 100%; display: none;\\\">\\n      <select multiple=\\\"multiple\\\" style=\\\"width: 100%;\\\" data-options=\\\"[&quot;Oceanus&quot;,&quot;Playa Solis&quot;,&quot;Nyxonix&quot;,&quot;Ariuzima&quot;,&quot;Coralada&quot;,&quot;Helixia&quot;,&quot;Kethanor&quot;,&quot;Orvietola&quot;,&quot;Utoparadia&quot;,&quot;Uzifrica&quot;,&quot;Valtalmo&quot;,&quot;Alverossia&quot;,&quot;Anderia del Mar&quot;,&quot;Azurionix&quot;,&quot;Faraluna&quot;,&quot;Gavanovia&quot;,&quot;Isla Solmar&quot;,&quot;Islavaria&quot;,&quot;Khamseena&quot;,&quot;Mawalara&quot;,&quot;Merigrad&quot;,&quot;Novarctica&quot;,&quot;Novarcticaa&quot;,&quot;Rio Solovia&quot;,&quot;Riodelsol&quot;,&quot;Thessalandia&quot;,&quot;Utoporiana&quot;,&quot;Zawalinda&quot;,&quot;Alverovia&quot;,&quot;Arreciviento&quot;,&quot;Baziuzim&quot;,&quot;Brindisola&quot;,&quot;Brindivaria&quot;,&quot;Calabrand&quot;,&quot;Coralmarica&quot;,&quot;Helvoris&quot;,&quot;Imazam&quot;,&quot;Kilivaria&quot;,&quot;Kondarivakia&quot;,&quot;Korvelonia&quot;,&quot;Kuzalanda&quot;,&quot;Lumakari&quot;,&quot;Lumindoria&quot;,&quot;Luminkind&quot;,&quot;Mango del Oro&quot;,&quot;Marebak&quot;,&quot;Marifada&quot;,&quot;Myriadonia&quot;,&quot;Nalaloria&quot;,&quot;Osterivaro&quot;,&quot;Puerto del Mar&quot;,&quot;Sirenareef&quot;,&quot;Solovarossa&quot;,&quot;Talandria&quot;,&quot;Uziland&quot;,&quot;Vesperlandia&quot;,&quot;Vientoro&quot;,&quot;Yggdrasonia&quot;,&quot;Zambarka&quot;]\\\"><\\/select>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"integer\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"1\\\" data-max=\\\"6\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\"],[\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Cargo_Vessel\",\"Ferry_Cargo\",\"Ferry_Passenger\",\"Other\",\"Research\",\"Tour\"],[\"Alverossia\",\"Alverovia\",\"Anderia del Mar\",\"Ariuzima\",\"Arreciviento\",\"Azurionix\",\"Baziuzim\",\"Brindisola\",\"Brindivaria\",\"Calabrand\",\"Coralada\",\"Coralmarica\",\"Faraluna\",\"Gavanovia\",\"Helixia\",\"Helvoris\",\"Imazam\",\"Isla Solmar\",\"Islavaria\",\"Kethanor\",\"Khamseena\",\"Kilivaria\",\"Kondarivakia\",\"Korvelonia\",\"Kuzalanda\",\"Lumakari\",\"Lumindoria\",\"Luminkind\",\"Mango del Oro\",\"Marebak\",\"Marifada\",\"Mawalara\",\"Merigrad\",\"Myriadonia\",\"Nalaloria\",\"Novarctica\",\"Novarcticaa\",\"Nyxonix\",\"Oceanus\",\"Orvietola\",\"Osterivaro\",\"Playa Solis\",\"Puerto del Mar\",\"Rio Solovia\",\"Riodelsol\",\"Sirenareef\",\"Solovarossa\",\"Talandria\",\"Thessalandia\",\"Utoparadia\",\"Utoporiana\",\"Uzifrica\",\"Uziland\",\"Valtalmo\",\"Vesperlandia\",\"Vientoro\",\"Yggdrasonia\",\"Zambarka\",\"Zawalinda\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\",\"Oceanus\"],[2,1,2,3,1,2,1,1,1,1,3,1,2,2,3,1,1,2,2,3,2,1,1,1,1,1,1,1,1,1,1,2,2,1,1,2,2,4,1,3,1,5,1,2,2,1,1,1,2,3,2,3,1,3,1,1,1,1,2,2,3,5,2,6]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>vessel_type<\\/th>\\n      <th>flag_country<\\/th>\\n      <th>vessel_count<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"vessel_type\",\"targets\":1},{\"name\":\"flag_country\",\"targets\":2},{\"name\":\"vessel_count\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\n# Identifying regions that unknown vessels are at \nunknown_v_list <- unknown_v$vessel_id\n\n# factoring to order the location by defined order\nping_activity$area <- factor(ping_activity$area, levels = c(\"Nav E\", \"Nav D\", \"Nav C\" , \"Nav B\", \"Nav A\" , \"Nav 3\", \"Nav 2\", \"Nav 1\", \"Ghoti Preserve\", \"Don Limpet Preserve\", \"Nemo Reef\", \"Cod Table\",\"Tuna Shelf\",\"Wrasse Beds\",\"Exit East\", \"City of South Paackland\", \"City of Paackland\",\"City of Lomark\",\"City of Himark\",\"City of Haacklee\",\"City of Port Grove\"))\n\nvessel_dwell <- ggplot(ping_activity, aes(x = area, y = dwell)) +\n  annotate(\"rect\", ymin = -Inf, ymax = Inf, xmin = 15.5 , xmax = 20.5, alpha = 0.8, fill = \"beige\") +    # Ports\n  annotate(\"rect\", ymin = -Inf, ymax = Inf, xmin = 11.5, xmax = 14.5, alpha = 0.5, fill = \"lightblue\") +  # Fishing ground\n  annotate(\"rect\", ymin = -Inf, ymax = Inf, xmin = 8.5, xmax = 11.5, fill = \"lightgreen\", alpha = 0.5) +  # Ecological preserve\n  annotate(\"rect\", ymin = -Inf, ymax = Inf, xmin = 0.5, xmax = 8.5, alpha = 0.5, fill = \"lightgrey\") +\n  geom_boxplot() +\n  geom_point(data = subset(ping_activity, vessel_id == unknown_v_list),\n             aes(x = area, y = dwell), color = \"hotpink\", size = 1) +\n  theme_minimal() +\n  labs(title = \"Median Dwell Time by Area\", \n       x = \"Area\", \n       y = \"Median Dwell Time\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),axis.line = element_line(color = \"black\")) + \n  scale_y_continuous( limits = c(0, 500000)) + #zoom into 2 * 10^5\n  coord_flip()\n\nvessel_dwell\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex03_EDA_0906_files/figure-html/unnamed-chunk-11-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# extracting records where vessel_company is unknown and median dwell > 75% of each area \n\ndwell_stats <- ping_activity %>%\n  group_by(area) %>%\n  summarize(\n    median_dwell = median(dwell, na.rm = TRUE),\n    q75_dwell = quantile(dwell, 0.75, na.rm = TRUE)\n  ) \n\n# Join the dwell stats back to the unknown vessels dataset\nunknown_vessels_with_stats <- ping_activity %>% \n  filter(vessel_id %in% unknown_v_list) %>% \n  left_join(dwell_stats, by = \"area\")\n\n# Filter records where dwell time exceeds the 75th percentile, focusing on cargo vessels and country not Oceanus\nexceeding_75th_percentile <- unknown_vessels_with_stats %>%\n  filter(dwell > q75_dwell, flag_country != \"Oceanus\", vessel_type == \"Cargo_Vessel\") %>% \n  distinct(vessel_id, area, flag_country) %>% arrange(area)\n\ndatatable(exceeding_75th_percentile, \n          options = list(pageLength = 5), \n          filter = \"top\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-567627f48fa2845eb8be\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-567627f48fa2845eb8be\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td><\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"factor\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"width: 100%; display: none;\\\">\\n      <select multiple=\\\"multiple\\\" style=\\\"width: 100%;\\\" data-options=\\\"[&quot;Nav E&quot;,&quot;Nav D&quot;,&quot;Nav C&quot;,&quot;Nav B&quot;,&quot;Nav A&quot;,&quot;Nav 3&quot;,&quot;Nav 2&quot;,&quot;Nav 1&quot;,&quot;Ghoti Preserve&quot;,&quot;Don Limpet Preserve&quot;,&quot;Nemo Reef&quot;,&quot;Cod Table&quot;,&quot;Tuna Shelf&quot;,&quot;Wrasse Beds&quot;,&quot;Exit East&quot;,&quot;City of South Paackland&quot;,&quot;City of Paackland&quot;,&quot;City of Lomark&quot;,&quot;City of Himark&quot;,&quot;City of Haacklee&quot;,&quot;City of Port Grove&quot;]\\\"><\\/select>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\",\"186\",\"187\",\"188\",\"189\",\"190\",\"191\",\"192\",\"193\",\"194\",\"195\",\"196\",\"197\",\"198\",\"199\",\"200\",\"201\",\"202\",\"203\",\"204\",\"205\",\"206\",\"207\",\"208\",\"209\",\"210\",\"211\",\"212\",\"213\",\"214\",\"215\",\"216\",\"217\",\"218\",\"219\",\"220\",\"221\",\"222\",\"223\",\"224\",\"225\",\"226\",\"227\",\"228\",\"229\",\"230\",\"231\",\"232\",\"233\",\"234\",\"235\",\"236\",\"237\",\"238\",\"239\",\"240\",\"241\",\"242\",\"243\",\"244\",\"245\",\"246\",\"247\",\"248\",\"249\",\"250\",\"251\",\"252\",\"253\",\"254\",\"255\",\"256\",\"257\",\"258\",\"259\",\"260\",\"261\",\"262\",\"263\",\"264\",\"265\",\"266\",\"267\",\"268\",\"269\",\"270\",\"271\",\"272\",\"273\",\"274\",\"275\",\"276\",\"277\",\"278\",\"279\",\"280\",\"281\",\"282\",\"283\",\"284\",\"285\",\"286\",\"287\",\"288\",\"289\",\"290\",\"291\",\"292\",\"293\",\"294\",\"295\",\"296\",\"297\",\"298\",\"299\",\"300\",\"301\",\"302\",\"303\",\"304\",\"305\",\"306\",\"307\",\"308\",\"309\",\"310\",\"311\",\"312\",\"313\",\"314\",\"315\",\"316\",\"317\",\"318\",\"319\",\"320\",\"321\",\"322\",\"323\",\"324\",\"325\",\"326\",\"327\",\"328\",\"329\",\"330\",\"331\",\"332\",\"333\",\"334\",\"335\",\"336\",\"337\",\"338\",\"339\",\"340\",\"341\",\"342\",\"343\",\"344\",\"345\",\"346\",\"347\",\"348\",\"349\",\"350\",\"351\",\"352\",\"353\",\"354\",\"355\",\"356\",\"357\",\"358\",\"359\",\"360\",\"361\",\"362\",\"363\",\"364\",\"365\",\"366\",\"367\",\"368\",\"369\",\"370\",\"371\",\"372\",\"373\",\"374\",\"375\",\"376\",\"377\",\"378\",\"379\",\"380\",\"381\",\"382\",\"383\",\"384\",\"385\",\"386\",\"387\",\"388\",\"389\",\"390\",\"391\",\"392\",\"393\",\"394\",\"395\",\"396\",\"397\",\"398\",\"399\",\"400\",\"401\",\"402\",\"403\",\"404\",\"405\",\"406\",\"407\",\"408\",\"409\",\"410\",\"411\",\"412\",\"413\",\"414\",\"415\",\"416\",\"417\",\"418\",\"419\",\"420\",\"421\",\"422\",\"423\",\"424\",\"425\",\"426\",\"427\",\"428\",\"429\",\"430\",\"431\",\"432\",\"433\",\"434\",\"435\",\"436\",\"437\",\"438\",\"439\",\"440\",\"441\",\"442\",\"443\",\"444\",\"445\",\"446\",\"447\",\"448\",\"449\",\"450\",\"451\",\"452\",\"453\",\"454\",\"455\",\"456\",\"457\",\"458\",\"459\",\"460\",\"461\",\"462\",\"463\",\"464\",\"465\",\"466\",\"467\",\"468\",\"469\",\"470\",\"471\",\"472\",\"473\",\"474\",\"475\",\"476\",\"477\",\"478\",\"479\",\"480\",\"481\",\"482\",\"483\",\"484\",\"485\",\"486\",\"487\",\"488\",\"489\",\"490\",\"491\",\"492\",\"493\",\"494\",\"495\",\"496\",\"497\",\"498\",\"499\",\"500\",\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\"],[\"seawaysynergy8489\",\"freightfrequency5f65\",\"harborhavenf91\",\"freightfusion141\",\"seasentry2e28\",\"maritimemastersd93\",\"vesselvortex355\",\"nauticalnomad11356\",\"transatlantic77d\",\"oceanicoverturec58\",\"cargocosmoscde\",\"harborharmonyfc9\",\"oceanicodyssey5dd\",\"harborhelix456\",\"nauticalnexus6cc\",\"seawayspectrumca2\",\"maritimematrix51a\",\"nauticalnucleus107c4\",\"seawaysynergy8489\",\"maritimemaelstromc5d\",\"nauticalnexus1a5d\",\"nauticalnirvana874\",\"oceanoptimum9f4\",\"harborhorizon6c6\",\"maritimematrix7755\",\"freightfrontiers1bc\",\"maritimemomentumfab\",\"vesselvertexa2e\",\"nauticalnimbusa99\",\"cargocircuit26cc\",\"cargocynosure29d\",\"seasentry1d3\",\"oceanicoverturec58\",\"cargocentric443e\",\"vesselventuredfa\",\"maritimemagnitude2e9\",\"seasentinel1c4b\",\"nauticalnexus6cc\",\"nauticalnomad11356\",\"vesselvanguard5d06\",\"seasentinel24e\",\"oceanicoasisd3f\",\"blueharbor2c1\",\"nauticalnavigatorabd\",\"transatlantic77d\",\"harborhelios585\",\"seawaysage5ce\",\"oceanicodyssey11207\",\"freightfirm27f\",\"freightflux254\",\"freightfusion141\",\"cargocentric4d0\",\"vesselvortex355\",\"oceanicomnipotenta4a\",\"cargocatalystb02\",\"transcontinentalcf3\",\"vesselventuresc7e\",\"seasovereignc6e\",\"transatlantic47a9\",\"oceanicline3de\",\"cargocatalyst39a7\",\"seasanctuary505\",\"seasystem375\",\"maritimemiraclef85\",\"maritimemomentum8d12\",\"freightfountaind90\",\"vesselvanguardbf2\",\"cargocircuit545\",\"harborhavenf91\",\"freightfrequencyfea\",\"vesselvictory3738\",\"seasolutions4d5\",\"oceanicoracle2bf2\",\"freightfrequency5f65\",\"bulkcarriers6cd\",\"transglobal607c\",\"transpacific5ada\",\"harborhelix456\",\"maritimemajesticeb7\",\"transglobal266\",\"harborharmonyfc9\",\"harborhalo603\",\"maritimemastersd93\",\"aquatransit6bc\",\"freightfrontiers1bc\",\"oceanicodyssey5dd\",\"freightforte6f28\",\"oceanicoverturec58\",\"bulkcarriers6cd\",\"transatlantic47a9\",\"vesselventuredfa\",\"vesselvistad0c\",\"seawaysurgeb1c\",\"seasphere38e\",\"transpolar2a4\",\"cargocosmoscde\",\"transglobal266\",\"seasolutions4d5\",\"freightfountaind90\",\"seasystem375\",\"maritimemomentumfab\",\"seawaysynergybaf\",\"vesselvictoryafd\",\"freightfirm27f\",\"seawaysynergy8489\",\"oceanicodyssey5dd\",\"seawayspectrumca2\",\"seawaysavvy102\",\"freightfortef0d\",\"aquatransit6bc\",\"seawayservicesc71\",\"oceanicoasisd3f\",\"oceanicline3de\",\"freightfrequency5f65\",\"blueharbor2c1\",\"cargocentric443e\",\"transoceane48\",\"seasentry1d3\",\"transcontinentalcf3\",\"vesselvortex355\",\"maritimemajesticeb7\",\"oceanicoracle9da\",\"vesselvanguard5d06\",\"transatlantic77d\",\"bulkcarriers6cd\",\"oceanicodyssey11207\",\"harborhorizon6c6\",\"harborhalo9dd6\",\"nauticalnexus1a5d\",\"oceanicoverturec58\",\"nauticalnomad11356\",\"seasentinel1c4b\",\"maritimematrix7755\",\"seawaysavvy9847\",\"oceanicomnipotenta4a\",\"seasovereignc6e\",\"oceanicoracle2bf2\",\"maritimematrix51a\",\"harborhelios585\",\"seasentinel24e\",\"freightfusion141\",\"harborhorizon10ecb\",\"nauticalnucleusc5a\",\"freightforte6f28\",\"seasystem3e22\",\"cargocynosure29d\",\"seawaysavvy102\",\"nauticalnavigatorabd\",\"nauticalnomad11356\",\"seasystem3e22\",\"harborharmonyfc9\",\"transcontinentalcf3\",\"nauticalnucleusc5a\",\"maritimemastersd93\",\"vesselvictory3738\",\"freightforte6f28\",\"oceanicodyssey11207\",\"seasentinel1c4b\",\"harborhelix456\",\"cargocatalystb02\",\"blueharbor2c1\",\"maritimemajesticeb7\",\"nauticalnimbusa99\",\"cargocentric4d0\",\"oceanicline3de\",\"seasentinel24e\",\"seawaysavvy9847\",\"harborhalo603\",\"freightfrontiers1bc\",\"maritimemover13f\",\"transoceane48\",\"vesselvanguard5d06\",\"harborhorizon10ecb\",\"freightfrequencyfea\",\"harborhelios585\",\"maritimemiraclef85\",\"freightfortef0d\",\"seawayspectrumca2\",\"maritimematrix7755\",\"freightfrontiers7134\",\"oceanicoverturec58\",\"seasolutions4d5\",\"seawaysurgeb1c\",\"freightflux254\",\"freightfusion141\",\"nauticalnetworks865\",\"oceanicomnipotenta4a\",\"transglobal607c\",\"vesselventuresc7e\",\"oceanicoracle2bf2\",\"harborhalo9dd6\",\"seawaysynergybaf\",\"vesselventure46e5\",\"harborholdings797\",\"vesselvistad0c\",\"bulkcarriers6cd\",\"transatlantic47a9\",\"oceanoptimum9f4\",\"seasanctuary505\",\"nauticalnexus6cc\",\"oceanicoasisd3f\",\"cargocrestb7c\",\"transpacificed8\",\"vesselvanguardbf2\",\"oceanicoracle9da\",\"cargocatalyst39a7\",\"transatlantic77d\",\"seasystem375\",\"harborhavenf91\",\"nauticalnirvana874\",\"cargocentric443e\",\"transpacific5ada\",\"freightfountaind90\",\"nauticalnucleus107c4\",\"cargocircuit26cc\",\"nauticalnexus1a5d\",\"freightfirm27f\",\"seawaysynergy8489\",\"oceanicodyssey5dd\",\"seasentry1d3\",\"freightfrequency5f65\",\"vesselvortex355\",\"seawaysage5ce\",\"maritimemomentumfab\",\"maritimemomentum8d12\",\"seasentry2e28\",\"cargocynosure29d\",\"shipmatrix9b4\",\"vesselvictoryafd\",\"seasovereignc6e\",\"vesselvertexa2e\",\"aquatransit6bc\",\"transpolar2a4\",\"vesselventuredfa\",\"maritimemaelstromc5d\",\"maritimemagnitude2e9\",\"seasphere38e\",\"seawayservicesc71\",\"transglobal266\",\"cargocosmoscde\",\"cargocircuit545\",\"oceanicodyssey5dd\",\"seawaysynergy8489\",\"maritimemastersd93\",\"freightforte6f28\",\"oceanicline3de\",\"vesselvistad0c\",\"oceanicodyssey5dd\",\"bulkcarriers6cd\",\"vesselvortex355\",\"transcontinentalcf3\",\"nauticalnucleusc5a\",\"seawayspectrumca2\",\"transatlantic77d\",\"seasystem375\",\"oceanicline3de\",\"harborhalo9dd6\",\"seawaysynergybaf\",\"shipmatrix9b4\",\"vesselventure46e5\",\"oceanoptimum9f4\",\"freightfrequency5f65\",\"seasovereignc6e\",\"freightfusion141\",\"vesselvistad0c\",\"nauticalnexus6cc\",\"maritimematrix7755\",\"freightforte6f28\",\"seasentry1d3\",\"seasentinel24e\",\"blueharbor2c1\",\"maritimemagnitude2e9\",\"harborhavenf91\",\"harborharmonyfc9\",\"harborhelix456\",\"cargocosmoscde\",\"harborhelios585\",\"harborhalo9dd6\",\"seawaysynergy8489\",\"vesselventure46e5\",\"seasystem375\",\"freightfrequency5f65\",\"maritimematrix7755\",\"seasovereignc6e\",\"harborhelios585\",\"seasentinel1c4b\",\"harborhavenf91\",\"seawayspectrumca2\",\"maritimemastersd93\",\"oceanicoasis15f6\",\"harborhalo9dd6\",\"bulkcarriers6cd\",\"vesselvistad0c\",\"nauticalnucleusc5a\",\"freightflux254\",\"seasentinel1c4b\",\"seawaysynergy8489\",\"blueharbor2c1\",\"seawaysavvy9847\",\"harborhalo603\",\"oceanicoasisd3f\",\"freightfrequency5f65\",\"harborhavenf91\",\"freightfusion141\",\"aquatransit6bc\",\"cargocrestb7c\",\"maritimemastersd93\",\"transglobal266\",\"vesselvortex355\",\"nauticalnomad11356\",\"cargocircuit545\",\"transatlantic77d\",\"oceanicoverturec58\",\"cargocosmoscde\",\"oceanicodyssey5dd\",\"nauticalnexus6cc\",\"seasentinel24e\",\"seasolutions4d5\",\"seawaysynergybaf\",\"seawaysavvy102\",\"nauticalnavigatorabd\",\"nauticalnomad11356\",\"seasystem3e22\",\"harborharmonyfc9\",\"transcontinentalcf3\",\"maritimemastersd93\",\"seasentry1d3\",\"harborholdings797\",\"freightforte6f28\",\"oceanicodyssey11207\",\"seasphere38e\",\"maritimemajesticeb7\",\"cargocatalyst39a7\",\"nauticalnimbusa99\",\"oceanicline3de\",\"seasentinel24e\",\"oceanicoracle9da\",\"freightfrontiers1bc\",\"maritimemover13f\",\"cargocynosure29d\",\"vesselventure46e5\",\"vesselvanguard5d06\",\"harborhorizon10ecb\",\"freightfrequencyfea\",\"harborhelios585\",\"maritimemiraclef85\",\"harborhavenf91\",\"freightfusion141\",\"cargocrestb7c\",\"seasentry2e28\",\"maritimematrix7755\",\"oceanicoverturec58\",\"seasolutions4d5\",\"seawaysurgeb1c\",\"freightflux254\",\"nauticalnetworks865\",\"transglobal607c\",\"vesselventuresc7e\",\"oceanicoracle2bf2\",\"harborhalo9dd6\",\"seawaysynergybaf\",\"vesselvistad0c\",\"seawayspectrumca2\",\"transatlantic47a9\",\"oceanoptimum9f4\",\"nauticalnexus6cc\",\"transpacific5ada\",\"blueharbor2c1\",\"transpacificed8\",\"vesselvanguardbf2\",\"transatlantic77d\",\"maritimemagnitude2e9\",\"cargocentric4d0\",\"harborhalo603\",\"seasystem375\",\"vesselventuredfa\",\"oceanicomnipotenta4a\",\"cargocentric443e\",\"cargocircuit26cc\",\"nauticalnexus1a5d\",\"freightfirm27f\",\"seawaysynergy8489\",\"seawaysavvy9847\",\"vesselvortex355\",\"seawaysage5ce\",\"oceanicoasisd3f\",\"maritimemomentumfab\",\"maritimemomentum8d12\",\"cargocircuit545\",\"nauticalnucleusc5a\",\"freightfountaind90\",\"cargocatalystb02\",\"seasentinel1c4b\",\"seasanctuary505\",\"vesselvertexa2e\",\"aquatransit6bc\",\"vesselvictory3738\",\"transpolar2a4\",\"freightfortef0d\",\"shipmatrix9b4\",\"harborhelix456\",\"maritimematrix51a\",\"nauticalnirvana874\",\"freightfrequency5f65\",\"maritimemaelstromc5d\",\"nauticalnucleus107c4\",\"transglobal266\",\"cargocosmoscde\",\"oceanicoasis15f6\",\"seawayservicesc71\",\"vesselvictoryafd\",\"transpacificed8\",\"freightfirm27f\",\"vesselventuredfa\",\"seawayservicesc71\",\"cargocircuit26cc\",\"vesselvictoryafd\",\"seawaysurgeb1c\",\"transglobal607c\",\"transpacific5ada\",\"nauticalnetworks865\",\"cargocosmoscde\",\"transglobal266\",\"oceanicline3de\",\"oceanicomnipotenta4a\",\"cargocircuit545\",\"seawaysavvy9847\",\"vesselvertexa2e\",\"oceanicoracle2bf2\",\"seasovereignc6e\",\"vesselvanguardbf2\",\"maritimemomentumfab\",\"aquatransit6bc\",\"vesselventuresc7e\",\"maritimemagnitude2e9\",\"seawaysynergybaf\",\"nauticalnavigatorabd\",\"nauticalnirvana874\",\"seasentry2e28\",\"harborhelix456\",\"vesselvictory3738\",\"maritimemover13f\",\"seawaysynergy8489\",\"seawaysage5ce\",\"oceanicodyssey5dd\",\"freightfountaind90\",\"cargocatalyst39a7\",\"transatlantic77d\",\"seawayspectrumca2\",\"shipmatrix9b4\",\"harborharmonyfc9\",\"cargocatalystb02\",\"transatlantic47a9\",\"nauticalnimbusa99\",\"freightfortef0d\",\"freightfrontiers1bc\",\"freightflux254\",\"harborhorizon10ecb\",\"oceanicoasis15f6\",\"vesselvistad0c\",\"maritimematrix51a\",\"maritimemaelstromc5d\",\"freightfrontiers7134\",\"vesselventure46e5\",\"freightfusion141\",\"seasentry1d3\",\"oceanicoracle9da\",\"maritimemajesticeb7\",\"cargocentric4d0\",\"vesselvanguard5d06\",\"nauticalnomad11356\",\"oceanicodyssey11207\",\"harborhavenf91\",\"harborhorizon6c6\",\"seasolutions4d5\",\"harborhelios585\",\"nauticalnexus1a5d\",\"oceanicoverturec58\",\"seasentinel1c4b\",\"harborholdings797\",\"transoceane48\",\"seasentinel24e\",\"seawaysavvy102\",\"bulkcarriers6cd\",\"blueharbor2c1\",\"harborhalo603\",\"maritimemiraclef85\",\"cargocrestb7c\",\"maritimemomentum8d12\",\"seasystem375\",\"seasphere38e\",\"nauticalnucleus107c4\",\"vesselvortex355\",\"transcontinentalcf3\",\"transpolar2a4\",\"cargocynosure29d\",\"freightfrequency5f65\",\"oceanoptimum9f4\",\"maritimematrix7755\",\"seasystem3e22\",\"harborhalo9dd6\",\"seasanctuary505\",\"cargocentric443e\",\"nauticalnexus6cc\",\"oceanicoasisd3f\",\"nauticalnucleusc5a\",\"maritimemastersd93\"],[\"Nav D\",\"Nav D\",\"Nav D\",\"Nav D\",\"Nav D\",\"Nav D\",\"Nav D\",\"Nav D\",\"Nav D\",\"Nav D\",\"Nav D\",\"Nav D\",\"Nav D\",\"Nav D\",\"Nav D\",\"Nav D\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav C\",\"Nav B\",\"Nav B\",\"Nav B\",\"Nav B\",\"Nav B\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav A\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 3\",\"Nav 2\",\"Nav 2\",\"Nav 2\",\"Nav 2\",\"Nav 2\",\"Nav 2\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nav 1\",\"Nemo Reef\",\"Nemo Reef\",\"Nemo Reef\",\"Nemo Reef\",\"Nemo Reef\",\"Nemo Reef\",\"Nemo Reef\",\"Nemo Reef\",\"Nemo Reef\",\"Nemo Reef\",\"Nemo Reef\",\"Nemo Reef\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Tuna Shelf\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",\"Exit East\",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[\"Azurionix\",\"Utoporiana\",\"Mawalara\",\"Solovarossa\",\"Kuzalanda\",\"Zawalinda\",\"Marifada\",\"Zambarka\",\"Luminkind\",\"Uzifrica\",\"Coralada\",\"Alverovia\",\"Vesperlandia\",\"Kondarivakia\",\"Utoporiana\",\"Kethanor\",\"Helixia\",\"Zawalinda\",\"Azurionix\",\"Helvoris\",\"Riodelsol\",\"Rio Solovia\",\"Marebak\",\"Islavaria\",\"Alverossia\",\"Brindivaria\",\"Playa Solis\",\"Uzifrica\",\"Helixia\",\"Kethanor\",\"Islavaria\",\"Uziland\",\"Uzifrica\",\"Playa Solis\",\"Faraluna\",\"Gavanovia\",\"Anderia del Mar\",\"Utoporiana\",\"Zambarka\",\"Khamseena\",\"Alverossia\",\"Brindisola\",\"Mawalara\",\"Kilivaria\",\"Luminkind\",\"Lumakari\",\"Coralada\",\"Isla Solmar\",\"Playa Solis\",\"Mango del Oro\",\"Solovarossa\",\"Lumindoria\",\"Marifada\",\"Playa Solis\",\"Nyxonix\",\"Isla Solmar\",\"Nyxonix\",\"Gavanovia\",\"Talandria\",\"Ariuzima\",\"Ariuzima\",\"Playa Solis\",\"Thessalandia\",\"Coralmarica\",\"Novarcticaa\",\"Nyxonix\",\"Orvietola\",\"Utoparadia\",\"Mawalara\",\"Utoparadia\",\"Merigrad\",\"Nyxonix\",\"Myriadonia\",\"Utoporiana\",\"Sirenareef\",\"Thessalandia\",\"Arreciviento\",\"Kondarivakia\",\"Merigrad\",\"Faraluna\",\"Alverovia\",\"Helixia\",\"Zawalinda\",\"Korvelonia\",\"Brindivaria\",\"Vesperlandia\",\"Novarctica\",\"Uzifrica\",\"Sirenareef\",\"Talandria\",\"Faraluna\",\"Anderia del Mar\",\"Coralada\",\"Orvietola\",\"Vientoro\",\"Coralada\",\"Faraluna\",\"Nyxonix\",\"Nyxonix\",\"Thessalandia\",\"Playa Solis\",\"Puerto del Mar\",\"Nalaloria\",\"Playa Solis\",\"Azurionix\",\"Vesperlandia\",\"Kethanor\",\"Uzifrica\",\"Valtalmo\",\"Korvelonia\",\"Rio Solovia\",\"Brindisola\",\"Ariuzima\",\"Utoporiana\",\"Mawalara\",\"Playa Solis\",\"Yggdrasonia\",\"Uziland\",\"Isla Solmar\",\"Marifada\",\"Merigrad\",\"Ariuzima\",\"Khamseena\",\"Luminkind\",\"Sirenareef\",\"Isla Solmar\",\"Islavaria\",\"Calabrand\",\"Riodelsol\",\"Uzifrica\",\"Zambarka\",\"Anderia del Mar\",\"Alverossia\",\"Osterivaro\",\"Playa Solis\",\"Gavanovia\",\"Myriadonia\",\"Helixia\",\"Lumakari\",\"Alverossia\",\"Solovarossa\",\"Novarctica\",\"Valtalmo\",\"Novarctica\",\"Kethanor\",\"Islavaria\",\"Uzifrica\",\"Kilivaria\",\"Zambarka\",\"Kethanor\",\"Alverovia\",\"Isla Solmar\",\"Valtalmo\",\"Zawalinda\",\"Merigrad\",\"Novarctica\",\"Isla Solmar\",\"Anderia del Mar\",\"Kondarivakia\",\"Nyxonix\",\"Mawalara\",\"Merigrad\",\"Helixia\",\"Lumindoria\",\"Ariuzima\",\"Alverossia\",\"Osterivaro\",\"Helixia\",\"Brindivaria\",\"Orvietola\",\"Yggdrasonia\",\"Khamseena\",\"Novarctica\",\"Utoparadia\",\"Lumakari\",\"Coralmarica\",\"Valtalmo\",\"Kethanor\",\"Alverossia\",\"Azurionix\",\"Uzifrica\",\"Nyxonix\",\"Coralada\",\"Mango del Oro\",\"Solovarossa\",\"Baziuzim\",\"Playa Solis\",\"Thessalandia\",\"Nyxonix\",\"Myriadonia\",\"Calabrand\",\"Puerto del Mar\",\"Novarcticaa\",\"Riodelsol\",\"Anderia del Mar\",\"Sirenareef\",\"Talandria\",\"Marebak\",\"Playa Solis\",\"Utoporiana\",\"Brindisola\",\"Imazam\",\"Valtalmo\",\"Orvietola\",\"Ariuzima\",\"Ariuzima\",\"Luminkind\",\"Thessalandia\",\"Mawalara\",\"Rio Solovia\",\"Playa Solis\",\"Arreciviento\",\"Nyxonix\",\"Zawalinda\",\"Kethanor\",\"Riodelsol\",\"Playa Solis\",\"Azurionix\",\"Vesperlandia\",\"Uziland\",\"Utoporiana\",\"Marifada\",\"Coralada\",\"Playa Solis\",\"Novarcticaa\",\"Kuzalanda\",\"Islavaria\",\"Khamseena\",\"Nalaloria\",\"Gavanovia\",\"Uzifrica\",\"Korvelonia\",\"Vientoro\",\"Faraluna\",\"Helvoris\",\"Gavanovia\",\"Orvietola\",\"Rio Solovia\",\"Faraluna\",\"Coralada\",\"Utoparadia\",\"Vesperlandia\",\"Azurionix\",\"Zawalinda\",\"Novarctica\",\"Ariuzima\",\"Anderia del Mar\",\"Vesperlandia\",\"Sirenareef\",\"Marifada\",\"Isla Solmar\",\"Valtalmo\",\"Kethanor\",\"Luminkind\",\"Thessalandia\",\"Ariuzima\",\"Calabrand\",\"Puerto del Mar\",\"Khamseena\",\"Novarcticaa\",\"Marebak\",\"Utoporiana\",\"Gavanovia\",\"Solovarossa\",\"Anderia del Mar\",\"Utoporiana\",\"Alverossia\",\"Novarctica\",\"Uziland\",\"Alverossia\",\"Mawalara\",\"Gavanovia\",\"Mawalara\",\"Alverovia\",\"Kondarivakia\",\"Coralada\",\"Lumakari\",\"Calabrand\",\"Azurionix\",\"Novarcticaa\",\"Thessalandia\",\"Utoporiana\",\"Alverossia\",\"Gavanovia\",\"Lumakari\",\"Anderia del Mar\",\"Mawalara\",\"Kethanor\",\"Zawalinda\",\"Utoparadia\",\"Calabrand\",\"Sirenareef\",\"Anderia del Mar\",\"Valtalmo\",\"Mango del Oro\",\"Anderia del Mar\",\"Azurionix\",\"Mawalara\",\"Osterivaro\",\"Helixia\",\"Brindisola\",\"Utoporiana\",\"Mawalara\",\"Solovarossa\",\"Korvelonia\",\"Imazam\",\"Zawalinda\",\"Faraluna\",\"Marifada\",\"Zambarka\",\"Utoparadia\",\"Luminkind\",\"Uzifrica\",\"Coralada\",\"Vesperlandia\",\"Utoporiana\",\"Alverossia\",\"Nyxonix\",\"Puerto del Mar\",\"Uzifrica\",\"Kilivaria\",\"Zambarka\",\"Kethanor\",\"Alverovia\",\"Isla Solmar\",\"Zawalinda\",\"Uziland\",\"Riodelsol\",\"Novarctica\",\"Isla Solmar\",\"Orvietola\",\"Merigrad\",\"Ariuzima\",\"Helixia\",\"Ariuzima\",\"Alverossia\",\"Ariuzima\",\"Brindivaria\",\"Orvietola\",\"Islavaria\",\"Novarcticaa\",\"Khamseena\",\"Novarctica\",\"Utoparadia\",\"Lumakari\",\"Coralmarica\",\"Mawalara\",\"Solovarossa\",\"Imazam\",\"Kuzalanda\",\"Alverossia\",\"Uzifrica\",\"Nyxonix\",\"Coralada\",\"Mango del Oro\",\"Baziuzim\",\"Thessalandia\",\"Nyxonix\",\"Myriadonia\",\"Calabrand\",\"Puerto del Mar\",\"Anderia del Mar\",\"Kethanor\",\"Talandria\",\"Marebak\",\"Utoporiana\",\"Arreciviento\",\"Mawalara\",\"Valtalmo\",\"Orvietola\",\"Luminkind\",\"Gavanovia\",\"Lumindoria\",\"Helixia\",\"Thessalandia\",\"Faraluna\",\"Playa Solis\",\"Playa Solis\",\"Kethanor\",\"Riodelsol\",\"Playa Solis\",\"Azurionix\",\"Osterivaro\",\"Marifada\",\"Coralada\",\"Brindisola\",\"Playa Solis\",\"Novarcticaa\",\"Utoparadia\",\"Valtalmo\",\"Nyxonix\",\"Nyxonix\",\"Anderia del Mar\",\"Playa Solis\",\"Uzifrica\",\"Korvelonia\",\"Merigrad\",\"Vientoro\",\"Valtalmo\",\"Khamseena\",\"Kondarivakia\",\"Helixia\",\"Rio Solovia\",\"Utoporiana\",\"Helvoris\",\"Zawalinda\",\"Faraluna\",\"Coralada\",\"Utoparadia\",\"Rio Solovia\",\"Nalaloria\",\"Valtalmo\",\"Playa Solis\",\"Faraluna\",\"Rio Solovia\",\"Kethanor\",\"Nalaloria\",\"Coralada\",\"Thessalandia\",\"Arreciviento\",\"Baziuzim\",\"Coralada\",\"Faraluna\",\"Ariuzima\",\"Playa Solis\",\"Utoparadia\",\"Osterivaro\",\"Uzifrica\",\"Myriadonia\",\"Gavanovia\",\"Orvietola\",\"Playa Solis\",\"Korvelonia\",\"Nyxonix\",\"Gavanovia\",\"Puerto del Mar\",\"Kilivaria\",\"Rio Solovia\",\"Kuzalanda\",\"Kondarivakia\",\"Merigrad\",\"Orvietola\",\"Azurionix\",\"Coralada\",\"Vesperlandia\",\"Nyxonix\",\"Ariuzima\",\"Luminkind\",\"Kethanor\",\"Khamseena\",\"Alverovia\",\"Nyxonix\",\"Talandria\",\"Helixia\",\"Valtalmo\",\"Brindivaria\",\"Mango del Oro\",\"Novarctica\",\"Utoparadia\",\"Anderia del Mar\",\"Helixia\",\"Helvoris\",\"Azurionix\",\"Novarcticaa\",\"Solovarossa\",\"Uziland\",\"Ariuzima\",\"Merigrad\",\"Lumindoria\",\"Khamseena\",\"Zambarka\",\"Isla Solmar\",\"Mawalara\",\"Islavaria\",\"Nyxonix\",\"Lumakari\",\"Riodelsol\",\"Uzifrica\",\"Anderia del Mar\",\"Riodelsol\",\"Yggdrasonia\",\"Alverossia\",\"Uzifrica\",\"Sirenareef\",\"Mawalara\",\"Helixia\",\"Coralmarica\",\"Imazam\",\"Novarcticaa\",\"Thessalandia\",\"Orvietola\",\"Zawalinda\",\"Marifada\",\"Isla Solmar\",\"Vientoro\",\"Islavaria\",\"Utoporiana\",\"Marebak\",\"Alverossia\",\"Kethanor\",\"Calabrand\",\"Playa Solis\",\"Playa Solis\",\"Utoporiana\",\"Brindisola\",\"Valtalmo\",\"Zawalinda\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>vessel_id<\\/th>\\n      <th>area<\\/th>\\n      <th>flag_country<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"vessel_id\",\"targets\":1},{\"name\":\"area\",\"targets\":2},{\"name\":\"flag_country\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n### 3.3 Exploring distribution of Vessels by Tonnage\n\n[Steps taken:]{.underline}\n\n1.  Plot scatter graph on the `Tonnage` vs `Overall Length` of vessels to see any correlation between vessel capacity and vessel size.\n\n2.  Given that most of the large vessels are \"Cargo Vessels\" and smaller vessels are \"Fishing\" vessels, we summarised the count of each vessel type in a bar chart.\n\n3.  Plot histogram to count the number of \"Fishing\" and \"Cargo Vessels\" by `Tonnage` and identified 3 clusters of interest.\n\n4.  Next, we explored the median `dwell time` per area for each of these 3 subset in relation to their counterparts of the same vessel type.\n\n[Insights:]{.underline}\n\n1.  Wide variation of vessel size, and this may be linked with Transhipment vessels.\n2.  178 fishing vessels, and 100 cargo vessels, and the remaining 18 vessels of \"Research, Tour, Ferry Passenger, Ferry Cargo and Others\".\n3.  Based on the distribution of vessel tonnage for \"Fishing\" and \"Cargo Vessels\", we identified 3 subsets of interest.\n    1.  Subset 1: Unusually large fishing vessels (Tonnage \\> 12,500)\n    2.  Subset 2: Substantial group of small cargo vessels (Tonnage \\< 5000) - Comparable to fishing vessel median tonnage of 4850\n    3.  Subset 3: Unusually large cargo vessels (Tonnage \\> 70,000)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Defining vessel colors \nvessel_colors <- c(\"Fishing\" = \"#00CCCC\", \n    \"Cargo_Vessel\" = \"#994C00\", \n    \"Ferry_Cargo\" = \"#C0C0C0\", \n    \"Ferry_Passenger\" = \"#C0C0C0\",\n    \"Research\" = \"#C0C0C0\",\n    \"Tour\" = \"#C0C0C0\", \n    \"Other\" = \"#C0C0C0\")\n\n#unique(N_vessel$vessel_type)\n\nscatter_ton_len <- ggplot(data= N_vessel, \n            aes(x= tonnage, \n                y= length_overall, \n                color= vessel_type)) +\n  geom_point() + \n  scale_color_manual(values = vessel_colors) + \nlabs(title = \"Scatter Plot of Vessels by Size\", \nx = \"Vessel Tonnage\", \ny = \"Vessel Length\") + \n  theme_minimal(base_size = 8) + \n  theme(legend.position = \"top\", \n        axis.line = element_line(color = \"black\"))\n\nvessel_count <- N_vessel %>%\n  group_by(vessel_type) %>%\n  summarize(vessel_no = n()) %>% \n  mutate(vessel_type = reorder(vessel_type, - vessel_no))\n\n\nbar_vessel_type <- ggplot(data = vessel_count, \n                          aes(x = vessel_type, \n                              y = vessel_no, fill = vessel_type)) + \n  geom_bar(stat = \"identity\") + \n  scale_fill_manual(values = vessel_colors) + \n  geom_text(aes(label = vessel_no), vjust = -0.8, size = 2) +\n  labs(title = \"Count of Vessels by Type\", \nx = \"Type of vessels registered\", \ny = \"No. of vessels\") + \n  theme_minimal(base_size = 8) + \n  theme(axis.text.x = element_text(size = 5), \n        axis.line = element_line(color = \"black\")) \n\nscatter_ton_len | bar_vessel_type\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex03_EDA_0906_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\nrm(scatter_ton_len, bar_vessel_type, vessel_count)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# segmenting data set to focus on fishing and cargo vessels \n\nfishing_v <- N_vessel %>% filter(vessel_type == \"Fishing\")\ncargo_v <- N_vessel %>% filter(vessel_type == \"Cargo_Vessel\")\n\n# calculating the quantiles for the respective vessel type \n\nfishing_v_ton_quant <- fishing_v %>%\n  summarise(\n    q25 = quantile(tonnage, 0.25),\n    median = median(tonnage),\n    q75 = quantile(tonnage, 0.75)\n  )\n\ncargo_v_ton_quant <- cargo_v %>%\n  summarise(\n    q25 = quantile(tonnage, 0.25),\n    median = median(tonnage),\n    q75 = quantile(tonnage, 0.75)\n  )\n\n# plot for fishing vessel distribution of tonnage\nfishing_v_dist <- ggplot(fishing_v, aes(x = tonnage)) +\n  geom_histogram(binwidth = 500, fill = \"#00CCCC\", color = \"black\") +\n  annotate(\"rect\", xmin = 12500, xmax = Inf, ymin = -Inf, ymax = Inf, \n    alpha = 0, color = \"#FFBF00\") +\n  geom_vline(aes(xintercept = fishing_v_ton_quant$q25), \n    color = \"blue\", linetype = \"dashed\") +\n  geom_vline(aes(xintercept = fishing_v_ton_quant$median),\n   color = \"red\", linetype = \"dashed\") +\n  geom_vline(aes(xintercept = fishing_v_ton_quant$q75), \n    color = \"blue\", linetype = \"dashed\") +\n  annotate(\"text\", x = fishing_v_ton_quant$q25, y = 30, \n    label = paste(\"25%\", fishing_v_ton_quant$q25) , vjust = -1, size = 3) +\n  annotate(\"text\", x = fishing_v_ton_quant$median, y = 30, \n    label = paste(\"50%\",fishing_v_ton_quant$median), vjust = -1, size = 3) +\n  annotate(\"text\", x = fishing_v_ton_quant$q75, y = 30, \n    label = paste(\"75%\", fishing_v_ton_quant$q75),  vjust = -1, size = 3) + \n  labs(title = \"Distribution of Fishing Vessels by Tonnage\",\n       x = \"Tonnage\",\n       y = \"Frequency\") +\n  theme_minimal(base_size = 8) + \n  theme(axis.line = element_line(color = \"black\")) + \n  coord_flip()\n\n# Adjust label to readable format \n# Adjust order so that the text is above the \n\ncargo_v_dist <- ggplot(cargo_v, aes(x = tonnage)) +\n  geom_histogram(binwidth = 500, fill = \"#994C00\", color = \"black\") +\n annotate(\"rect\", xmin = -Inf, xmax = 5000, ymin = -Inf, ymax = Inf, alpha = 0, color = \"#FFBF00\") +\n  annotate(\"rect\", xmin = 70000, xmax = Inf, ymin = -Inf, ymax = Inf, alpha = 0, color = \"#FFBF00\") +\n  geom_vline(aes(xintercept = cargo_v_ton_quant$q25), color = \"blue\", linetype = \"dashed\") +\n  geom_vline(aes(xintercept = cargo_v_ton_quant$median), color = \"red\", linetype = \"dashed\") +\n  geom_vline(aes(xintercept = cargo_v_ton_quant$q75), color = \"blue\", linetype = \"dashed\") +\n  annotate(\"text\", x = cargo_v_ton_quant$q25, y = 30, \n    label = paste(\"25%\", cargo_v_ton_quant$q25), vjust = -1, size = 3) +\n  annotate(\"text\", x = cargo_v_ton_quant$median, y = 30, \n    label = paste(\"50%\",cargo_v_ton_quant$median), vjust = -1, size = 3) +\n  annotate(\"text\", x = cargo_v_ton_quant$q75, y = 30, \n    label = paste(\"75%\", cargo_v_ton_quant$q75), vjust = -1, size = 3) +\n  labs(title = \"Distribution of Cargo Vessels by Tonnage\",\n       x = \"Tonnage\",\n       y = \"Frequency\") +\n  theme_minimal(base_size = 8) + \n  theme(axis.line = element_line(color = \"black\")) + \n  coord_flip()\n\n#summary(fishing_v) - min: 100, q1: 600, median: 2400, q3: 4850, max: 17200 - investigate\n#summary(cargo_v) - min: 2100, q1: 2100, median: 23750, q3: 74925, max: 76300 - Investigate \n\nfishing_v_dist | cargo_v_dist\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex03_EDA_0906_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### 3.4 Exploring Dwell of Vessels of Interest\n\n#### 3.4.1: Dwell of unusually large fishing vessels which may point to over-fishing\n\n[Steps taken:]{.underline}\n\n1.  Filter the list of vessel by \"Fishing\" vessels and \"Tonnage\" \\> 12500 and identify which country and companies these vessel belong to\n2.  Plot the median `dwell` time that these unusually large fishing vessel spend at for the various geographical areas.\n\n[Visualisation Improvements:]{.underline}\n\n1.  Factoring the region to order and group these geographical areas by their nature (e.g., Beige for Island / Ports, Light blue for fishing region, light green for ecological preserves, navy for navigation buoys, remaining outlier of Exit East)\n\n[Insights:]{.underline}\n\n1.  2 vessels, namely \"marinemarauder8c9\" and \"pikepirate89a\" has `Tonnage` \\> 12,500\n2.  Lingering presence of \"marinemarauder8c9\" at ecological preserve of Nemo Reefs.\n3.  Distinct paths taken by the separate vessels, and reasonable time spent in authorised fishing regions.\n4.  However, \"pikepirate89a\" has persistently stayed in \"Cod Table\" prompting further investigation on potential over-fishing after mapping with cargo ids.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# understanding which vessel \nabn_fish_vessel <- fishing_v %>% filter(tonnage > 12500)\n\nsel_abn_fish_vessel <- abn_fish_vessel %>% \n  select(vessel_name, flag_country, vessel_company) \n\ndatatable(sel_abn_fish_vessel, \n          options = list(pageLength = 5)) \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-56f7fd320eb9eeb46040\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-56f7fd320eb9eeb46040\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\"],[\"Pike Pirate\",\"Marine Marauder\"],[\"Oceanus\",\"Oceanus\"],[\"Robinson, Mcmillan and Watson\",\"Nielsen, Valentine and Bell\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>vessel_name<\\/th>\\n      <th>flag_country<\\/th>\\n      <th>vessel_company<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"vessel_name\",\"targets\":1},{\"name\":\"flag_country\",\"targets\":2},{\"name\":\"vessel_company\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\n# understanding region that vessel spends time at \n\nabn_fish_v_activity <- ping_activity %>% \n  filter(vessel_id %in% abn_fish_vessel$vessel_id) \n  \nabn_fish_v_activity_sum <- abn_fish_v_activity %>%\n  group_by(vessel_id, area) %>%\n  summarise(median_dwell = median(dwell, na.rm = TRUE))\n\n# Contrasting with the median time spent by fishing vessels \n\nfish_v_activity <- ping_activity %>% \n  filter(vessel_id %in% fishing_v$vessel_id) \n  \nfish_v_activity_sum <- fish_v_activity %>%\n  group_by(vessel_id, area) %>%\n  summarise(median_dwell = median(dwell, na.rm = TRUE))\n\nunique(fish_v_activity$area)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] City of Haacklee        City of Lomark          City of Himark         \n [4] City of Paackland       City of South Paackland Nav 3                  \n [7] Nav D                   Nav B                   Nav A                  \n[10] Nav C                   Nav 2                   Nav 1                  \n[13] Exit East               Nav E                   Cod Table              \n[16] Ghoti Preserve          Wrasse Beds             Nemo Reef              \n[19] Don Limpet Preserve     Tuna Shelf             \n21 Levels: Nav E Nav D Nav C Nav B Nav A Nav 3 Nav 2 Nav 1 ... City of Port Grove\n```\n\n\n:::\n\n```{.r .cell-code}\n# assigning order to the plot\nfish_v_activity$area <- factor(fish_v_activity$area, levels = c(\"Nav E\", \"Nav D\", \"Nav C\" , \"Nav B\", \"Nav A\" , \"Nav 3\", \"Nav 2\", \"Nav 1\", \"Ghoti Preserve\", \"Don Limpet Preserve\", \"Nemo Reef\", \"Cod Table\",\"Tuna Shelf\",\"Wrasse Beds\",\"Exit East\", \"City of South Paackland\", \"City of Paackland\",\"City of Lomark\",\"City of Himark\",\"City of Haacklee\",\"City of Port Grove\"))\n\n# annotate area labels by color \n\nfishing_dwell <- ggplot(fish_v_activity, aes(x = area, y = dwell)) +\nannotate(\"rect\", ymin = -Inf, ymax = Inf, xmin = 15.5 , xmax = 20.5, alpha = 0.8, fill = \"beige\") +    # Ports\n  annotate(\"rect\", ymin = -Inf, ymax = Inf, xmin = 11.5, xmax = 14.5, alpha = 0.5, fill = \"lightblue\") +  # Fishing ground\n  annotate(\"rect\", ymin = -Inf, ymax = Inf, xmin = 8.5, xmax = 11.5, fill = \"lightgreen\", alpha = 0.5) +  # Ecological preserve\n  annotate(\"rect\", ymin = -Inf, ymax = Inf, xmin = 0.5, xmax = 8.5, alpha = 0.5, fill = \"lightgrey\")  +\n  geom_boxplot() +\n  geom_point(data = subset(fish_v_activity, vessel_id == \"marinemarauder8c9\"),\n             aes(x = area, y = dwell), color = \"#66FFFF\", size = 1) +\n  geom_point(data = subset(fish_v_activity, vessel_id == \"pikepirate89a\"),\n             aes(x = area, y = dwell), color = \"#009999\", size = 1) +\n  theme_minimal(base_size = 8) +\n  labs(title = \"Median Dwell Time by Area\", \n       x = \"Area\", \n       y = \"Median Dwell Time\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), \n        axis.line = element_line(color = \"black\")) + \n  scale_y_continuous(limits = c(0, 600000)) + \n  coord_flip()  \n\nfishing_dwell \n```\n\n::: {.cell-output-display}\n![](Take_home_Ex03_EDA_0906_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n\n```{.r .cell-code}\nvessels_of_interest <- c(\"marinemarauder8c9\", \"pikepirate89a\")\nvessel_colors <- c(\"marinemarauder8c9\" = \"#66FFFF\", \"pikepirate89a\" = \"#009999\")\n\n# creating route for selected vessel \nvessel_trajectory_selected <- vessel_trajectory %>%\n  filter(vessel_id %in% vessels_of_interest)\n\n# defining colors for X.kind\n\nkind_colors <- c(\n  \"Island\" = \"beige\", \n  \"Fishing Ground\" = \"lightblue\", \n  \"Ecological Preserve\" = \"lightgreen\", \n  \"city\" = \"purple\", \n  \"buoy\" = \"blue\")\n\nlarge_fish_v_route <- ggplot() +\n  geom_sf(data = oceanus_geog, aes(fill = X.Kind), color = \"black\") +\n  scale_fill_manual(values = kind_colors) + \n  geom_sf(data = vessel_trajectory_selected, \n          aes(color = vessel_id), \n          size = 3) +\n  scale_color_manual(values = vessel_colors) + \n  geom_text(data = OceanusLocations_df, \n            aes(x = XCOORD, y = YCOORD, label = Name), \n            size = 2, hjust = 1, vjust = 1) +\n  theme_minimal() +\n  labs(title = \"Trajectories of South Seafood Express Corp\", \n       x = \"Longitude\", y = \"Latitude\", color = \"Vessel ID\")\n\nlarge_fish_v_route\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex03_EDA_0906_files/figure-html/unnamed-chunk-14-3.png){width=672}\n:::\n:::\n\n\n#### 3.4.2: Dwell of small (\\<5000 tons) and unusually large Cargo Vessels \\> 75,000 tons)\n\n*Possibility: Illegal unauthorised fishing with small size Cargo Vessels by foreign countries.*\n\n[Steps taken & visualisation improvement:]{.underline} Similar to 3.4.1\n\n[Insights derived:]{.underline}\n\n1.  High presence in \"Unrecognised\" ping locations.\n2.  Substantial number of cargo vessels with comparable size as fishing vessel median tonnage, and dwell time spent at each are relatively varied. Further analysis will be done after matching of vessels to cargo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabn_cargo_vessel_s <- cargo_v %>% filter(tonnage < 5000)\nabn_cargo_vessel_l <- cargo_v %>% filter(tonnage > 70000)\n\nsel_abn_cargo_vessel_s <- abn_cargo_vessel_s %>% \n  select(vessel_name, flag_country, vessel_company) \n\nsel_abn_cargo_vessel_l <- abn_cargo_vessel_l %>% \n  select(vessel_name, flag_country, vessel_company) \n\n# display records \ndatatable(sel_abn_cargo_vessel_s, \n          options = list(pageLength = 5), \n          filter = \"top\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-1c9e6e54d8245e32a086\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1c9e6e54d8245e32a086\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td><\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\" disabled=\\\"\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\"],[\"Seaway Savvy 9\",\"Oceanic Oracle\",\"Maritime Majestic\",\"Cargo Centric\",\"Harbor Helios\",\"Ship Matrix\",\"Trans Atlantic\",\"Freight Frequency 5\",\"Harbor Halo 9\",\"Freight Firm\",\"Oceanic Oasis\",\"Sea Sovereign\",\"Oceanic Odyssey 11\",\"Nautical Networks\",\"Maritime Miracle\",\"Vessel Vanguard\",\"Sea Sanctuary\",\"Sea System 3\",\"Freight Forte 6\",\"Nautical Nirvana\",\"Maritime Mover\",\"Harbor Halo\",\"Nautical Nimbus\",\"Maritime Matrix\",\"Nautical Nexus 1\",\"Trans Global\",\"Sea Sentry 2\",\"Cargo Cosmos\",\"Trans Continental\",\"Cargo Crest\",\"Vessel Vanguard 5\",\"Cargo Centric 4\",\"Harbor Helix\",\"Sea Solutions\",\"Seaway Synergy 8\",\"Seaway Spectrum\",\"Seaway Sage\",\"Nautical Nucleus 10\",\"Maritime Magnitude\"],[\"Osterivaro\",\"Ariuzima\",\"Merigrad\",\"Lumindoria\",\"Lumakari\",\"Khamseena\",\"Luminkind\",\"Utoporiana\",\"Calabrand\",\"Playa Solis\",\"Brindisola\",\"Gavanovia\",\"Isla Solmar\",\"Baziuzim\",\"Coralmarica\",\"Orvietola\",\"Playa Solis\",\"Kethanor\",\"Novarctica\",\"Rio Solovia\",\"Orvietola\",\"Helixia\",\"Helixia\",\"Helixia\",\"Riodelsol\",\"Faraluna\",\"Kuzalanda\",\"Coralada\",\"Isla Solmar\",\"Imazam\",\"Khamseena\",\"Playa Solis\",\"Kondarivakia\",\"Nyxonix\",\"Azurionix\",\"Kethanor\",\"Coralada\",\"Zawalinda\",\"Gavanovia\"],[\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>vessel_name<\\/th>\\n      <th>flag_country<\\/th>\\n      <th>vessel_company<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"vessel_name\",\"targets\":1},{\"name\":\"flag_country\",\"targets\":2},{\"name\":\"vessel_company\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\ndatatable(sel_abn_cargo_vessel_l, \n          options = list(pageLength = 5), \n          filter = \"top\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-c5113f343b79a0ac9f10\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c5113f343b79a0ac9f10\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td><\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\" disabled=\\\"\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\"],[\"Maritime Maelstrom\",\"Harbor Harmony\",\"Vessel Vertex\",\"Sea Sentinel 1\",\"Blue Harbor\",\"Maritime Momentum\",\"Cargo Catalyst\",\"Vessel Victory 3\",\"Oceanic Oasis 1\",\"Trans Pacific\",\"Seaway Spectra\",\"Freight Forte\",\"Maritime Masters\",\"Trans Atlantic 4\",\"Oceanic Odyssey\",\"Vessel Venture 4\",\"Oceanic Overture\",\"Harbor Horizon\",\"Freight Frequency\",\"Harbor Holdings\",\"Nautical Nexus\",\"Oceanic Oracle 2\",\"Trans Global 6\",\"Vessel Ventures\",\"Freight Fountain\",\"Vessel Vortex\",\"Aqua Transit\",\"Seaway Synergy\",\"Nautical Nomad 11\",\"Bulk Carriers\",\"Sea Sentinel\",\"Nautical Navigator\",\"Oceanic Omnipotent\"],[\"Helvoris\",\"Alverovia\",\"Uzifrica\",\"Anderia del Mar\",\"Mawalara\",\"Playa Solis\",\"Nyxonix\",\"Merigrad\",\"Utoparadia\",\"Valtalmo\",\"Oceanus\",\"Valtalmo\",\"Zawalinda\",\"Talandria\",\"Vesperlandia\",\"Novarcticaa\",\"Uzifrica\",\"Islavaria\",\"Utoparadia\",\"Riodelsol\",\"Utoporiana\",\"Myriadonia\",\"Thessalandia\",\"Nyxonix\",\"Nyxonix\",\"Marifada\",\"Korvelonia\",\"Puerto del Mar\",\"Zambarka\",\"Sirenareef\",\"Alverossia\",\"Kilivaria\",\"Playa Solis\"],[\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\",\"Unknown\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>vessel_name<\\/th>\\n      <th>flag_country<\\/th>\\n      <th>vessel_company<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"vessel_name\",\"targets\":1},{\"name\":\"flag_country\",\"targets\":2},{\"name\":\"vessel_company\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\n# subset cargo vessel activity\ncargo_v_activity <- ping_activity %>% \n  filter(vessel_id %in% cargo_v$vessel_id) \n\n# extracting list of vessel id for large and small cargo\nselected_vessel <- abn_cargo_vessel_s$vessel_id\nselected_vessel2 <- abn_cargo_vessel_l$vessel_id\n\n# plotting\ncargo_dwell <- ggplot(cargo_v_activity, aes(x = area, y = dwell)) +\n  annotate(\"rect\", ymin = -Inf, ymax = Inf, xmin = 14.5 , xmax = 19.5, alpha = 0.8, fill = \"beige\") +    # Ports\n  annotate(\"rect\", ymin = -Inf, ymax = Inf, xmin = 10.5, xmax = 13.5, alpha = 0.5, fill = \"lightblue\") +  # Fishing ground\n  annotate(\"rect\", ymin = -Inf, ymax = Inf, xmin = 7.5, xmax = 10.5, fill = \"lightgreen\", alpha = 0.5) +  # Ecological preserve\n  annotate(\"rect\", ymin = -Inf, ymax = Inf, xmin = 0.5, xmax = 7.5, alpha = 0.5, fill = \"lightgrey\") +\n  geom_boxplot() +\n  geom_point(data = subset(cargo_v_activity, vessel_id == selected_vessel),\n             aes(x = area, y = dwell), color = \"#FF9933\", size = 1) +\n  geom_point(data = subset(cargo_v_activity, vessel_id == selected_vessel2),\n             aes(x = area, y = dwell), color = \"#994C00\", size = 1) +\n  theme_minimal(base_size = 8) +\n  labs(title = \"Median Dwell Time by Area\", \n       x = \"Area\", \n       y = \"Median Dwell Time\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), \n        axis.line = element_line(color = \"black\")) + \n  scale_y_continuous( limits = c(0, 20000)) + #zoom into 2 * 10^5\n  coord_flip()\n\ncargo_dwell\n```\n\n::: {.cell-output-display}\n![](Take_home_Ex03_EDA_0906_files/figure-html/unnamed-chunk-15-3.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Take_home_Ex03_EDA_0906_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/nouislider-7.0.10/jquery.nouislider.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/nouislider-7.0.10/jquery.nouislider.min.js\"></script>\n<link href=\"../../site_libs/selectize-0.12.0/selectize.bootstrap3.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/selectize-0.12.0/selectize.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}