{
  "hash": "994fa0be3304a58fa0bf5c7dcb7a4dd6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 3 - MC2 Sub Qn 1\"\nauthor: \"Seng Jing Yi\"\ndate: \"May 18, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: false\n  echo: true\n  warning: false\n  freeze: true\neditor: visual\n\nformat:\n  html:\n    code-fold: true\n---\n\n\nImport packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(jsonlite, tidyverse, tidyr, \n               knitr, lubridate, dplyr, \n               igraph, ggraph, ggdist, ggplot2, \n               SmartEDA, sf, tidygraph, reshape2, readr,\n               DT, patchwork,plotly)\n```\n:::\n\n\nImport relevant datasets\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntx_qty <- read_csv(\"data/tx_qty.csv\")\nping_activity <- read_csv(\"data/ping_activity.csv\")\nE_Hbrpt_v <- read_csv(\"data/hbrpt.csv\")\n\nN_vessel <- read_csv(\"data/N_vessel.csv\")\nlocation_legend <- read_csv(\"data/location_legend.csv\")\n```\n:::\n\n\nRestating defined conditions and filtering for key data subsets\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvessel_colors <- c(\"Fishing\" = \"#00CCCC\", \n    \"Cargo_Vessel\" = \"#994C00\", \n    \"Ferry_Cargo\" = \"#C0C0C0\", \n    \"Ferry_Passenger\" = \"#C0C0C0\",\n    \"Research\" = \"#C0C0C0\",\n    \"Tour\" = \"#C0C0C0\", \n    \"Other\" = \"#C0C0C0\")\n\n\n# factoring of area\nping_activity$area <- factor(ping_activity$area, \n                             levels = c(\"Nav E\", \"Nav D\", \"Nav C\" , \"Nav B\", \"Nav A\" ,\n                                        \"Nav 3\", \"Nav 2\", \"Nav 1\", \n                                        \"Ghoti Preserve\", \"Don Limpet Preserve\", \"Nemo Reef\", \n                                        \"Cod Table\",\"Tuna Shelf\",\"Wrasse Beds\",\n                                        \"Exit East\", \n                                        \"City of South Paackland\", \"City of Paackland\",\"City of Lomark\",\"City of Himark\",\"City of Haacklee\",\"City of Port Grove\"))\n\n# filtering for fishing and cargo vessels\n\nfishing_v <- N_vessel %>% filter(vessel_type == \"Fishing\")\ncargo_v <- N_vessel %>% filter(vessel_type == \"Cargo_Vessel\")\n\n# filtering for fishing vessel activity and cargo vessel activity\n\nfish_v_activity <- ping_activity %>% \n  filter(vessel_id %in% fishing_v$vessel_id)\n\ncargo_v_activity <- ping_activity %>% \n  filter(vessel_id %in% cargo_v$vessel_id)\n\n# including date that south seafood was caught\ndate_caught <- as.Date(\"2035-05-14\")\n```\n:::\n\n\n4.Addressing Mini-challenge 2 questions\n\n4.1 Sub-question 1: Mapping Cargo to Vessels\n\nPreliminary comparison of total count per port\n\n-   Does purpose or vessel type affect visits - Port Grove only Tourism\n-   Comparing records, habor report includes port grove which is not present in transaction report, hence we will exclude port grove from analysis.\n\nData Processing: Multiple pings from same vessel at same port on the same date, but differing time (hours and minutes) hence, group by same date, same port, and count unique vessel_id.\n\nSubsequently when plotting, excluded the date to aggregate counts per port.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Comparing entries per port with boxplot\n\n## tx_qty -> Type of species per port \ncargo_count <- tx_qty %>%\n  group_by(dest) %>%\n  summarize(cargo_count = n())\n\nunique_dest <- unique(cargo_count$dest) # only 5 cities\n\n## count of vessel by port\nhb_count <- E_Hbrpt_v %>%\n  group_by(port) %>%\n  summarize(vessel_total = n()) \n\nunique_port <- unique(hb_count$port) # 6 cities\n\n## To recalculate based on distinct vessel per day per port. \nfish_dist_p_count <- fish_v_activity %>%\n  mutate(date = as.Date(start_time)) %>%\n  group_by(area, date) %>%\n  summarize(fishv_dist_p_count = n_distinct(vessel_id)) %>%\n  filter(area %in% unique_port)\n\nfish_dist_pcount2 <- fish_dist_p_count %>%\n  group_by(area) %>%\n  summarize(fish_dist_count = n())\n\n## calculate for cargo vessels\n\ncargo_dist_p_count <- cargo_v_activity %>%\n  mutate(date = as.Date(start_time)) %>%\n  group_by(area, date) %>%\n  summarize(cargov_dist_p_count = n_distinct(vessel_id)) %>%\n  filter(area %in% unique_port)\n\ncargo_dist_pcount2 <- cargo_dist_p_count %>%\n  group_by(area) %>%\n  summarize(cargo_dist_count = n())\n\n# merge for plot \ncount <- merge(cargo_count, hb_count, by.x = \"dest\", by.y = \"port\", all = TRUE)\ncount <- merge(count, fish_dist_pcount2, by.x = \"dest\", by.y = \"area\", all = TRUE)\ncount <- merge(count, cargo_dist_pcount2, by.x = \"dest\", by.y = \"area\", all = TRUE)\ncount <- count %>% mutate(across(everything(), ~replace_na(., 0)))\n\ncount$dest <- factor(\n  count$dest, \n  levels = c(\"City of Port Grove\", \"City of Haacklee\", \"City of Himark\", \n             \"City of Lomark\", \"City of Paackland\", \"City of South Paackland\")) \n\n# reshape for plot \ncount2 <- count %>%\n  gather(key = \"type\", value = \"count\", cargo_count, vessel_total, fish_dist_count, cargo_dist_count)\n\ncount2$type <- factor(count2$type, levels = c(\"cargo_count\", \"vessel_total\", \"fish_dist_count\", \"cargo_dist_count\"))\n\n# Define color for the plot\n\ntype_colors <- c(\"cargo_count\" = \"#F8766D\", \n                   \"vessel_total\" = \"black\", \n                   \"fish_dist_count\" = \"#00CCCC\", \n                   \"cargo_dist_count\" = \"#994C00\")\n\n\n# Plot the grouped bar chart with labels\nggplot(count2, aes(x = dest, y = count, fill = type)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  geom_text(aes(label = count), \n            position = position_dodge(width = 0.9), \n            vjust = -0.25, size = 2) + \n  labs(title = \"Comparison of Vessel Count and Cargo Count by Destination\",\n       x = \"Destination\",\n       y = \"Count of vessel / cargo\",\n       fill = \"Type\") +\n  scale_fill_manual(values = type_colors) +  # Set the custom colors\n  theme_minimal(base_size = 8) +\n  theme(axis.line = element_line(color = \"black\"))\n```\n:::\n\n\n## Possible considerations\n\n1 vessel may contribute to various cargo\n\nHowever, as mentioned in the data description, no harbor reports the vessels everyday, the dataset used of `Event.HarborReport` might not have the complete depiction of the vessels arrival.\n\nTo supplement this, we will combine with the `Event.TransponderPing` records for better match.\n\nAttempt #1 to map cargo to vessel by date\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# coloring by illegal fish species \ncargo_color <- c(\"Legal\" = \"#99CCFF\", \"Salmon\" = \"#FFFF99\", \"Illegal\" = \"#FF6666\")\n\nillegal_species = c(\"piscesfoetidaae7\", \"piscisosseusb6d\", \"piscessatisb87\")\nlegal_species =  c(\"gadusnspecificatae4ba\", \"piscissapidum9b7\", \"habeaspisces4eb\", \"piscesfrigus900\", \"labridaenrefert9be\", \"thunnininveradb7\")\nsalmon = c(\"oncorhynchusrosea790\")\n\ncargo_summary <- tx_qty %>%\n  mutate(month = floor_date(as.Date(tx_date), \"month\"), \n         species_type = case_when(\n           fish_species %in% illegal_species ~ \"Illegal\", \n           fish_species %in% legal_species ~ \"Legal\", \n           fish_species %in% salmon ~ \"Salmon\"\n         )) %>%\n  group_by(dest, month, species_type) %>%\n  summarize(cargo_count = n()) \n\n#refactoring to put illegal species at bottom\ncargo_summary$species_type <- factor(cargo_summary$species_type, levels = c(\"Salmon\", \"Legal\", \"Illegal\"))\n\n# calculating median and total cargo count for annotation\n\nmedian_counts <- cargo_summary %>%\n  group_by(dest) %>%\n  summarize(median_count = median(cargo_count))\n\n# Plot the stacked bar graph with reference lines and text labels\nggplot(cargo_summary, aes(x = month, y = cargo_count, fill = species_type)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = cargo_color) +  # Set the custom colors\n  geom_hline(data = median_counts, aes(yintercept = median_count), linetype = \"dashed\", color = \"black\") +\n  geom_vline(xintercept = as.numeric(date_caught), linetype = \"dashed\", color = \"red\") +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") + \n  labs(title = \"Monthly Cargo Count per Port\",\n       x = \"Month\",\n       y = \"Count of Cargo\",\n       fill = \"Species Type\") +\n  facet_grid(dest ~ ., switch = \"y\") +\n  theme_minimal(base_size = 10) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        axis.line = element_line(color = \"black\"),\n        strip.background = element_blank(),\n        strip.placement = \"outside\",\n        strip.text.y.left = element_text(angle = 0)) + \n   annotate(\"text\", x = date_caught, y = 320, label = \"Date caught\", color = \"red\", hjust = 1, size = 3)\n```\n:::\n\n\nAttempt to map vessel to cargo\n\n| Matching Method                                                              | \\% Match           | \\% Mis-match      |\n|-------------------------------------------|---------------|---------------|\n| Tx_c (Cargo import) with E_Hbrpt_v (Vessel Harbor Arrival) by date           | 2454 / 5307 = 46%  | 2853 / 5307 = 54% |\n| Tx_c (Cargo Import) with Ping Activity (Vessel at port) by date              | 5307 / 5307 = 100% |                   |\n| Tx_c (Fish Species) with Ping Activity (Past route & probable fishes caught) |                    |                   |\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# cleaning tx_qty to align date-time to only date \ntx_qty1 <- tx_qty %>% \n  mutate(tx_date = as.Date(tx_date))\n\nm1 <- tx_qty1 %>% left_join(E_Hbrpt_v %>% select(arr_date, port, vessel_id), \n                            by = c(\"tx_date\" = \"arr_date\", \"dest\" = \"port\")) %>%\n  group_by(cargo_id, dest, tx_date) %>%\n  summarize(probable_vessel = list(vessel_id), .groups = \"drop\")\n\nm1_summary <- m1 %>%\n  mutate(match_status = ifelse(is.na(probable_vessel), \"NA\", \"Matched\")) %>%\n  group_by(match_status) %>%\n  summarize(count = n()) %>%\n  mutate(percentage = (count / sum(count)) * 100)\n\n# santising ping activity to table with unique vessel_id per port per date.\n\nping_activity_c <- ping_activity %>%\n  filter(area %in% unique_port, vessel_type == c(\"Fishing\", \"Cargo_Vessel\")) %>%\n  mutate(start_date = as.Date(start_time)) %>%\n  group_by(start_date, area) %>% \n  summarize(probable_vessel = list(unique(vessel_id)), .groups = \"drop\") \n\nm2 <- tx_qty1 %>% left_join(ping_activity_c, \n                            by = c(\"tx_date\" = \"start_date\", \"dest\" = \"area\")) %>%\n  group_by(cargo_id, dest, tx_date)\n\nm2_summary <- m2 %>%\n  mutate(match_status = ifelse(is.na(probable_vessel), \"NA\", \"Matched\")) %>%\n  group_by(match_status) %>%\n  summarize(count = n()) %>%\n  mutate(percentage = (count / sum(count)) * 100)\n\n# mapping route of boats by integrating harbor report\n\n## santising ping activity to focus on fishing and cargo vessels, create new column to assign report type as \"transponderping\" \n\nping_movement <- ping_activity %>%\n  filter(vessel_type == c(\"Fishing\", \"Cargo_Vessel\")) %>%\n  mutate(start_date = as.Date(start_time)) %>%\n  select( c(\"start_date\", \"area\", \"kind\", \"Activities\", \"vessel_id\", \"fish_species_present\", \"vessel_type\", \"vessel_company\")) %>%\n  mutate(report = \"transponderping\")\n\n# aligning columns of E_Hbrpt_v with ping movement (need to match activities with N_City, varying activities per city)\n\nport_record <- E_Hbrpt_v %>% \n  left_join(NL_City, by = c(\"port\" = \"city_id\")) %>%\n  mutate(report = \"hbrpt\", kind = \"city\", fish_species_present = NA) %>% \n  rename(area = port, \n         start_date = arr_date) %>%\n  select(c(\"start_date\", \"area\", \"kind\", \"Activities\", \"vessel_id\", \"fish_species_present\", \"vessel_type\", \"vessel_company\", \"report\"))\n\n# merge route movement\nroute <- bind_rows(ping_movement, port_record)\nroute <- route %>% arrange(vessel_id, start_date)\n\n# vessel_id, trip length, location, possible fish species\n\n#write_csv(route , \"data/route.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nroute_data <- route %>%\n  group_by(vessel_id) %>%\n  mutate(trip_id = cumsum(report == \"hbrpt\")) %>%\n  ungroup()\n\n# Function to process routes for each vessel\nprocess_routes <- function(data) {\n  data %>%\n    group_by(vessel_id, trip_id) %>%\n    summarise(\n      route_start = first(start_date[report == \"hbrpt\"]),\n      route_end = last(start_date[report == \"hbrpt\"]),\n      route_list = paste(\n        c(first(area[report == \"hbrpt\"]), \n          unique(area[report == \"transponderping\"]),\n          last(area[report == \"hbrpt\"])), \n        collapse = \", \"\n      ),\n      probable_fish_species = paste(unique(fish_species_present[report == \"transponderping\"]), collapse = \", \"), \nfinal_area = last(area[report  == \"hbrpt\"])\n    ) %>%\n    ungroup()\n}\n\n# Apply the function to the dataset\nconcatenated_routes <- process_routes(route_data)\n\n# date is wrong for start date \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# filtering to only focus on routes with expected catch\n\nroute_w_catch <- concatenated_routes %>% \n  filter(probable_fish_species != \"\" & \n  probable_fish_species != \"NA\")\n\nwrite_csv(route_w_catch, \"data/route_w_catch.csv\")\n\n# convert fish species to aligned format\n\nlibrary(stringr)\n\nreplacements <- c(\n  `Cod/Gadus n.specificatae` = \"gadusnspecificatae4ba\", \n  `Birdseye/Pisces frigus` = \"piscesfrigus900\", \n  `Sockfish/Pisces foetida` = \"piscesfoetidaae7\", \n  `Wrasse/Labridae n.refert` = \"labridaenrefert9be\", \n  `Beauvoir/Habeas pisces` = \"habeaspisces4eb\", \n  `Harland/Piscis sapidum` = \"piscissapidum9b7\", \n  `Tuna/Thunnini n.vera` = \"thunnininveradb7\", \n  `Offidiaa/Piscis osseus` = \"piscisosseusb6d\", \n  `Helenaa/Pisces satis` = \"piscessatisb87\", `NA` = \"\")\n\nroute_w_catch <- route_w_catch %>%\n  mutate(probable_fish_species = str_replace_all(probable_fish_species, replacements)) \n\nunique(tx_qty1$fish_species)\n\n# consider excluding cargo with salmon catch, because not possible to map - remaining 5003\ntx_qty_wo_sal <- tx_qty1 %>% filter(fish_species != \"oncorhynchusrosea790\")\n\n# exact match on date = 2514\n m3 <- tx_qty_wo_sal %>% \n  left_join(route_w_catch, by = c(\"dest\" = \"final_area\", \"tx_date\" = \"route_end\")) %>%   \n   filter(grepl(fish_species, probable_fish_species))\n\n# Exploring cargos with no match vessels \n\nmismatched_cargo_m3 <- anti_join(tx_qty_wo_sal, m3, by = \"cargo_id\") #4057 returned \n\n# attempt to match cargo to vessel by location (834060 observations returned) - 788038\n\nm3_wo_date <- tx_qty_wo_sal %>% \n  left_join(route_w_catch, by = c(\"dest\" = \"final_area\")) %>% filter(grepl(fish_species, probable_fish_species))\n\n#write_csv(m3_wo_date, \"data/m3_wo_date.csv\")\n\n# doing analysis by time\n# +2 days - 394120\n\nm3_filtered_2days <- m3_wo_date %>%\n  filter(any(tx_date <= route_end + 2 & tx_date >= route_end)) %>%\n  distinct(cargo_id, vessel_id, .keep_all = TRUE) \n\n# +1 days - 394120\n\nm3_filtered_1days <- m3_wo_date %>%\n  filter(any(tx_date <= route_end + 1 & tx_date >= route_end)) %>%\n  distinct(cargo_id, vessel_id, .keep_all = TRUE)\n\n# returning records with nearest date - 11513 \nnearest_tx_date <- m3_wo_date %>%\n  group_by(cargo_id) %>%\n  filter(tx_date > route_end) %>%  \n  filter(abs(difftime(tx_date, route_end, units = \"days\")) == min(abs(difftime(tx_date, route_end, units = \"days\")))) %>%\n  ungroup()\n\n# understanding any cargo not mapped - 46 (not sure why, but should have mapping)\nmismatched_cargo_nearest_tx <- anti_join(tx_qty_wo_sal, nearest_tx_date, by = \"cargo_id\")\n\nunique(mismatched_cargo_nearest_tx$fish_species) #labridaenrefert9be\n\n# understanding average days diff\n\nnearest_tx_date <- nearest_tx_date %>%\n  mutate(days_diff = as.numeric(difftime(tx_date, route_end, units = \"days\")))\n\n# Group by days_diff and count the number of records\ndays_diff_summary <- nearest_tx_date %>%\n  group_by(days_diff) %>%\n  summarize(count = n())\n\n# Plot the bar chart\nggplot(days_diff_summary, aes(x = days_diff, y = count)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Count of Records by Difference in Days\",\n       x = \"Difference in Days\",\n       y = \"Count of Records\") +\n  theme_minimal(base_size = 10) +\n  theme(axis.line = element_line(color = \"black\"))\n\n\n#filtering where vessel went to unique locations, but no expected catch or no fishing areas reached \n\n#suspicious_route <- \n```\n:::\n\n\nEvaluating appropriateness of match - #count of match & mis-match\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Comparing count of cargo and count of vessel at habor by date and port\n\nvessel_type_summary <- E_Hbrpt_v %>%\n  group_by(port, arr_date, vessel_type) %>%\n  summarize(vessel_type_count = n())\n\n# reclass to split count by vessel type\nvessel_type_summary_reshaped <- dcast(vessel_type_summary, port + arr_date ~ vessel_type, value.var = \"vessel_type_count\", fill = 0)\n\n# combine individual vessel type\nvessel_summary2 <- vessel_type_summary_reshaped %>%\n  rename(date = arr_date, port = port) \n\n# combine total count of vessel\nvessel_summary <- vessel_summary %>%\n  rename(date = arr_date, port = port) \n\n# combine cargo count\ncargo_summary2 <- cargo_summary %>% \n  mutate(tx_date = as.Date(tx_date)) %>%\n  rename(date = tx_date, port = dest) # Assuming 'dest' is the correct column name in tx_qty\n\n# Merge the datasets by date and port\nby_time <- merge(vessel_summary2, vessel_summary, by = c(\"port\", \"date\"), all = TRUE)\nby_time <- merge(by_time, cargo_summary2, by = c(\"port\", \"date\"), all = TRUE)\n\n\n# test\nby_time <- by_time %>% mutate(diff_combined = vessel_count - cargo_count, \n                              diff_cargo_v = Cargo_Vessel - cargo_count, \n                              diff_fish_v = Fishing - cargo_count)\n\nview(by_time)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(visNetwork)\n\n# Prepare the data with unique vertex names\ndata <- nearest_tx_date %>%\n  mutate(cargo_id_vertex = paste0(\"cargo_\", cargo_id),\n         vessel_id_vertex = paste0(\"vessel_\", vessel_id))\n\n# Create a combined node list\nnodes <- data %>%\n  select(cargo_id_vertex, vessel_id_vertex) %>%\n  gather(key = \"type\", value = \"name\") %>%\n  distinct(name) %>%\n  mutate(id = name)\n\n# Create an edge list with unique vertex names\nedges <- data %>%\n  select(cargo_id_vertex, vessel_id_vertex, tx_date) %>%\n  group_by(cargo_id_vertex, vessel_id_vertex, tx_date) %>%\n  summarize(weight = n(), .groups = 'drop') %>%\n  rename(from = cargo_id_vertex, to = vessel_id_vertex)\n\ndata <- data %>%\n  mutate(month = format(as.Date(tx_date), \"%Y-%m\"))\n\nedges <- edges %>%\n  left_join(data %>% select(cargo_id_vertex, vessel_id_vertex, month), by = c(\"from\" = \"cargo_id_vertex\", \"to\" = \"vessel_id_vertex\"))\n\ngenerate_network_plot <- function(month) {\n  # Filter data for the selected month\n  edges_filtered <- edges %>% filter(month == month)\n  nodes_filtered <- nodes %>% filter(id %in% c(edges_filtered$from, edges_filtered$to))\n  \n  # Create the visNetwork plot\n  visNetwork(nodes_filtered, edges_filtered, width = \"100%\", height = \"600px\") %>%\n    visEdges(arrows = \"to\") %>%\n    visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%\n    visInteraction(navigationButtons = TRUE) %>%\n    visLayout(randomSeed = 123)\n}\n\n\ngenerate_network_plot(\"2035-05\")\n```\n:::\n",
    "supporting": [
      "Take-home_Ex03_Q1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}